var info =
{
"pages":
[
["Options\u002Fdausrfrontcover.html","Data Access User Manual","This manual consists of a table of contents, preface, 12 chapters, 4 appendixes and a glossary.","Options\u002Fpairs\u002Fpair1.js"]
,["Options\u002Fdausrpart1.html","Part I","Rogue Wave\u00A0Views Data Access Common Framework","Options\u002Fpairs\u002Fpair1_2.js"]
,["Options\u002Fdausrintroduction.03.1.html","Introducing Data Access","This chapter introduces you to the Data Access package of Rogue Wave\u00AE\u00A0Views Studio. You can find information on the following topics:","Options\u002Fpairs\u002Fpair1_3.js"]
,["Options\u002Fdausrintroduction.03.2.html","What is Data Access?","Data Access is a visual environment for graphic-intensive database applications. Using Rogue Wave\u00AE\u00A0Views, it lets you create graphical business objects and link them to data sources to provide intuitive data access.","Options\u002Fpairs\u002Fpair2.js"]
,["Options\u002Fdausrintroduction.03.3.html","Supported Databases","You can use Data Access with the following databases:","Options\u002Fpairs\u002Fpair3.js"]
,["Options\u002Fdausrintroduction.03.4.html","Distribution Structure","When Data Access is installed on your machine, several directories are created, some of them accompanied with a dedicated README file that you are advised to read. The following main directories are created:","Options\u002Fpairs\u002Fpair4.js"]
,["Options\u002Fdausrbasics.04.01.html","Data Access Basics","This chapter briefly describes the Rogue Wave\u00AE\u00A0Views objects that are required to create a basic Data Access application. It then continues with an overview of the basic concepts of Data Access and the C++ classes that are provided in the Data Access API.","Options\u002Fpairs\u002Fpair1_4.js"]
,["Options\u002Fdausrbasics.04.02.html","Overview","Data Access is a library dedicated primarily to the development of client-server database applications. These applications generally consist of forms, which contain a set of fields (text fields, check boxes, and so on). The values shown in these fields are the result of a mapping between the fields ...","Options\u002Fpairs\u002Fpair2_2.js"]
,["Options\u002Fdausrbasics.04.03.html","Rogue Wave\u00A0Views Interface","Data Access is an add-on to Rogue Wave\u00AE\u00A0Views so, therefore, the complete functionality of the Rogue Wave\u00A0Views API is available to users of Data Access. Some Rogue Wave\u00A0Views classes are essential to an application created in Data Access. These are briefly described in this section. For more inform...","Options\u002Fpairs\u002Fpair3_2.js"]
,["Options\u002Fdausrbasics.04.04.html","IlvApplication","Applications built with Rogue Wave\u00A0Views\u00A0Studio contain an instance of a subclass of the IlvApplication class. This class manages the creation of the IlvDisplay object along with the creation of the application panels (that is, containers). Assuming the name of the application is \u201CMyApp\u201D, the follow...","Options\u002Fpairs\u002Fpair4_2.js"]
,["Options\u002Fdausrbasics.04.05.html","Containers","Applications interact with the end user through windows that appear on the computer screen. A container is a window that may hold a given number of graphic objects (such as charts, gauges, buttons, and so on). Most of the interaction between an application and the end user takes place through contai...","Options\u002Fpairs\u002Fpair5.js"]
,["Options\u002Fdausrbasics.04.06.html","Gadgets","Among the graphic objects that can be used in containers, one category of graphic objects is especially relevant for Data Access, namely gadgets.","Options\u002Fpairs\u002Fpair6.js"]
,["Options\u002Fdausrbasics.04.07.html","Callbacks","The behavior of a gadget can be customized by defining a callback function and attaching this function to one of the callback types that the gadget is able to trigger.","Options\u002Fpairs\u002Fpair7.js"]
,["Options\u002Fdausrbasics.04.08.html","Data Access Concepts","This section summarizes the fundamental concepts of Data Access. The information in this introduction is brief. Each section, however, contains a reference to a later chapter where you will find more detailed information.","Options\u002Fpairs\u002Fpair8.js"]
,["Options\u002Fdausrbasics.04.09.html","Values","The C++ language provides different types that can be used to represent values (for example, int, double, char*, and so on). Data Access can deal with data in a uniform way, independently of its type. It uses the IliValue class to represent data whose real type is not known at compile time. See Hand...","Options\u002Fpairs\u002Fpair9.js"]
,["Options\u002Fdausrbasics.04.10.html","Tables","The IliTable abstract class defines an object that resembles a table. See Tables.","Options\u002Fpairs\u002Fpair10.js"]
,["Options\u002Fdausrbasics.04.11.html","Data Sources","Generally speaking, a data source indicates a particular source of information, such as a data feed or a database system.","Options\u002Fpairs\u002Fpair11.js"]
,["Options\u002Fdausrbasics.04.12.html","Data-Source-Aware Gadgets","In Data Access, you will find a set of gadget classes that can be seamlessly integrated with the data sources described in the previous section. These gadgets are known as data-source-aware gadgets.","Options\u002Fpairs\u002Fpair12.js"]
,["Options\u002Fdausrbasics.04.13.html","Integrating with Rogue Wave\u00A0Views Advanced Graphics","One of the interesting features of Data Access is that its complete integration with Rogue Wave\u00A0Views enables the creation of customized graphic objects that are linked to data originating from a Data Access data source. The way in which this can be set up is shown in the following figure:","Options\u002Fpairs\u002Fpair13.js"]
,["Options\u002Ftables.05.01.html","Tables","This chapter describes the most important object in Data Access, the table object. The table is created and manipulated via the IliTable class and its subclasses. This chapter also discusses the IliSchema class and its relationship to table objects.","Options\u002Fpairs\u002Fpair1_5.js"]
,["Options\u002Ftables.05.02.html","Introduction to Tables","The IliTable class plays a central role within Data Access since it serves two fundamental purposes:","Options\u002Fpairs\u002Fpair2_3.js"]
,["Options\u002Ftables.05.03.html","One-Tier and Two-Tier Tables","The subclasses of IliTable manage tables in different ways. IliMemoryTable and IliStringsTable manage rows in the process memory space. These tables are called one-tier tables. Only the local process is involved to manage these types of tables.","Options\u002Fpairs\u002Fpair3_3.js"]
,["Options\u002Ftables.05.04.html","The Role of a Table Object","The primary role of a table object is to manage data. The data is managed in the form of rows of values. But before a table can manage rows, it needs to be properly defined.","Options\u002Fpairs\u002Fpair4_3.js"]
,["Options\u002Ftables.05.05.html","Schemas","This section describes the properties of a table that relate to its columns. These properties are defined by the IliSchema and the IliTable objects.","Options\u002Fpairs\u002Fpair5_2.js"]
,["Options\u002Ftables.05.06.html","Schema Properties","The schema of a table is an ordered collection of columns. Most of the properties relating to the schema of a table are defined by the IliSchema class, from which the IliTable class inherits. However, the \u201Cmapping\u201D properties are defined by the IliTable class. Each column in a schema has the followi...","Options\u002Fpairs\u002Fpair6_2.js"]
,["Options\u002Ftables.05.07.html","Defining the Schema of a Table Object","This section shows how a table can be created and its schema defined. Since the IliTable class is abstract and therefore cannot be instantiated, the IliMemoryTable class is used in the example below.","Options\u002Fpairs\u002Fpair7_2.js"]
,["Options\u002Ftables.05.08.html","Managing Rows in a Table","The IliTable class provides a set of virtual member functions that can be used to manage the rows of a table. Basic row management techniques that apply to all table types are described first. Then, the special case of two-tier tables is described.","Options\u002Fpairs\u002Fpair8_2.js"]
,["Options\u002Ftables.05.09.html","Basic Techniques","The main operations that can be performed on a row are:","Options\u002Fpairs\u002Fpair9_2.js"]
,["Options\u002Ftables.05.10.html","Techniques for Two-Tier Tables","The IliTable class also provides a set of member functions dedicated to managing two-tier tables. A two-tier table is tied to rows that are managed by some external process or system; therefore serving as a bridge between Data Access and this external system. For instance, the IliSQLTable class (des...","Options\u002Fpairs\u002Fpair10_2.js"]
,["Options\u002Ftables.05.11.html","Error Catching","All operations that are carried out on the rows of a table can fail for a variety of reasons. If an operation fails, an IliErrorMessage object that describes the error is created. The member function that triggered the error returns an error status.","Options\u002Fpairs\u002Fpair11_2.js"]
,["Options\u002Ftables.05.12.html","Changing Error Messages","Data Access and Rogue Wave\u00AE\u00A0Views DB Link error messages are translated in message database files.","Options\u002Fpairs\u002Fpair12_2.js"]
,["Options\u002Ftables.05.13.html","Table Hook","The IliTableHook class can be used to monitor the changes that a table object undergoes. The IliTableHook class has a number of virtual member functions that can be overloaded in subclasses to monitor different events that occur within a table object.","Options\u002Fpairs\u002Fpair13_2.js"]
,["Options\u002Ftables.05.14.html","Copying and Serializing Table Objects","A table object can be copied with the IliTable::copyTable member function.","Options\u002Fpairs\u002Fpair14.js"]
,["Options\u002Ftables.05.15.html","Specialized Table Subclasses","The Data Access library provides subclasses of the IliTable class. Each one is dedicated to a specific row management policy.","Options\u002Fpairs\u002Fpair15.js"]
,["Options\u002Ftables.05.16.html","IliSQLTable","The IliSQLTable class implements the table interface by managing rows that are located in a remote relational database system. It handles all communication aspects with the database system, such as the generation of SQL statements, error checking, and so on.","Options\u002Fpairs\u002Fpair16.js"]
,["Options\u002Ftables.05.17.html","IliMemoryTable","A memory table is a table that is managed locally in memory. You would use this type of table for data that is required only temporarily and therefore is not stored in a database. The SQL query language cannot be used with memory tables.","Options\u002Fpairs\u002Fpair17.js"]
,["Options\u002Ftables.05.18.html","IliStringsTable","The IliStringsTable class defines a one-tier table with a single column of type string. It is similar to the IliMemoryTable class, with the following exceptions:","Options\u002Fpairs\u002Fpair18.js"]
,["Options\u002Ftables.05.19.html","IliMapTable","The IliMapTable class defines one-tier tables with two columns, the first column being of type integer and the second of type string. It is similar to the IliMemoryTable class, with the following exceptions:","Options\u002Fpairs\u002Fpair19.js"]
,["Options\u002Ftables.05.20.html","Subclassing IliTable","This section describes how to subclass the IliTable class to create your own custom table classes.","Options\u002Fpairs\u002Fpair20.js"]
,["Options\u002Ftables.05.21.html","Guidelines","When subclassing IliTable, the following guidelines should be respected:","Options\u002Fpairs\u002Fpair21.js"]
,["Options\u002Ftables.05.22.html","Subclassing Example","Here is an example that defines a DirectoryTable class. This class manages files in a directory. Within this example, the member functions that are used to notify the Data Access library when certain events occur appear in bold type.","Options\u002Fpairs\u002Fpair22.js"]
,["Options\u002Ftables.05.23.html","Directory Class Example","The directory class could be used in the following way:","Options\u002Fpairs\u002Fpair23.js"]
,["Options\u002Ftables.05.24.html","Persistence","Having created a custom table class, you may want to make it persistent. Making it persistent means that it is integrated in Rogue Wave\u00AE\u00A0Views Studio. It can appear in the Data Access palette of the Palettes panel and can be used in the same way as other Data Access classes. For example, you may wan...","Options\u002Fpairs\u002Fpair24.js"]
,["Options\u002Ftables.05.25.html","Table Properties","The IliTable class supports annotating parts of a table with properties. In contrast to the primary content of the table (the table\u0027s rows), the properties are not constrained by the table schema.","Options\u002Fpairs\u002Fpair25.js"]
,["Options\u002Ftables.05.26.html","Scoped Properties","There is a containment relationship between the different types of parts of a table:","Options\u002Fpairs\u002Fpair26.js"]
,["Options\u002Ftables.05.27.html","Property-Aware Gadgets","Data-source-aware gadgets can be sensitive to given properties. Each gadget specifies the property names to which it is sensitive and what values are expected for these properties. It is then possible to change the behavior or look of the gadget by changing the property value of the table part to wh...","Options\u002Fpairs\u002Fpair27.js"]
,["Options\u002Fdatasource.06.01.html","Data Sources and Gadgets","This chapter describes data sources and the gadgets, called data-source-aware gadgets, that can be connected to data sources.","Options\u002Fpairs\u002Fpair1_6.js"]
,["Options\u002Fdatasource.06.02.html","Data Sources","Data Access provides an IliDataSource class that \u201Cglues\u201D table objects (the IliTable class and its subclasses) and gadgets used for data entry.","Options\u002Fpairs\u002Fpair2_4.js"]
,["Options\u002Fdatasource.06.03.html","Creating a Data Source Gadget","A data source is a gadget that manages an IliTable object. The following code sample shows how a data source can be created and set up to manage a memory table:","Options\u002Fpairs\u002Fpair3_4.js"]
,["Options\u002Fdatasource.06.04.html","Connecting Data-Source-Aware Gadgets","A data-source-aware gadget is a gadget that can be connected to a data source. The following code sample shows how an IliEntryField gadget is created.","Options\u002Fpairs\u002Fpair4_4.js"]
,["Options\u002Fdatasource.06.05.html","The Scope of a Data Source","A data source can be accessed either by the gadgets in its own panel or by gadgets in other panels. A data source can be accessed by gadgets located in other unrelated panels only if it has global scope. The IliDataGem class has two member functions, hasGlobalScope and setGlobalScope, that let you d...","Options\u002Fpairs\u002Fpair5_3.js"]
,["Options\u002Fdatasource.06.06.html","Managing Rows in a Data Source","Once a data source gadget has been defined and gadgets have been connected to it, the row management member functions of the data source can be used. These row management functions differ from the IliTable row management functions in that they are based on the concept of a current row. Changing the ...","Options\u002Fpairs\u002Fpair6_3.js"]
,["Options\u002Fdatasource.06.07.html","Customizing a Data Source","The behavior of a data source can be customized using callbacks. A callback is a C++ function that will be called when a given event occurs. A callback can be defined by calling one of the IlvGraphic::setCallback or IlvGraphic::addCallback member functions.","Options\u002Fpairs\u002Fpair7_3.js"]
,["Options\u002Fdatasource.06.08.html","Error Handling","This section provides information on three topics concerning the handling of errors for a data source: error catching, error reporting, and error raising.","Options\u002Fpairs\u002Fpair8_3.js"]
,["Options\u002Fdatasource.06.09.html","The Repository","There are two ways in which a data source can be retrieved when its name is known:","Options\u002Fpairs\u002Fpair9_3.js"]
,["Options\u002Fdatasource.06.10.html","Data-Source-Aware Gadgets","This section describes the gadgets that can connect to a data source. These gadgets inherit from both the IlvGadget and the IliFieldItf classes.","Options\u002Fpairs\u002Fpair10_3.js"]
,["Options\u002Fdatasource.06.11.html","Interface to Data-Source-Aware Gadgets","Data-source-aware gadgets have a common interface that is defined by the IliFieldItf class.","Options\u002Fpairs\u002Fpair11_3.js"]
,["Options\u002Fdatasource.06.12.html","IliTableGadget","","Options\u002Fpairs\u002Fpair12_3.js"]
,["Options\u002Fdatasource.06.13.html","IliDbField","","Options\u002Fpairs\u002Fpair13_3.js"]
,["Options\u002Fdatasource.06.14.html","IliEntryField","","Options\u002Fpairs\u002Fpair14_2.js"]
,["Options\u002Fdatasource.06.15.html","IliTableComboBox","","Options\u002Fpairs\u002Fpair15_2.js"]
,["Options\u002Fdatasource.06.16.html","IliDbText","","Options\u002Fpairs\u002Fpair16_2.js"]
,["Options\u002Fdatasource.06.17.html","IliDbToggle","","Options\u002Fpairs\u002Fpair17_2.js"]
,["Options\u002Fdatasource.06.18.html","IliToggleSelector","","Options\u002Fpairs\u002Fpair18_2.js"]
,["Options\u002Fdatasource.06.19.html","IliDbNavigator","IliDbNavigator is a gadget that lets the end user carry out certain actions on the data source. When a table is being edited via a form or table, the current row (record) is stored in a buffer (specified by IliTableBuffer). The end user is free to edit any of the values shown in the current record.","Options\u002Fpairs\u002Fpair19_2.js"]
,["Options\u002Fdatasource.06.20.html","IliDbTimer","","Options\u002Fpairs\u002Fpair20_2.js"]
,["Options\u002Fdatasource.06.21.html","IliHTMLReporter","","Options\u002Fpairs\u002Fpair21_2.js"]
,["Options\u002Fdatasource.06.22.html","IliXML","","Options\u002Fpairs\u002Fpair22_2.js"]
,["Options\u002Fdatasource.06.23.html","IliDbPicture","","Options\u002Fpairs\u002Fpair23_2.js"]
,["Options\u002Fdatasource.06.24.html","IliDbOptionMenu","","Options\u002Fpairs\u002Fpair24_2.js"]
,["Options\u002Fdatasource.06.25.html","IliDbStringList","","Options\u002Fpairs\u002Fpair25_2.js"]
,["Options\u002Fdatasource.06.26.html","IliDbTreeGadget","","Options\u002Fpairs\u002Fpair26_2.js"]
,["Options\u002Fdatasource.06.27.html","IliChartGraphic","","Options\u002Fpairs\u002Fpair27_2.js"]
,["Options\u002Fdatasource.06.28.html","IliDbGrapher","","Options\u002Fpairs\u002Fpair28.js"]
,["Options\u002Fdatasource.06.29.html","IliDbGantt","","Options\u002Fpairs\u002Fpair29.js"]
,["Options\u002Fdatasource.06.30.html","Global Callbacks","Gadget behavior can be customized using callbacks. Data Access supports four ways of defining callbacks.","Options\u002Fpairs\u002Fpair30.js"]
,["Options\u002Fvaluehandling.07.1.html","Handling Values in Data Access","This chapter describes how Data Access handles values. They are implemented by the IliValue class and the following sections describe how to use an IliValue object.","Options\u002Fpairs\u002Fpair1_7.js"]
,["Options\u002Fvaluehandling.07.2.html","The IliValue Class","The IliValue class supports polymorphism for the most primitive data types, such as character strings, integers, and float values. An IliValue object can hold a value belonging to any of these primitive types. Moreover, the type of a value can be changed dynamically. This class works in conjunction ...","Options\u002Fpairs\u002Fpair2_5.js"]
,["Options\u002Fvaluehandling.07.3.html","Constructing a Value Object","There are two ways to construct a value. It can be specified with an initial value:","Options\u002Fpairs\u002Fpair3_5.js"]
,["Options\u002Fvaluehandling.07.4.html","Null Value","The null value is a special value that can be used to denote an unspecified value. You can check for the null value with the IliValue::isNull method.","Options\u002Fpairs\u002Fpair4_5.js"]
,["Options\u002Fvaluehandling.07.5.html","Data Types","The IliValue class works in close conjunction with the IliDatatype class. This class specifies the type of an IliValue object. An instance of the IliDatatype class exists for each supported type. The possible data types are:","Options\u002Fpairs\u002Fpair5_4.js"]
,["Options\u002Fvaluehandling.07.6.html","Checking the Data Type of an Object","The data type of an object can be checked using the IliValue::getType method in the following way:","Options\u002Fpairs\u002Fpair6_4.js"]
,["Options\u002Fvaluehandling.07.7.html","Converting a Data Access Data Type to a C++ Type","To manipulate the data in an application, you will need to work with values in the standard C++ types:","Options\u002Fpairs\u002Fpair7_4.js"]
,["Options\u002Fvaluehandling.07.8.html","Formatting an IliValue Object","An IliValue object can be formatted using the IliValue::format member function. This is shown in the following example:","Options\u002Fpairs\u002Fpair8_4.js"]
,["Options\u002Fvaluehandling.07.9.html","Structured Types","The Data Access type system can be extended beyond the basic data types described in the previous sections. This occurs automatically when structured values are obtained from a database system such as Oracle 9i (or later) or Informix 9.x.","Options\u002Fpairs\u002Fpair9_4.js"]
,["Options\u002Fhintandtip.08.01.html","Hints and Tips for Using Data Access","This chapter contains some useful hints for using Data Access. The most common user requirements are described, along with tips on how to use the features of Data Access to satisfy these requirements. The chapter primarily discusses the way to set up your application using Rogue Wave\u00AE\u00A0Views\u00A0Studio, ...","Options\u002Fpairs\u002Fpair1_8.js"]
,["Options\u002Fhintandtip.08.02.html","Working with DbFields in Data Access","This section describes the IliDbField class and the different forms that it can take. A DbField gadget is an entry field that can be connected to the column of a table object. The DbField gadget then displays the value of this column for the current record. A form is made up of DbField objects with ...","Options\u002Fpairs\u002Fpair2_6.js"]
,["Options\u002Fhintandtip.08.03.html","The Style of a DbField","A IliDbField object can dynamically change its look and feel. Its style can be any of the following:","Options\u002Fpairs\u002Fpair3_6.js"]
,["Options\u002Fhintandtip.08.04.html","Creating a Form Using the Forms Assistant","A form in Data Access is a set of gadgets that lets you display all the values in a table object row, thus providing easier access than with a table gadget. An instant form can be obtained from the Forms Assistant command in the Data Access menu in Rogue Wave\u00AE\u00A0Views Studio.","Options\u002Fpairs\u002Fpair4_6.js"]
,["Options\u002Fhintandtip.08.05.html","Foreign Tables","Any table object in Data Access can be used as a foreign table; that is, the IliTable subclasses, IliSQLTable, IliMemoryTable, and so on. A foreign table is identified as such from another object. Each column of a table object or of the IliDbField,IliTableComboBox, and IliToggleSelector gadgets can ...","Options\u002Fpairs\u002Fpair5_5.js"]
,["Options\u002Fhintandtip.08.06.html","Specifying a Foreign Table in Rogue Wave\u00A0Views\u00A0Studio","A foreign table can be set up for the data source or for an individual gadget. The IliDbField, IliTableComboBox, and IliToggleSelector gadgets can have a foreign table. The foreign table is set up for a particular column in the appropriate inspector.","Options\u002Fpairs\u002Fpair6_5.js"]
,["Options\u002Fhintandtip.08.07.html","Using a Foreign Table to Convert Values","If you are using the foreign table to convert values, the value and display columns will be different columns in the foreign table. The values in a table object column are converted in the following way.","Options\u002Fpairs\u002Fpair7_5.js"]
,["Options\u002Fhintandtip.08.08.html","Using a Foreign Table to Constrain Values","A foreign table can also be used to constrain values. To use a foreign table in this way, specify a value and a display column that are the same column. In addition, set the Constrained option in the appropriate inspector to Yes.","Options\u002Fpairs\u002Fpair8_5.js"]
,["Options\u002Fhintandtip.08.09.html","Using the Forms Assistant with Foreign Tables","When you create an automatic form using the Forms Assistant option in the Data Access menu of Rogue Wave\u00A0Views\u00A0Studio, a column that already has a foreign table will automatically have a combo box for a field.","Options\u002Fpairs\u002Fpair9_5.js"]
,["Options\u002Fhintandtip.08.10.html","Setting the Table Look","The SQL Data Source and the Memory Data Source inspectors provide a Look page that allows you to set several properties. These properties are special in that they apply to any table gadgets or forms (created using the Forms Assistant) that are connected to the data source. They include the text alig...","Options\u002Fpairs\u002Fpair10_4.js"]
,["Options\u002Fhintandtip.08.11.html","Column Geometry","When a number of table gadgets are connected to the same data source, column geometry is controlled globally via the data source. This means that if you manually change the column width in one table gadget, the change will automatically be reflected in any other table gadget that is connected to the...","Options\u002Fpairs\u002Fpair11_4.js"]
,["Options\u002Fhintandtip.08.12.html","Read-Only Settings","A table object column can be set as read-only. This means that the values in the column can only be consulted and not modified. If you set up a column as being read-only in the data source inspector, this will apply to any connected table gadget or form that is subsequently created with the Forms As...","Options\u002Fpairs\u002Fpair12_4.js"]
,["Options\u002Fhintandtip.08.13.html","Fixed Columns","A table gadget can be set so that when you horizontally scroll the table a set number of the columns on the far left side of the table always stay in position. This is useful for columns that contain key information, such as the record name.","Options\u002Fpairs\u002Fpair13_4.js"]
,["Options\u002Fhintandtip.08.14.html","Troubleshooting","This section describes some of situations that you should be careful to avoid as they can cause unexpected results in your application.","Options\u002Fpairs\u002Fpair14_3.js"]
,["Options\u002Fhintandtip.08.15.html","Avoiding Common Names in Foreign Tables","When a gadget is tied to a table column and has a foreign table, you must ensure that the Data Source and Column gadget values are never the same as its Foreign Data Source and Foreign Value Column\u002FForeign Display Column.","Options\u002Fpairs\u002Fpair15_3.js"]
,["Options\u002Fhintandtip.08.16.html","Matching Types with a Foreign Table","When a gadget has a foreign table, the actual value of the column to which it is tied is compared with a value column in the foreign table to identify a value to be displayed from the foreign table display column. It is therefore important to ensure that the type of gadget column and the foreign tab...","Options\u002Fpairs\u002Fpair16_3.js"]
,["Options\u002Fdausrpart2.html","Part II","Data Access and SQL","Options\u002Fpairs\u002Fpair1_9.js"]
,["Options\u002Fsqltables.10.01.html","SQL Tables","You were given an overview of table objects in Tables. An SQL table is a table object that is used when Data Access is connected to an SQL database. This chapter describes the SQL table object in more detail.","Options\u002Fpairs\u002Fpair1_10.js"]
,["Options\u002Fsqltables.10.02.html","Introduction","The IliSQLTable class defines an object that manages rows on a remote relational database management system. It is created automatically when an IliSQLDataSource is created. Each IliSQLDataSource object has an associated IliSQLTable.","Options\u002Fpairs\u002Fpair2_7.js"]
,["Options\u002Fsqltables.10.03.html","Structural Definition","Each IliSQLTable object must have an associated SQL SELECT statement that is submitted to the database system whenever the rows of the SQL table object need to be recomputed.","Options\u002Fpairs\u002Fpair3_7.js"]
,["Options\u002Fsqltables.10.04.html","Creating the Definition Using Rogue Wave\u00A0Views\u00A0Studio","The IliSQLTable can be defined interactively in Rogue Wave\u00A0Views\u00A0Studio through the IliSQLDataSource object inspector.","Options\u002Fpairs\u002Fpair4_7.js"]
,["Options\u002Fsqltables.10.05.html","Creating the Definition in C++","All of the steps described in the previous section can also be carried out by coding in C++. This following example shows how this can be done:","Options\u002Fpairs\u002Fpair5_6.js"]
,["Options\u002Fsqltables.10.06.html","A Shortcut C++ Definition","The IliSQLTable::setQueryFrom member function allows you to define an IliSQLTable that has only one database table. Here is an example:","Options\u002Fpairs\u002Fpair6_6.js"]
,["Options\u002Fsqltables.10.07.html","The SQL Session of an SQL Table","An IliSQLTable object must have a properly defined SQL session before any real work can be done. The SQL session handles all requests sent to a database server. See SQL Sessions and Cursor Objects.","Options\u002Fpairs\u002Fpair7_6.js"]
,["Options\u002Fsqltables.10.08.html","Run-Time Options","This section contains information on the options that affect the way an IliSQLTable object behaves. These options can be set through the API using the appropriate member functions in the IliSQLTable class.","Options\u002Fpairs\u002Fpair8_6.js"]
,["Options\u002Fsqltables.10.09.html","Concurrency Control","In a client-server environment, there can be multiple client programs simultaneously accessing the same data in the database server. When concurrency control is enabled, any row updates or deletions in an SQL table will succeed only if the rows concerned have not changed in the database since the la...","Options\u002Fpairs\u002Fpair9_6.js"]
,["Options\u002Fsqltables.10.10.html","Auto-Commit Mode","When the auto-commit mode is enabled, the IliSQLTable object commits the transaction immediately after an INSERT, UPDATE or DELETE operation. When auto-commit is disabled, the transaction must be committed (through the effective SQL session) as required.","Options\u002Fpairs\u002Fpair10_5.js"]
,["Options\u002Fsqltables.10.11.html","Fetch Policy","Data Access supports two ways of fetching rows from the database after a successful SELECT operation: either all rows are fetched at once at select time or the retrieval of rows is delayed until required. The fetch policy of an SQL table can be set using the IliSQLTable::setFetchPolicy member functi...","Options\u002Fpairs\u002Fpair11_5.js"]
,["Options\u002Fsqltables.10.12.html","Auto-Refresh Mode","When auto-refresh mode is enabled, an INSERT or UPDATE operation on the database is followed immediately by a request to the database for the inserted or updated row. The row obtained via this request replaces the inserted or updated row in the IliSQLTable object.","Options\u002Fpairs\u002Fpair12_5.js"]
,["Options\u002Fsqltables.10.13.html","Inserting-Nulls Mode","When inserting a row in a database table, the row can contain one or more NULL values.","Options\u002Fpairs\u002Fpair13_5.js"]
,["Options\u002Fsqltables.10.14.html","Dynamic-SQL Mode","When a row is edited, it can contain some modified values and some values that remain unchanged. For instance, assuming the address of employee Williams is modified, the following example shows the SQL statement that would be generated if dynamic-SQL is enabled:","Options\u002Fpairs\u002Fpair14_4.js"]
,["Options\u002Fsqltables.10.15.html","Bound Variables Mode","Most database systems support the use of bound variables in SQL statements. When bound variables are used, the SQL statements contain variable markers. Here is an example:","Options\u002Fpairs\u002Fpair15_4.js"]
,["Options\u002Fsqltables.10.16.html","Cursor Buffering","Cursor buffering is a way to obtain better throughput when fetching a large number of rows. It consists of having the lower layers of the database library fetch more than one row at a time from the database server.","Options\u002Fpairs\u002Fpair16_4.js"]
,["Options\u002Fsqltables.10.17.html","Auto-Row Locking Mode","The IliSQLTable class has a refreshAndLockRow member function that rereads a given row and attempts to acquire a lock on this row in the database. This is useful if you want to implement the \u201Cpessimistic concurrency control policy\u201D.","Options\u002Fpairs\u002Fpair17_3.js"]
,["Options\u002Fsqltables.10.18.html","Parameters","The SQL SELECT statement of an IliSQLTable object can contain references to parameters. See Parameters. Here is an example:","Options\u002Fpairs\u002Fpair18_3.js"]
,["Options\u002Fsqltables.10.19.html","Transaction Manager","The IliTransactionManager class manages so-called local transactions in which the propagation of changes of one or more IliTable objects is deferred. This is especially useful when using IliSQLTable objects. In effect, each time a row is inserted, updated, or deleted in an IliSQLTable object, one or...","Options\u002Fpairs\u002Fpair19_3.js"]
,["Options\u002Fsqltables.10.20.html","Structured Types","Some database systems (for example, Oracle 9i or later, Informix 9.x) support extensible type systems in which the type of a database table column is not limited to the traditional scalar data types. It can also be either a structured type or a collection type.","Options\u002Fpairs\u002Fpair20_3.js"]
,["Options\u002Fsqltables.10.21.html","Asynchronous Mode","Normally, calls made by a client application to a database server are blocking. This means that the client application has to wait for server replies each time it submits an SQL statement or when it attempts to fetch rows. The effect of this is that the end user may feel that the application is not ...","Options\u002Fpairs\u002Fpair21_3.js"]
,["Options\u002Fsqldatasources.11.1.html","SQL Data Sources","This chapter provides information on SQL data sources, including how to define parameters in an SQL table and SQL data sources.","Options\u002Fpairs\u002Fpair1_11.js"]
,["Options\u002Fsqldatasources.11.2.html","Query Mode","The IliDataSource and IliSQLTable classes support query mode.","Options\u002Fpairs\u002Fpair2_8.js"]
,["Options\u002Fsqldatasources.11.3.html","Parameters","Parameters can be defined in the SQL table via the data source in Rogue Wave\u00AE\u00A0Views Studio. These parameters can be used to filter the data that is displayed in a form.","Options\u002Fpairs\u002Fpair3_8.js"]
,["Options\u002Fsqldatasources.11.4.html","Defining a Parameter","A parameter is defined in the SQL Data Source inspector on the Parameters page. In the table on the Parameters page, you can enter as many parameters as you need.","Options\u002Fpairs\u002Fpair4_8.js"]
,["Options\u002Fsqldatasources.11.5.html","Defining a Parameter That Accepts User Input","In the Rogue Wave\u00A0Views Data Access Getting Started Manual, you saw how to filter data according to the values in a column of another data source table. It is possible to adapt this behavior to accept user input as a parameter. This can be done using a memory data source.","Options\u002Fpairs\u002Fpair5_7.js"]
,["Options\u002Fsqldatasources.11.6.html","Working with an SQL Data Source","This section contains some hints for using the SQL data source.","Options\u002Fpairs\u002Fpair6_7.js"]
,["Options\u002Fsqldatasources.11.7.html","Defining Columns","When you add a database table to a data source, you can tie the columns of the table to the columns of the data source table. This can either be done graphically or manually in the data source inspector.","Options\u002Fpairs\u002Fpair7_7.js"]
,["Options\u002Fsqldatasources.11.8.html","Forcing the Name of a Column","When a table is added to an SQL data source and the columns of the underlying table object are specified, you will notice that the name of the column is automatically set. It is automatically set to the name of the database table column. In most situations, this behavior is acceptable. However, ther...","Options\u002Fpairs\u002Fpair8_7.js"]
,["Options\u002Fsqldatasources.11.9.html","The Table Primary Key","When you set up an SQL data source and its table object, you must include each of the primary key columns in the table object. If you do not do this, you can find that two of the rows in your table appear to be the same, even though they are uniquely identified by the primary key column(s).","Options\u002Fpairs\u002Fpair9_7.js"]
,["Options\u002Fdbconnect.12.1.html","Connecting to a Database","This chapter describes the Data Access classes and functions required for communicating with a relational database system.","Options\u002Fpairs\u002Fpair1_12.js"]
,["Options\u002Fdbconnect.12.2.html","SQL Sessions and Cursor Objects","The IliSQLSession class establishes a communication channel with a remote database engine. An instance of this class is created whenever you connect to a relational database using the Connect panel in Rogue Wave\u00AE\u00A0Views\u00A0Studio.","Options\u002Fpairs\u002Fpair2_9.js"]
,["Options\u002Fdbconnect.12.3.html","Connecting to a Database System","Once you have created a session object, you can connect to the database system using the IliSQLSession::connect member function. This is done in the following way:","Options\u002Fpairs\u002Fpair3_9.js"]
,["Options\u002Fdbconnect.12.4.html","Cursors","Before you can do anything useful with your session object, you must obtain an IliSQLCursor object. The cursor allows you to submit SQL statements to a database and to retrieve any result sets produced by these statements. A cursor can be created in the following way:","Options\u002Fpairs\u002Fpair4_9.js"]
,["Options\u002Fdbconnect.12.5.html","Database Drivers","The IliSQLSession class can be used to communicate with different database servers. To connect a session object to a given database server, the corresponding database driver must be included in the application executable file.","Options\u002Fpairs\u002Fpair5_8.js"]
,["Options\u002Fdbconnect.12.6.html","The Connect Dialog Box","In the section Creating a Session, you saw how a session object is created with the connection parameters (user name, password, and so on) hard-coded in the source code. The IliSQLSession::queryConnect member function can be used to obtain some or all of these parameters from the end user.","Options\u002Fpairs\u002Fpair6_8.js"]
,["Options\u002Fdbconnect.12.7.html","Registered Sessions","When you use the Rogue Wave\u00AE\u00A0Views\u00A0Studio editor to create the panels of an application, you can define application-wide sessions and then specify one or more SQL data sources that share the same session. An application-wide session is, in fact, a registered session object.","Options\u002Fpairs\u002Fpair7_8.js"]
,["Options\u002Fdausrpart3.html","Part III","Rogue Wave\u00A0Views Data Access Gadgets","Options\u002Fpairs\u002Fpair1_13.js"]
,["Options\u002Fdagadgets.14.01.html","Rogue Wave\u00A0Views Studio Data Access Gadgets","This chapter introduces the Data Access gadgets found on the Palettes panel.","Options\u002Fpairs\u002Fpair1_14.js"]
,["Options\u002Fdagadgets.14.02.html","The Palettes Panel","The Palettes panel appears when Data Access is launched. If it has been closed and you want to open it, choose Palettes from the Tools menu in the Rogue Wave\u00AE\u00A0Views Studio Main window.","Options\u002Fpairs\u002Fpair2_10.js"]
,["Options\u002Fdagadgets.14.03.html","Data Access and SQL Gadgets","The gadgets illustrated below appear when you select Data Access or SQL Gadgets on the Palettes panel.","Options\u002Fpairs\u002Fpair3_10.js"]
,["Options\u002Fdagadgets.14.04.html","Charts, Grapher and Gantt Chart Gadgets","The gadgets illustrated below appear when you select Charts, Grapher and Gantt Chart under Data Access on the Palettes panel.","Options\u002Fpairs\u002Fpair4_10.js"]
,["Options\u002Fdagadgets.14.05.html","SQL Tables","When you select SQL Tables under Data Access on the Palettes panel, the lower pane is empty.","Options\u002Fpairs\u002Fpair5_9.js"]
,["Options\u002Fdagadgets.14.06.html","Notebook Pages Common to Data Access Gadgets Inspectors","Most Data Access gadgets inspectors have a General and a Callbacks notebook page.","Options\u002Fpairs\u002Fpair6_9.js"]
,["Options\u002Fdagadgets.14.07.html","Callbacks Notebook Page","The first six callbacks are common to most inspectors. However, the IliDbChart, IliDbGrapher, and IliDbGantt inspectors have only the first two callbacks.","Options\u002Fpairs\u002Fpair7_9.js"]
,["Options\u002Fdagadgets.14.08.html","Dialog Boxes Common to Data Access Gadgets Inspectors","The dialog boxes that can be called from various Data Access gadgets inspectors are described in this section.","Options\u002Fpairs\u002Fpair8_8.js"]
,["Options\u002Fdagadgets.14.09.html","Font Chooser Dialog Box","The Font Chooser dialog box is used to choose the font style for text.","Options\u002Fpairs\u002Fpair9_8.js"]
,["Options\u002Fdagadgets.14.10.html","Color Chooser Dialog Box","Use the Color Chooser dialog box for choosing the background and text colors. You can select the colors by name or by using the color disk.","Options\u002Fpairs\u002Fpair10_6.js"]
,["Options\u002Fdagadgets.14.11.html","File Chooser Dialog Box","Data Access gadgets inspectors use a file chooser dialog box to select:","Options\u002Fpairs\u002Fpair11_6.js"]
,["Options\u002Fdsgadgets.15.1.html","Data Source Gadgets Reference","This chapter describes the two data source creation gadgets:","Options\u002Fpairs\u002Fpair1_15.js"]
,["Options\u002Fdsgadgets.15.2.html","IliSQLDataSource","The IliSQLDataSource gadget is used for creating a data source by:","Options\u002Fpairs\u002Fpair2_11.js"]
,["Options\u002Fdsgadgets.15.3.html","IliSQLDataSource Inspector Panel","This panel appears by double-clicking the gadget-icon after having placed it in the Gadgets buffer window.","Options\u002Fpairs\u002Fpair3_11.js"]
,["Options\u002Fdsgadgets.15.4.html","IliSQLDataSource Menus","The SQL Data Source inspector panel has two menus:","Options\u002Fpairs\u002Fpair4_11.js"]
,["Options\u002Fdsgadgets.15.5.html","General Elements","These elements apply to the SQL data source as a whole.","Options\u002Fpairs\u002Fpair5_10.js"]
,["Options\u002Fdsgadgets.15.6.html","SELECT Section Notebook Pages","The SELECT section of the SQL Data Source inspector panel has six notebook pages:","Options\u002Fpairs\u002Fpair6_10.js"]
,["Options\u002Fdsgadgets.15.7.html","Dialog Boxes","Various elements in the SQL Data Source inspector panel can call different dialog boxes:","Options\u002Fpairs\u002Fpair7_10.js"]
,["Options\u002Fdsgadgets.15.8.html","IliMemoryDataSource","The IliMemoryDataSource gadget is used for:","Options\u002Fpairs\u002Fpair8_9.js"]
,["Options\u002Fdisplaygadgets.16.01.html","Display Gadgets Reference","This chapter describes the display gadgets listed below. To access these gadgets, click Data Access or Grapher or Gantt Chart in the Palettes panel. The gadgets appear in the lower pane. To use a gadget, drag-and-drop it in the Gadgets buffer window.","Options\u002Fpairs\u002Fpair1_16.js"]
,["Options\u002Fdisplaygadgets.16.02.html","IliTableGadget","The IliTableGadget is used for editing and displaying tables.","Options\u002Fpairs\u002Fpair2_12.js"]
,["Options\u002Fdisplaygadgets.16.03.html","Table Gadget Inspector Panel","The IliTableGadget inspector has four notebook pages:","Options\u002Fpairs\u002Fpair3_12.js"]
,["Options\u002Fdisplaygadgets.16.04.html","IliDbField","The IliDbField gadget is used for displaying data with a data-source-aware gadget whose appearance can be dynamically changed (see the Style field below).","Options\u002Fpairs\u002Fpair4_12.js"]
,["Options\u002Fdisplaygadgets.16.05.html","DbField Inspector Panel","The IliDbField inspector has four notebook pages:","Options\u002Fpairs\u002Fpair5_11.js"]
,["Options\u002Fdisplaygadgets.16.06.html","IliEntryField","The IliEntryField gadget is used for entering and displaying data in a data-source-aware, one-line text field.","Options\u002Fpairs\u002Fpair6_11.js"]
,["Options\u002Fdisplaygadgets.16.07.html","Entry Field Inspector Panel","The IliEntryField inspector has four notebook pages:","Options\u002Fpairs\u002Fpair7_11.js"]
,["Options\u002Fdisplaygadgets.16.08.html","IliTableComboBox","The IliTableComboBox gadget is used for displaying a list of items in a data-source-aware menu and then displaying the item selected from the list.","Options\u002Fpairs\u002Fpair8_10.js"]
,["Options\u002Fdisplaygadgets.16.09.html","Table Combo Box Inspector Panel","The IliTableComboBox inspector has five notebook pages:","Options\u002Fpairs\u002Fpair9_9.js"]
,["Options\u002Fdisplaygadgets.16.10.html","IliDbText","The IliDbText gadget is used for entering and displaying multi-line data in a scrollable data-source-aware text field.","Options\u002Fpairs\u002Fpair10_7.js"]
,["Options\u002Fdisplaygadgets.16.11.html","DbText Inspector Panel","The IliDbText inspector has four notebook pages:","Options\u002Fpairs\u002Fpair11_7.js"]
,["Options\u002Fdisplaygadgets.16.12.html","IliDbToggle","The IliDbToggle gadget is used for selecting between two or sometimes three states.","Options\u002Fpairs\u002Fpair12_6.js"]
,["Options\u002Fdisplaygadgets.16.13.html","DbToggle Inspector Panel","The IliDbToggle inspector has five notebook pages:","Options\u002Fpairs\u002Fpair13_6.js"]
,["Options\u002Fdisplaygadgets.16.14.html","IliToggleSelector","The IliToggleSelector gadget is used to select a gadget among any number of items having data-source-aware selector buttons.","Options\u002Fpairs\u002Fpair14_5.js"]
,["Options\u002Fdisplaygadgets.16.15.html","ToggleSelector Inspector Panel","The IliToggleSelector inspector has four notebook pages:","Options\u002Fpairs\u002Fpair15_5.js"]
,["Options\u002Fdisplaygadgets.16.16.html","IliDbNavigator","The IliDbNavigator gadget is a tool bar with buttons for navigating through rows and editing data in a data source table.","Options\u002Fpairs\u002Fpair16_5.js"]
,["Options\u002Fdisplaygadgets.16.17.html","DbNavigator Inspector Panel","The IliDbNavigator inspector has three notebook pages:","Options\u002Fpairs\u002Fpair17_4.js"]
,["Options\u002Fdisplaygadgets.16.18.html","IliDbTimer","The IliDbTimer gadget is used for calling a callback periodically.","Options\u002Fpairs\u002Fpair18_4.js"]
,["Options\u002Fdisplaygadgets.16.19.html","DbTimer Inspector Panel","The IliDbTimer inspector has two notebook pages:","Options\u002Fpairs\u002Fpair19_4.js"]
,["Options\u002Fdisplaygadgets.16.20.html","IliHTMLReporter","The IliHTMLReporter gadget is used to generate an HTML document from data source contents.","Options\u002Fpairs\u002Fpair20_4.js"]
,["Options\u002Fdisplaygadgets.16.21.html","HTMLReporter Inspector Panel","The IliHTMLReporter inspector has five notebook pages:","Options\u002Fpairs\u002Fpair21_4.js"]
,["Options\u002Fdisplaygadgets.16.22.html","IliXML","The IliXML gadget manages the communication between a datasource and an XML document. It also manages the import and export of notification and definition.","Options\u002Fpairs\u002Fpair22_3.js"]
,["Options\u002Fdisplaygadgets.16.23.html","XML Inspector Panel","The IliXML inspector has six notebook pages:","Options\u002Fpairs\u002Fpair23_3.js"]
,["Options\u002Fdisplaygadgets.16.24.html","IliDbPicture","The IliDbPicture gadget is used for displaying a picture. The picture file name comes from a data source column.","Options\u002Fpairs\u002Fpair24_3.js"]
,["Options\u002Fdisplaygadgets.16.25.html","DbPicture Inspector Panel","The IliDbPicture inspector has three notebook pages:","Options\u002Fpairs\u002Fpair25_3.js"]
,["Options\u002Fdisplaygadgets.16.26.html","IliDbOptionMenu","The IliDbOptionMenu gadget is used to display a data source list of items.","Options\u002Fpairs\u002Fpair26_3.js"]
,["Options\u002Fdisplaygadgets.16.27.html","DbOptionMenu Inspector Panel","The IliDbOptionMenu inspector has four notebook pages:","Options\u002Fpairs\u002Fpair27_3.js"]
,["Options\u002Fdisplaygadgets.16.28.html","IliDbStringList","The IliDbStringList gadget is used to display a data source list of items.","Options\u002Fpairs\u002Fpair28_2.js"]
,["Options\u002Fdisplaygadgets.16.29.html","DbStringList Inspector Panel","The IliDbStringList inspector has six notebook pages:","Options\u002Fpairs\u002Fpair29_2.js"]
,["Options\u002Fdisplaygadgets.16.30.html","IliDbTreeGadget","The IliDbTreeGadget gadget is used to display the data source contents as a tree structure.","Options\u002Fpairs\u002Fpair30_2.js"]
,["Options\u002Fdisplaygadgets.16.31.html","DbTreeGadget Inspector Panel","The IliDbTreeGadget inspector has six notebook pages:","Options\u002Fpairs\u002Fpair31.js"]
,["Options\u002Fdisplaygadgets.16.32.html","IliChartGraphic","The IliChartGraphic dadget is used to display the data source as a chart graphic.","Options\u002Fpairs\u002Fpair32.js"]
,["Options\u002Fdisplaygadgets.16.33.html","ChartGraphic Inspector Panel","The IliChartGraphic inspector has twelve notebook pages:","Options\u002Fpairs\u002Fpair33.js"]
,["Options\u002Fdisplaygadgets.16.34.html","IliDbGrapher","The IliDbGrapher gadget is used to display the data source contents as nodes and links.","Options\u002Fpairs\u002Fpair34.js"]
,["Options\u002Fdisplaygadgets.16.35.html","DbGrapher Inspector Panel","The IliDbGrapher inspector has six notebook pages:","Options\u002Fpairs\u002Fpair35.js"]
,["Options\u002Fdisplaygadgets.16.36.html","IliDbGantt","The IliDbGantt gadget is used for defining a Gantt chart connected to various data sources.","Options\u002Fpairs\u002Fpair36.js"]
,["Options\u002Fdisplaygadgets.16.37.html","DbGantt Inspector Panel","The IliDbGantt inspector has eleven notebook pages:","Options\u002Fpairs\u002Fpair37.js"]
,["Options\u002Futilityclasses.17.1.html","Utility Classes","This appendix describes the following utility classes of Data Access: IliString, IliDecimal, IliDate, IliFormat, and IliInputMask.","Options\u002Fpairs\u002Fpair1_17.js"]
,["Options\u002Futilityclasses.17.2.html","The IliString Class","The IliString class defines objects that manage a character string.","Options\u002Fpairs\u002Fpair2_13.js"]
,["Options\u002Futilityclasses.17.3.html","The IliDecimal Class","The IliDecimal class is used to hold floating point numbers with up to 38 digits of precision represented internally in base 10. This contrasts with the C++ double type that represents floating point numbers in base 2 and has a machine-dependent precision.","Options\u002Fpairs\u002Fpair3_13.js"]
,["Options\u002Futilityclasses.17.4.html","The IliDate Class","The IliDate class is used to hold date and time information.","Options\u002Fpairs\u002Fpair4_13.js"]
,["Options\u002Futilityclasses.17.5.html","The IliFormat Class","The IliFormat class is used to format values into character strings using specific rules. A format can be user-defined or predefined. Once an IliFormat has been created, it can be named and referenced whenever required. This can be done using the aliasing mechanism provided in the IliFormat class.","Options\u002Fpairs\u002Fpair5_12.js"]
,["Options\u002Futilityclasses.17.6.html","The IliInputMask Class","An input mask is similar to a format except that it allows you to control how values are entered by the end user in addition to the formatting.","Options\u002Fpairs\u002Fpair6_12.js"]
,["Options\u002Fformatsyntax.18.1.html","Format Syntax","This appendix contains the symbols and formats you can use to create application-wide named formats and local formats for a particular field. A format specification controls the way a value will be formatted for display. There are three types of formats:","Options\u002Fpairs\u002Fpair1_18.js"]
,["Options\u002Fformatsyntax.18.2.html","String Formats","String formats apply to the formatting of text.","Options\u002Fpairs\u002Fpair2_14.js"]
,["Options\u002Fformatsyntax.18.3.html","Number Formats","Number formats apply to the formatting of numbers, including currency amounts.","Options\u002Fpairs\u002Fpair3_14.js"]
,["Options\u002Fformatsyntax.18.4.html","Date Formats","Date formats refer to the formatting of days, dates, and times.","Options\u002Fpairs\u002Fpair4_14.js"]
,["Options\u002Fformatsyntax.18.5.html","Literal Characters","In any format specification, you can include literal characters. They will be output \u201Cas is\u201D when formatting a value.","Options\u002Fpairs\u002Fpair5_13.js"]
,["Options\u002Fmasksyntax.19.1.html","Mask Syntax","This appendix contains the symbols and formats that you can use to create application-wide named masks called input masks and local input masks for a particular field. Masks control user input. Format specification controls how a value is formatted for display and a mask sets a style to input values...","Options\u002Fpairs\u002Fpair1_19.js"]
,["Options\u002Fmasksyntax.19.2.html","Placeholders","Used in the Edit mode, placeholders replace all missing characters by default characters. There are predefined masks for the date and time. The following symbols are the placeholders that you can use for alphanumeric formatting.","Options\u002Fpairs\u002Fpair2_15.js"]
,["Options\u002Fmasksyntax.19.3.html","Predefined Masks","Predefined masks are used to set format specifications for date and time. You can define your predefined masks in the Masks section of the Application Properties panel of Rogue Wave\u00AE\u00A0Views Studio. The following table defines and names the format showing how they are displayed. In the mask format, ch...","Options\u002Fpairs\u002Fpair3_15.js"]
,["Options\u002Ferrormessages.html","Error Messages","This appendix contains a list of error messages that Data Access generates. In the following table, you will find the code error, the names of the arguments, and their type.","Options\u002Fpairs\u002Fpair1_20.js"]
,["Options\u002Fdagsfrontcover.html","Data Access Getting Started","This manual consists of a table of contents, preface, glossary, six chapters and three appendixes:","Options\u002Fpairs\u002Fpair1_21.js"]
,["Options\u002Fdagsoverview.22.01.html","Overview","This chapter introduces you to the basic components of Data Access, the SQL database GUI editor. It also provides the general procedures you need to follow to create panels and applications using Data Access.","Options\u002Fpairs\u002Fpair1_22.js"]
,["Options\u002Fdagsoverview.22.02.html","What is Data Access","Data Access is a Rogue Wave\u00AE\u00A0Views graphic-based environment that is dedicated to building SQL database client-server applications. Through the use of data-source-aware gadgets and other features, Data Access greatly reduces coding requirements. Basically, Data Access internally creates the SQL stat...","Options\u002Fpairs\u002Fpair2_16.js"]
,["Options\u002Fdagsoverview.22.03.html","Architecture","The architecture of Data Access can be viewed from two viewpoints:","Options\u002Fpairs\u002Fpair3_16.js"]
,["Options\u002Fdagsoverview.22.04.html","External Environment","Data Access is integrated into Rogue Wave\u00AE\u00A0Views Component Suite, thus profiting from all of the Rogue Wave\u00A0Views features and from its extensive libraries. In particular, it makes use of the Rogue Wave\u00A0Views Studio GUI editor by adding palettes of database-specific gadgets with predefined functiona...","Options\u002Fpairs\u002Fpair4_15.js"]
,["Options\u002Fdagsoverview.22.05.html","Internal Components","This section introduces the three internal components of Data Access:","Options\u002Fpairs\u002Fpair5_14.js"]
,["Options\u002Fdagsoverview.22.06.html","Connections","Three different types of connections allow Data Access to function:","Options\u002Fpairs\u002Fpair6_13.js"]
,["Options\u002Fdagsoverview.22.07.html","SQL Session: Communication Channel Between the Application and the DBMS","When you create an SQL Session, you are creating a Data Access object that represents a communication channel between the application and the DBMS. An application can have several SQL sessions opened at once, thus allowing you to have more than one transaction active at the same time in your applica...","Options\u002Fpairs\u002Fpair7_12.js"]
,["Options\u002Fdagsoverview.22.08.html","Mapping the Data Source Table to Database Tables","To define a data source from values taken from one or more database tables, you use the SQL Data Source inspector to connect the database table representations in the FROM section to the data source table in the SELECT section. You do this by dragging a line from the name of a table column in the FR...","Options\u002Fpairs\u002Fpair8_11.js"]
,["Options\u002Fdagsoverview.22.09.html","Connecting Display Gadgets to a Data Source","Once you have mapped the data source to the desired tables in the database, you can then display the data by means of Data Access gadgets. To connect a gadget to the data source, see the following procedure:","Options\u002Fpairs\u002Fpair9_10.js"]
,["Options\u002Fdagsoverview.22.10.html","Data Access Window","When you launch Data Access, the following window appears:","Options\u002Fpairs\u002Fpair10_8.js"]
,["Options\u002Fdagsoverview.22.11.html","Main Window","The Main window contains the following areas:","Options\u002Fpairs\u002Fpair11_8.js"]
,["Options\u002Fdagsoverview.22.12.html","Palettes Panel","The Palettes panel provides predefined gadgets that you can drag-and-drop directly to your work space to create the panels of your final application. This panel is displayed by default when you launch Data Access, together with the Main window. If closed, it can be reopened with the Palettes command...","Options\u002Fpairs\u002Fpair12_7.js"]
,["Options\u002Fdagsoverview.22.13.html","General Procedures","The procedures in this section provide the basic principles and steps for creating an application using Data Access. They are given for reference only and you should not attempt them now, since you will be doing them in the tutorial chapters that follow. The following is one possible order of proced...","Options\u002Fpairs\u002Fpair13_7.js"]
,["Options\u002Fdagsoverview.22.14.html","How to Create an Application","Creating an application consists of creating an application file that has an .iva extension. Here is the procedure for creating this file:","Options\u002Fpairs\u002Fpair14_6.js"]
,["Options\u002Fdagsoverview.22.15.html","How to Create Panels","The following are the basic steps for building GUI panels with Rogue Wave\u00AE\u00A0Views Studio. The panels are created in the work space of the Main window.","Options\u002Fpairs\u002Fpair15_6.js"]
,["Options\u002Fdagsoverview.22.16.html","How to Integrate Panels into an Application","Choose Open from the File menu in the Main window and select the panel buffer that you want to integrate into the application. The panel buffer is opened in the Main window work space.","Options\u002Fpairs\u002Fpair16_6.js"]
,["Options\u002Fdagsoverview.22.17.html","How to Create a New Instance of a Panel Class","Choose Edit Application from the Window menu. You will notice that the Buffer type changes to Application.","Options\u002Fpairs\u002Fpair17_5.js"]
,["Options\u002Fdagsoverview.22.18.html","How to Generate an Application","Ensure that the current buffer is the Application buffer by selecting <Application> in the Window menu, if required. Choose Save from the File menu to save your application in an .iva file. If you have not already saved the application file, a file selection dialog box appears in which you can enter...","Options\u002Fpairs\u002Fpair18_5.js"]
,["Options\u002Fdagsoverview.22.19.html","How to Edit an Application","This section provides a general description of how to edit an application. For more detailed information on how to carry out the processes involved, see the Rogue Wave\u00A0Views Controls User\u2019s Manual.","Options\u002Fpairs\u002Fpair19_5.js"]
,["Options\u002Ftutintro.23.01.html","Introduction","This chapter introduces you to the Data Access tutorial in which you are going to create an employee database application.","Options\u002Fpairs\u002Fpair1_23.js"]
,["Options\u002Ftutintro.23.02.html","What You Are Going To Do","This section shows the finished windows used in an application named employdb and describes the procedure for creating the application. The employdb database application consists of four windows:","Options\u002Fpairs\u002Fpair2_17.js"]
,["Options\u002Ftutintro.23.03.html","Setting Up the Database","This tutorial uses a database schema with two tables, I_EMP (employee) and I_DEPT (department), that you can set up by either of the following methods:","Options\u002Fpairs\u002Fpair3_17.js"]
,["Options\u002Ftutintro.23.04.html","Launching Data Access","To launch Data Access on a Microsoft windows platform, select Programs>Rogue Wave>VIEWS. With Data Access, it is no longer necessary to use dbstudio to design your application. You can use studio (the ivfstudio program) and load the Data Access plug-ins. Data Access provides the following plug-ins:","Options\u002Fpairs\u002Fpair4_16.js"]
,["Options\u002Ftutintro.23.05.html","Creating the employdb Application","In this section, you are going to set up the application by creating these elements:","Options\u002Fpairs\u002Fpair5_15.js"]
,["Options\u002Ftutintro.23.06.html","Creating the Application File","To create an application with the name employdb, do the following:","Options\u002Fpairs\u002Fpair6_14.js"]
,["Options\u002Ftutintro.23.07.html","Defining a Named SQL Session","The application in this tutorial will use several data sources, all using the same SQL session. You are now going to define this application-wide SQL session, giving it a name. The following figure shows how the name of the selected SQL session (\u201CMain\u201D) appears in the Name combo box menu of the Conn...","Options\u002Fpairs\u002Fpair7_13.js"]
,["Options\u002Ftutintro.23.08.html","Saving and Opening Windows","You are now going to start creating the windows for the employdb application. It is a good idea to save your windows periodically as you build them or you may simply want to save the current window while taking a break during this tutorial. To save and reopen your windows, follow the procedures belo...","Options\u002Fpairs\u002Fpair8_12.js"]
,["Options\u002Ftutintro.23.09.html","Saving an Edited Window","To save an edited window (that is, one that has already been saved and that you have opened and edited), click the Save button in the tool bar in the Main window or choose Save from the File menu.","Options\u002Fpairs\u002Fpair9_11.js"]
,["Options\u002Ftutintro.23.10.html","Opening a Saved Window","To open a window that was previously saved, click the Open button in the tool bar in the Main window or choose Open from the File menu.","Options\u002Fpairs\u002Fpair10_9.js"]
,["Options\u002Ftutdatabase.24.01.html","Database Features","In this chapter, you begin to construct the Employee window of the employdb application by defining data sources and database-specific gadgets. You will also use a memory data source, a form, and various operations to establish selection and display criteria.","Options\u002Fpairs\u002Fpair1_24.js"]
,["Options\u002Ftutdatabase.24.02.html","What You Are Going To Do","You are now going to create the Employee window for the employdb application. When finished, it will look like this:","Options\u002Fpairs\u002Fpair2_18.js"]
,["Options\u002Ftutdatabase.24.03.html","Defining the EMP_DS SQL Data Source","To define an SQL data source using the I_EMP table in the Employee database, do the following:","Options\u002Fpairs\u002Fpair3_18.js"]
,["Options\u002Ftutdatabase.24.04.html","Additional Information About Using the SQL Tables Palette","The SQL Table palette is opened from the upper pane of the Palettes panel when you click SQL tables under the Data Access tree item.","Options\u002Fpairs\u002Fpair4_17.js"]
,["Options\u002Ftutdatabase.24.05.html","Connecting a Table Gadget to the EMP_DS Data Source","To connect a table gadget to the EMP_DS data source, do the following:","Options\u002Fpairs\u002Fpair5_16.js"]
,["Options\u002Ftutdatabase.24.06.html","Additional Information about Editing Tables","Data Access provides a table gadget for creating and editing tables. The figure below shows the different parts of this table gadget.","Options\u002Fpairs\u002Fpair6_15.js"]
,["Options\u002Ftutdatabase.24.07.html","Using Selection and Display Criteria","You are now going to modify how the list of employees appears in the table gadget of the employdb application. You want to display only the employees whose employee number is less than 8, in alphabetical order by name and without their salary information.","Options\u002Fpairs\u002Fpair7_14.js"]
,["Options\u002Ftutdatabase.24.08.html","Additional Information about Selection Criteria","You can use the following operators in the SQL Data Source inspector to define selection criteria used by the data source to retrieve values from the database tables. Use the Select page when no Operation is defined in any of the columns; otherwise, use the Having page. The following expressions can...","Options\u002Fpairs\u002Fpair8_13.js"]
,["Options\u002Ftutdatabase.24.09.html","Saving the Window","If you have not already saved the window, do so now by choosing Save As... from the File menu in the Main Window. Give it the name employee.ilv and save it in the directory in which you saved the .iva application file Creating the Application File.","Options\u002Fpairs\u002Fpair9_12.js"]
,["Options\u002Ftutdatabase.24.10.html","Defining the STATUS_MDS Memory Data Source","In our example, the STATUS column of the I_EMP table contains either the number 1 or 2 for each employee. It is preferable, however, to give a name to these numbers for display purposes by replacing 1 with Permanent and 2 with Temporary.","Options\u002Fpairs\u002Fpair10_10.js"]
,["Options\u002Ftutdatabase.24.11.html","Connecting a Table Gadget to the STATUS_MDS Data Source","To connect a table gadget to the STATUS_MDS memory data source, do the following:","Options\u002Fpairs\u002Fpair11_9.js"]
,["Options\u002Ftutdatabase.24.12.html","Mapping Cells Between Data Sources","You are now going to map the status numbers 1 and 2 in the EMP_DS SQL data source to the names Permanent and Temporary in the STATUS_MDS memory data source.","Options\u002Fpairs\u002Fpair12_8.js"]
,["Options\u002Ftutdatabase.24.13.html","Defining the DEPT_DS SQL Data Source","You are now going to define another data source, this one based on the I_DEPT table in the Employee database.","Options\u002Fpairs\u002Fpair13_8.js"]
,["Options\u002Ftutdatabase.24.14.html","Connecting a Table Gadget to the DEPT_DS Data Source","To connect a table gadget to the DEPT_DS data source, do the following:","Options\u002Fpairs\u002Fpair14_7.js"]
,["Options\u002Ftutdatabase.24.15.html","Mapping and Formatting the Cells","In this example, each employee works in a department that has a given number. However, you would rather display the department name instead of its number. You want to replace the DEPTNO column numbers with names.","Options\u002Fpairs\u002Fpair15_7.js"]
,["Options\u002Ftutdatabase.24.16.html","Defining a Form","In this section, you are going to learn what a form is and how to define and connect it to the DEPT_DS data source.","Options\u002Fpairs\u002Fpair16_7.js"]
,["Options\u002Ftutdatabase.24.17.html","Additional Information about Forms","A form is a set of gadgets that are used to show one data source row (record) at a time in a more flexible way than is possible with a table gadget.","Options\u002Fpairs\u002Fpair17_6.js"]
,["Options\u002Ftutdatabase.24.18.html","Using Parameters to Link Data Sources","You are now going to use the Parameters notebook page to link the EMP_DS and DEPT_DS data sources so that only employees for the current department are listed. To do this, follow these steps:","Options\u002Fpairs\u002Fpair18_6.js"]
,["Options\u002Ftutdesignwin.25.1.html","Designing Windows","This chapter shows you how to set up the appearance of your window by using the various GUI features that Data Access provides.","Options\u002Fpairs\u002Fpair1_25.js"]
,["Options\u002Ftutdesignwin.25.2.html","Aligning Objects","You are now going to align objects in the Employee window, as shown in the following figure:","Options\u002Fpairs\u002Fpair2_19.js"]
,["Options\u002Ftutdesignwin.25.3.html","Using Resources","You are now going to change some fonts and colors of objects in the Employee window using the Resources editor.","Options\u002Fpairs\u002Fpair3_19.js"]
,["Options\u002Ftutdesignwin.25.4.html","Checking the Focus Chain","The focus chain is the order in which objects in the window own the keyboard focus as the Tab key is pressed repeatedly. When you click the Focus button in the Editing Modes toolbar, a default focus chain path appears in the Main window.","Options\u002Fpairs\u002Fpair4_18.js"]
,["Options\u002Ftutdesignwin.25.5.html","Setting the Size of the Window","There are two methods for resizing a window:","Options\u002Fpairs\u002Fpair5_17.js"]
,["Options\u002Ftutdesignwin.25.6.html","Setting the Background of the Window","You are now going to set the color or bitmap used as the background for the window. Choose View Inspector in the Tools menu of the Main window.","Options\u002Fpairs\u002Fpair6_16.js"]
,["Options\u002Ftutdesignwin.25.7.html","Setting Attachments","The attachments function allows you to specify how objects in the window change when the window is resized. To specify the attachments for the table gadget in the Employee window so that it will change size proportionally with the window, do the following:","Options\u002Fpairs\u002Fpair7_15.js"]
,["Options\u002Ftutdesignwin.25.8.html","Testing Attachments","To test the attachments you applied to the objects, do the following:","Options\u002Fpairs\u002Fpair8_14.js"]
,["Options\u002Ftutdesignwin.25.9.html","Adding the Employee Window to the Application","To add the Employee window to the employdb application, do the following:","Options\u002Fpairs\u002Fpair9_13.js"]
,["Options\u002Ftutaddfeatures.26.01.html","Additional Features","In this final chapter of the tutorial, you will create three small panels, practicing what you have learned and getting acquainted with other features of Data Access.","Options\u002Fpairs\u002Fpair1_26.js"]
,["Options\u002Ftutaddfeatures.26.02.html","Creating the Employee Manager Window","You are now going to create a new buffer containing an Employee Manager window that will look like this when finished:","Options\u002Fpairs\u002Fpair2_20.js"]
,["Options\u002Ftutaddfeatures.26.03.html","What You Are Going To Do","In this section, you will do the following tasks:","Options\u002Fpairs\u002Fpair3_20.js"]
,["Options\u002Ftutaddfeatures.26.04.html","Defining the EMPMGR_DS SQL Data Source","To define the EMPMGR_DS SQL data source, do the following:","Options\u002Fpairs\u002Fpair4_19.js"]
,["Options\u002Ftutaddfeatures.26.05.html","Connecting a Table Gadget to the EMPMGR_DS Data Source","You are now going to connect a table gadget to the data source.","Options\u002Fpairs\u002Fpair5_18.js"]
,["Options\u002Ftutaddfeatures.26.06.html","Joining Two Tables","You are now going to do a join operation, which allows the display of data in one or more columns from multiple tables. A join operation connects two columns in different tables. Depending on the type of join operation used, you can specify the way in which rows are displayed from the two tables.","Options\u002Fpairs\u002Fpair6_17.js"]
,["Options\u002Ftutaddfeatures.26.07.html","Additional Information about Table Joins","A join operation between the columns of two different database tables enables you to specify a relationship between data that is common to the two tables. By specifying a join, you can set up a table with columns that originate from different database tables and indicate how the rows are to be displ...","Options\u002Fpairs\u002Fpair7_16.js"]
,["Options\u002Ftutaddfeatures.26.08.html","Using Query Mode","You are now going to use query mode to display those employees whose employee number is less than 5 and whose manager is Thomasson, or whose employee number is greater than or equal 8 and whose manager starts with the letter T.","Options\u002Fpairs\u002Fpair8_15.js"]
,["Options\u002Ftutaddfeatures.26.09.html","Additional Information about Query Mode","Query mode lets you specify interactively a query to apply to the SQL table.","Options\u002Fpairs\u002Fpair9_14.js"]
,["Options\u002Ftutaddfeatures.26.10.html","Finishing the Employee Manager Window","For more practice, you can do the following:","Options\u002Fpairs\u002Fpair10_11.js"]
,["Options\u002Ftutaddfeatures.26.11.html","Creating the Department Maximum Salary Window","You are now going to create the Department Maximum Salary window that will show the maximum salary in each department. When finished, the window will look like this:","Options\u002Fpairs\u002Fpair11_10.js"]
,["Options\u002Ftutaddfeatures.26.12.html","What You Are Going To Do","In this section, you will do the following tasks:","Options\u002Fpairs\u002Fpair12_9.js"]
,["Options\u002Ftutaddfeatures.26.13.html","Defining the DEPTMAXSAL_DS SQL Data Source","Begin to define the DEPTMAXSAL_DS SQL data source by doing the following:","Options\u002Fpairs\u002Fpair13_9.js"]
,["Options\u002Ftutaddfeatures.26.14.html","Specifying Selection Criteria Operations","The Operation row of the SELECT section in the SQL Data Source inspector contains a number of operations that you can choose to establish selection criteria. The combo box menu shows this list of operations.","Options\u002Fpairs\u002Fpair14_8.js"]
,["Options\u002Ftutaddfeatures.26.15.html","Connecting a Table Gadget to the DEPTMAXSAL_DS Data Source","You are now going to connect a table gadget to the data source.","Options\u002Fpairs\u002Fpair15_8.js"]
,["Options\u002Ftutaddfeatures.26.16.html","Saving the Department Maximum Salary Window","If you have not already saved the window, do so now by choosing Save As... from the File menu in the Main window. Give it the name dpmaxsal.ilv and save it in the directory in which you saved the .iva application file Creating the Application File.","Options\u002Fpairs\u002Fpair16_8.js"]
,["Options\u002Ftutaddfeatures.26.17.html","Additional Information About Using Rogue Wave\u00A0Script Callbacks","Instead of using predefined callbacks such as \u0022@Select\u0022, you can code a Rogue Wave\u00A0Script callback. By doing this, you have access to the extensive Data Access scripting API as well as to Rogue Wave\u00A0Script intrinsic language features (such as loops, conditions, and so on). To define a Rogue Wave\u00A0Scr...","Options\u002Fpairs\u002Fpair17_7.js"]
,["Options\u002Ftutaddfeatures.26.18.html","Finishing the Department Maximum Salary Window","For more practice, you can do the following:","Options\u002Fpairs\u002Fpair18_7.js"]
,["Options\u002Ftutaddfeatures.26.19.html","Creating the Control Window","The last window you are going to create is the Control window.","Options\u002Fpairs\u002Fpair19_6.js"]
,["Options\u002Ftutaddfeatures.26.20.html","What You Are Going To Do","In this section, you will perform the following procedures to create the Control window:","Options\u002Fpairs\u002Fpair20_5.js"]
,["Options\u002Ftutaddfeatures.26.21.html","Adding a Menu Bar to the Window","To add a menu bar to the Control window, do the following:","Options\u002Fpairs\u002Fpair21_5.js"]
,["Options\u002Ftutaddfeatures.26.22.html","Creating the File Pop-up Menu","To create the pop-up menu for the File item in the menu bar, follow these steps:","Options\u002Fpairs\u002Fpair22_4.js"]
,["Options\u002Ftutaddfeatures.26.23.html","Attaching the File Pop-up Menu to the File Menu Item","To attach the File pop-up menu to the File menu item, do the following:","Options\u002Fpairs\u002Fpair23_4.js"]
,["Options\u002Ftutaddfeatures.26.24.html","Creating and Attaching the Panels Pop-up Menu","Create and attach the pop-up menu for the Panels menu item like you did for the File menu item. The pop-up menu will have three items, each item being the name of one of the windows. Enter these names in the Label field of the IlvPopupMenu inspector:","Options\u002Fpairs\u002Fpair24_4.js"]
,["Options\u002Ftutaddfeatures.26.25.html","Finishing the Control Window","For more practice, you can apply resources to the menu gadgets as described in the section Using Resources.","Options\u002Fpairs\u002Fpair25_4.js"]
,["Options\u002Ftutaddfeatures.26.26.html","Using the Browser","You can use the Browser to get a closer look at the structure of your application. To open the Browser, select Browse... from the Data Access menu of the Main window.","Options\u002Fpairs\u002Fpair26_4.js"]
,["Options\u002Ftutaddfeatures.26.27.html","Testing the Application","The final operation is to test the application that you have created. To do so, follow these steps:","Options\u002Fpairs\u002Fpair27_4.js"]
,["Options\u002Ftutaddfeatures.26.28.html","Summary","You have now completed the main part of the Data Access tutorial. You have learned the basic procedures for creating SQL database applications using Data Access and should be able to create your own applications.","Options\u002Fpairs\u002Fpair28_3.js"]
,["Options\u002Fnestedtables.27.1.html","Nested Tables","This chapter is a supplement to the tutorial for those users interested in the nested tables feature of Data Access.","Options\u002Fpairs\u002Fpair1_27.js"]
,["Options\u002Fnestedtables.27.2.html","What You Are Going To Do","In this chapter, you are going to create a new buffer containing a Product window by performing the following operations:","Options\u002Fpairs\u002Fpair2_21.js"]
,["Options\u002Fnestedtables.27.3.html","Setting Up the Database","This tutorial uses a database schema with a single table called PRODUCT. Use your own database system tools to create the table, using the following SQL statements as a model. The statements are based on Oracle syntax.","Options\u002Fpairs\u002Fpair3_21.js"]
,["Options\u002Fnestedtables.27.4.html","Defining the PRODUCT_DS SQL Data Source","Define the PRODUCT_DS data source by doing the following:","Options\u002Fpairs\u002Fpair4_20.js"]
,["Options\u002Fnestedtables.27.5.html","Defining the PARTS_DS SQL Data Source","Define the PARTS_DS data source by doing the following:","Options\u002Fpairs\u002Fpair5_19.js"]
,["Options\u002Fnestedtables.27.6.html","Creating the Product Window","You are now going to connect table gadgets to the data sources.","Options\u002Fpairs\u002Fpair6_18.js"]
,["Options\u002Fnestedtables.27.7.html","Saving the Product Window","If you have not already saved the window, do so now by choosing Save As from the File menu in the Main window. Give it the name product.ilv.","Options\u002Fpairs\u002Fpair7_17.js"]
,["Options\u002Fsettingup.28.1.html","Setting Up Data Access","In order for Data Access to run, Rogue Wave\u00AE\u00A0Views and Rogue Wave\u00A0Views DB Link must be installed if you want to use the SQL gadgets.","Options\u002Fpairs\u002Fpair1_28.js"]
,["Options\u002Fsettingup.28.2.html","Data Access Installation and Configuration","This section explains how to install Data Access on various platforms. For the latest list of platforms on which you can use Data Access, see the table in the README file delivered with the product.","Options\u002Fpairs\u002Fpair2_22.js"]
,["Options\u002Fsettingup.28.3.html","Data Access and the Packages","To use Data Access, you must install the \u201CFoundation\u201D and \u201CGadget\u201D Views packages and Rogue Wave\u00AE\u00A0Views DB Link product. To use other optional packages with Data Access, you must install the relevant Rogue Wave\u00A0Views packages:","Options\u002Fpairs\u002Fpair3_22.js"]
,["Options\u002Fsettingup.28.4.html","Setting Up Rogue Wave\u00A0Views Views, Rogue Wave\u00A0Views DB Link, and Data Access on UNIX","Set the ILVHOME and DBLINK_HOME variables.","Options\u002Fpairs\u002Fpair4_21.js"]
,["Options\u002Fsettingup.28.5.html","Setting Up Rogue Wave\u00A0Views and Data Access on Windows XP and Vista","","Options\u002Fpairs\u002Fpair5_20.js"]
,["Options\u002Fsettingup.28.6.html","Setting Up the Rogue Wave\u00A0Views DB Link Initialization File on Windows","For Windows XP and Windows Vista, the Rogue Wave\u00AE\u00A0Views DB Link dynamic loader requires that the Rogue Wave\u00A0Views DB Link initialization file dblink.ini be located:","Options\u002Fpairs\u002Fpair6_19.js"]
,["Options\u002Fformatsyntax.29.1.html","Format Syntax","This appendix contains the symbols and formats you can use to create application-wide named formats and local formats for a particular field.","Options\u002Fpairs\u002Fpair1_29.js"]
,["Options\u002Fformatsyntax.29.2.html","String Formats","String formats refer to the formatting of text. You can use the following symbols to specify a string format.","Options\u002Fpairs\u002Fpair2_23.js"]
,["Options\u002Fformatsyntax.29.3.html","Number Formats","Number formats refer to the formatting of numbers, including currency amounts. You can use the following symbols to specify a number format.","Options\u002Fpairs\u002Fpair3_23.js"]
,["Options\u002Fformatsyntax.29.4.html","Date Formats","Date formats refer to the formatting of days, dates and times. You can use the following symbols to specify a date format.","Options\u002Fpairs\u002Fpair4_22.js"]
,["Options\u002Fformatsyntax.29.5.html","Literal Characters","In any format specification, you can include literal characters. They will be output \u201Cas is\u201D when formatting a value.","Options\u002Fpairs\u002Fpair5_21.js"]
,["Options\u002Fschemaeditor.30.1.html","SQL Schema Editor","This appendix describes the SQL Schema Editor. This editor is provided if you need a simple editor to create, delete, or edit tables in a database for the examples in this manual or for other uses.","Options\u002Fpairs\u002Fpair1_30.js"]
,["Options\u002Fschemaeditor.30.2.html","Using the SQL Schema Editor","A schema is the structure in the form of tables in which the data is stored. You use the Schema Editor to edit the table definitions and the data contained in the tables.","Options\u002Fpairs\u002Fpair2_24.js"]
,["Options\u002Fschemaeditor.30.3.html","Creating the Tutorial Database Schema","To create the schema for the example, do the following:","Options\u002Fpairs\u002Fpair3_24.js"]
,["Options\u002Fschemaeditor.30.4.html","Other Features","In addition to creating new tables in the database, you can also edit the data in a table or remove a table from the database.","Options\u002Fpairs\u002Fpair4_23.js"]
,["Options\u002Fchusrfrontcover.html","Charts","This manual is divided into two parts that describe how to use the Rogue Wave\u00AE\u00A0Views Charts Package, and one Appendix.","Options\u002Fpairs\u002Fpair1_31.js"]
,["Options\u002Fchusrpart1.html","Part I","Using Charts with Rogue Wave\u00A0Views Studio","Options\u002Fpairs\u002Fpair1_32.js"]
,["Options\u002Fbeginstudio.33.01.html","Introducing Charts in Rogue Wave\u00A0Views Studio","In this chapter, you will find some basic information to get you started using charts in Studio. You will find information on the following topics:","Options\u002Fpairs\u002Fpair1_33.js"]
,["Options\u002Fbeginstudio.33.02.html","Launching Rogue Wave\u00A0Views Studio with the Charts Extension","To launch Rogue Wave\u00AE\u00A0Views Studio with the Charts extension, do the following:","Options\u002Fpairs\u002Fpair2_25.js"]
,["Options\u002Fbeginstudio.33.03.html","A Quick Look at the Interface","When you launch Rogue Wave\u00AE\u00A0Views Studio with the Charts extension, the Main window with the Palettes panel appears on your screen.","Options\u002Fpairs\u002Fpair3_25.js"]
,["Options\u002Fbeginstudio.33.04.html","Creating a Chart Object","To create a chart object, do the following:","Options\u002Fpairs\u002Fpair4_24.js"]
,["Options\u002Fbeginstudio.33.05.html","Using the Chart Inspector","You will use the Chart inspector to customize the predefined chart objects to fit your particular needs. The same generic inspector is used for all the chart types: Cartesian, polar, pie, or other.","Options\u002Fpairs\u002Fpair5_22.js"]
,["Options\u002Fbeginstudio.33.06.html","Chart Inspector Icons","The name of each icon in the Chart inspector appears as a tooltip when you hold the mouse pointer on the icon.","Options\u002Fpairs\u002Fpair6_20.js"]
,["Options\u002Fbeginstudio.33.07.html","General Page","The General page allows the setting of parameters that are common to all graphic objects.","Options\u002Fpairs\u002Fpair7_18.js"]
,["Options\u002Fbeginstudio.33.08.html","Data Sets Page","The Data Sets page lets you define and handle the data sets that will be represented by the current chart.","Options\u002Fpairs\u002Fpair8_16.js"]
,["Options\u002Fbeginstudio.33.09.html","Displayers Page","The Displayers page lets you define and handle the displayers (that is, the graphical representations) that will be used to represent data in the current chart.","Options\u002Fpairs\u002Fpair9_15.js"]
,["Options\u002Fbeginstudio.33.10.html","Projection Page","The Projection page lets you define the type of projection to map the data into screen coordinates.","Options\u002Fpairs\u002Fpair10_12.js"]
,["Options\u002Fbeginstudio.33.11.html","Scales Page","The Scales page lets you define the scales used in the current chart. A chart can have one abscissa scale and as many ordinate scales as you want.","Options\u002Fpairs\u002Fpair11_11.js"]
,["Options\u002Fbeginstudio.33.12.html","Layout Page","The Layout page lets you define the global layout of the chart (that is, the position of the different areas of the chart within its bounding box). There are three areas within the bounding box of the chart.","Options\u002Fpairs\u002Fpair12_10.js"]
,["Options\u002Fbeginstudio.33.13.html","Miscellaneous Page","The Miscellaneous page lets you define several parameters that affect the whole chart. The Miscellaneous page appears as follows:","Options\u002Fpairs\u002Fpair13_10.js"]
,["Options\u002Fbeginstudio.33.14.html","Callbacks Page","The Callbacks page lets you set the callbacks for the chart objects. The Callbacks page appears as follows:","Options\u002Fpairs\u002Fpair14_9.js"]
,["Options\u002Fbeginstudio.33.15.html","Using the Chart Legend Inspector","You will use the Chart Legend Inspector to customize the legend you add to your chart.","Options\u002Fpairs\u002Fpair15_9.js"]
,["Options\u002Fcustomizechart.34.1.html","Customizing Charts","In this chapter, you will be working with Cartesian charts to learn how to customize charts using Rogue Wave\u00AE\u00A0Views Studio. You will see two examples.","Options\u002Fpairs\u002Fpair1_34.js"]
,["Options\u002Fcustomizechart.34.2.html","Example\u00A01: Charting Temperatures and Pressures of the Week","The data you are going to represent in your chart are the mean morning and afternoon temperatures, as well as the mean pressure recorded for each day of a week. The temperatures are expressed in degrees Celsius and the pressures in millibars. These data are listed in the following table:","Options\u002Fpairs\u002Fpair2_26.js"]
,["Options\u002Fcustomizechart.34.3.html","Defining a Grid Associated with a Scale","To customize our chart further, we can define a grid and associate it with a given scale.","Options\u002Fpairs\u002Fpair3_26.js"]
,["Options\u002Fcustomizechart.34.4.html","Defining a Related Ordinate Scale","Let\u2019s assume that now you want to add another ordinate scale to represent the temperatures so that you can show the correspondence between degrees Celsius and degrees Fahrenheit. This second temperatures scale will represent the same data as Ordinate 1, but will be graduated in degrees Fahrenheit in...","Options\u002Fpairs\u002Fpair4_25.js"]
,["Options\u002Fcustomizechart.34.5.html","Creating a Stacked or a Side-by-Side Representation","This section explains how to create a stacked representation. The same procedure can be used to create a side-by-side representation.","Options\u002Fpairs\u002Fpair5_23.js"]
,["Options\u002Fcustomizechart.34.6.html","Example\u00A02: Charting Analytic Functions","The example in this section is based on charting analytic functions of type y = f(x). This section is divided as follows:","Options\u002Fpairs\u002Fpair6_21.js"]
,["Options\u002Fcustomizechart.34.7.html","Using Logarithmic Scales","This section explains how to use logarithmic scales. The procedure is based on the previous example where you created a Cartesian chart to represent the square and square root functions. Starting from that chart, you are going to customize the abscissa scale and the ordinate scale to obtain the foll...","Options\u002Fpairs\u002Fpair7_19.js"]
,["Options\u002Fcustomizechart.34.8.html","Connecting a Legend to a Chart","In this part of the example, you will see how to connect a legend to the chart that you have just created to represent the square and the square root functions (see Using a Data Set Defined by a Script Function). You would use this same procedure for any other legend and chart you might create.","Options\u002Fpairs\u002Fpair8_17.js"]
,["Options\u002Fpolarchart.35.1.html","Using Polar Charts","In this chapter, you will learn how to use polar charts to represent in a circular way both angle values and non-angle values.","Options\u002Fpairs\u002Fpair1_35.js"]
,["Options\u002Fpolarchart.35.2.html","Example 1: Representing Values Expressed in Radians","In this example, you will represent data in the form (\u03B8, \u03C1), where \u03B8 is expressed in radians, on a polar chart.","Options\u002Fpairs\u002Fpair2_27.js"]
,["Options\u002Fpolarchart.35.3.html","Case 1: Applying a Transformation","In this example, you will perform the following tasks:","Options\u002Fpairs\u002Fpair3_27.js"]
,["Options\u002Fpolarchart.35.4.html","Case 2: Setting a Starting Angle and a Range","Case 2 assumes that you have already completed all the steps described in Case\u00A01. From now on, you are going to work on a copy of the chart you obtained at the end of Case 1 so that you can compare the two charts at the end of the exercise. The two charts will appear as shown in Abscissa Scale in De...","Options\u002Fpairs\u002Fpair4_26.js"]
,["Options\u002Fpolarchart.35.5.html","Example 2: Representing Time Values","You are now going to represent temperatures that have been recorded every two hours in the morning. The temperatures are in degrees Celsius and are represented by a marked polyline. Let\u2019s suppose you want to represent the time on a circular scale as on a clock. The following table lists the temperat...","Options\u002Fpairs\u002Fpair5_24.js"]
,["Options\u002Fpolarchart.35.6.html","Creating the Polar Chart","If you have not already done so, launch Rogue Wave\u00AE\u00A0Views Studio and display the Charts palette as described in Launching Rogue Wave\u00A0Views Studio with the Charts Extension.","Options\u002Fpairs\u002Fpair6_22.js"]
,["Options\u002Fpolarchart.35.7.html","Defining the Displayer","You are now going to set the type of the displayer used to display the data set representing the morning temperatures.","Options\u002Fpairs\u002Fpair7_20.js"]
,["Options\u002Fpolarchart.35.8.html","Customizing the Abscissa Scale","To customize the abscissa scale for this example, you need to perform the following tasks:","Options\u002Fpairs\u002Fpair8_18.js"]
,["Options\u002Fpolarchart.35.9.html","Customizing the Ordinate Scale","The last task of this exercise consists of customizing the ordinate scale. The Scales page should already be selected in the Chart inspector, so you can continue with this task.","Options\u002Fpairs\u002Fpair9_16.js"]
,["Options\u002Fchusrpart2.html","Part II","Using the Charts Library","Options\u002Fpairs\u002Fpair1_36.js"]
,["Options\u002Fchusrintroduction.37.1.html","Introducing the Charts Library","The Charts Library of Rogue Wave\u00AE\u00A0Views is composed of dedicated classes that allow you to display your data in charts. Using the Charts Library of Rogue Wave\u00A0Views, you will be able to produce many types of charts very easily, from the very simple to the very complex.","Options\u002Fpairs\u002Fpair1_37.js"]
,["Options\u002Fchusrintroduction.37.2.html","Main Features of the Charts Library","The Charts Library allows you to display data in charts that can be customized in various ways and to interact with these charts in different manners.","Options\u002Fpairs\u002Fpair2_28.js"]
,["Options\u002Fchusrintroduction.37.3.html","Data Features","The data to be represented in a chart can have different forms:","Options\u002Fpairs\u002Fpair3_28.js"]
,["Options\u002Fchusrintroduction.37.4.html","Scale Features","The following types of scales are available in the library:","Options\u002Fpairs\u002Fpair4_27.js"]
,["Options\u002Fchusrintroduction.37.5.html","Feature Illustrations","","Options\u002Fpairs\u002Fpair5_25.js"]
,["Options\u002Fbasics.38.01.html","Chart Basics","This chapter presents the basic concepts that you will need to begin to display your data in charts and to understand how charts work. You will find information on the following topics:","Options\u002Fpairs\u002Fpair1_38.js"]
,["Options\u002Fbasics.38.02.html","What is a Chart?","A chart represents data graphically in different forms (markers, lines, bars, and so on) with scales that are added to indicate the values of the displayed data. We distinguish two kinds of charts:","Options\u002Fpairs\u002Fpair2_29.js"]
,["Options\u002Fbasics.38.03.html","General Architecture of the Charts Library","The general architecture of the Charts Library in Rogue Wave\u00AE\u00A0Views is based on the model-view separation concept. The Charts Library has been designed with a clear separation between the data and the graphical representations of the data. There is a clear distinction between:","Options\u002Fpairs\u002Fpair3_29.js"]
,["Options\u002Fbasics.38.04.html","Data Classes","The base class used to represent a chart data object is the IlvAbstractChartData class. A subclass called IlvMemoryChartData that stores the data sets it manages in memory is provided in the library.","Options\u002Fpairs\u002Fpair4_28.js"]
,["Options\u002Fbasics.38.05.html","Chart Classes","The base class used to display a chart is the IlvChartGraphic class. This class defines a chart object as a graphic object that can be used in the same way as all the other graphic objects defined in Rogue Wave\u00AE\u00A0Views.","Options\u002Fpairs\u002Fpair5_26.js"]
,["Options\u002Fbasics.38.06.html","Basic Steps for Creating a Chart","The basic steps for creating a chart are the same whether you are creating a Cartesian chart or a polar chart. To create a chart, do the following:","Options\u002Fpairs\u002Fpair6_23.js"]
,["Options\u002Fbasics.38.07.html","Creating a Simple Cartesian Chart","You are going to see how to create a simple Cartesian chart that is similar to Chart 1 in Two Charts using the Same Chart Data Object. The data to be represented are the morning and afternoon mean temperatures recorded for each day of a week. The temperatures are expressed in degrees Celsius. The da...","Options\u002Fpairs\u002Fpair7_21.js"]
,["Options\u002Fbasics.38.08.html","Creating a Simple Polar Chart","You are now going to see how to create a polar chart. We will use the same data that we used for creating the Temperatures Chart in the previous section. Instead of representing the morning and afternoon mean temperatures in a Cartesian chart, we are going to represent them in a polar chart. We will...","Options\u002Fpairs\u002Fpair8_19.js"]
,["Options\u002Fbasics.38.09.html","Additional Ways to Customize a Chart","The example charts in The Temperatures Chart with a Legend and Example Polar Chart are quite basic. At this point, we can customize the charts in several other ways to improve their appearance. The same improvements can be made to both of our charts. For example, we can do the following:","Options\u002Fpairs\u002Fpair9_17.js"]
,["Options\u002Fbasics.38.10.html","How Charts Work in Rogue Wave\u00A0Views","A chart object needs several different kinds of objects to display a chart. All these different objects work together in the process of converting data into a graphical display.","Options\u002Fpairs\u002Fpair10_13.js"]
,["Options\u002Fbasics.38.11.html","Component Classes of the Charts Library","A chart object is an instance of the IlvChartGraphic class or one of its derived classes in the Charts Library. (See Chart Classes for more details.)","Options\u002Fpairs\u002Fpair11_12.js"]
,["Options\u002Fbasics.38.12.html","Using the Component Classes in an IlvChartGraphic Object","To see how the component objects are used in a chart object, let\u2019s take another look at our Temperatures Chart (see Example of the Temperatures Chart). Instead of constructing this chart from an IlvCartesianChart object (see Creating a Simple Cartesian Chart), we are going to construct it from an Il...","Options\u002Fpairs\u002Fpair12_11.js"]
,["Options\u002Fbasics.38.13.html","How Displayer Objects Draw the Graphical Display","The drawing of the graphical representations of data is performed by the displayer objects. In order to draw a graphical representation of the data, a displayer needs to have the data points of the data set(s) it is going to display expressed in screen coordinates.","Options\u002Fpairs\u002Fpair13_11.js"]
,["Options\u002Fdatahandling.39.1.html","Data Handling","This chapter provides detailed information on data handling for the charts. You will find information on the following topics:","Options\u002Fpairs\u002Fpair1_39.js"]
,["Options\u002Fdatahandling.39.2.html","Handling Data Storage","The Charts Library has been designed with a clear separation between the data to be displayed and the graphical representation of the data. The storage of the data sets that have to be displayed by a given chart object is handled by a dedicated object referred to as the chart data object.","Options\u002Fpairs\u002Fpair2_30.js"]
,["Options\u002Fdatahandling.39.3.html","Adding Data Sets to Be Displayed by a Chart","To display a data set within a given chart, the data set must be added to the chart data object that is set on the chart. You can do this in two ways:","Options\u002Fpairs\u002Fpair3_30.js"]
,["Options\u002Fdatahandling.39.4.html","Sharing Data Among Charts","With the Charts Library, data can be shared among different charts. The same data set can be set for several chart data objects and the same chart data object can be set on several chart objects. Sharing Data illustrates these basic rules.","Options\u002Fpairs\u002Fpair4_29.js"]
,["Options\u002Fdatahandling.39.5.html","Modifying Data and Updating Charts","The charts created in Rogue Wave\u00AE\u00A0Views are data-aware. Data can be changed \u201Con the fly\u201D and all charts that display the data will be automatically updated to reflect the changes. The charts are automatically updated using listeners that are set on the data. The listeners catch data changes and can ...","Options\u002Fpairs\u002Fpair5_27.js"]
,["Options\u002Fdatahandling.39.6.html","Updating Charts Automatically","Charts are automatically updated when modifications are made to the data they display. This automatic update is performed by listeners that are set on the data.","Options\u002Fpairs\u002Fpair6_24.js"]
,["Options\u002Fdatahandling.39.7.html","Using Listeners to Catch Data Changes","The listeners set on data catch modifications made to the data. Listeners are set at the level of the data sets and at the level of the chart data objects. For both types of listeners, a method is defined for each type of modification that can be made to the object on which the listener is set. The ...","Options\u002Fpairs\u002Fpair7_22.js"]
,["Options\u002Fchartlayout.40.1.html","Chart Layout","This chapter provides detailed information on the chart layout. You can find information on the following topics:","Options\u002Fpairs\u002Fpair1_40.js"]
,["Options\u002Fchartlayout.40.2.html","Computing the Chart Layout","The global layout of a chart is computed by a dedicated object called the layout object. When we speak about the global layout of the chart, we are referring to the position of the different areas of the chart within its bounding box. We distinguish three areas within the bounding box of a chart:","Options\u002Fpairs\u002Fpair2_31.js"]
,["Options\u002Fchartlayout.40.3.html","Setting General Properties of a Chart Layout Object","The following properties are defined for a layout object:","Options\u002Fpairs\u002Fpair3_31.js"]
,["Options\u002Fchartlayout.40.4.html","Getting and Setting the Chart Layout Object of a Chart","When you create a chart object, an IlvChartLayout object is created by default to handle the computation of the layout of the chart.","Options\u002Fpairs\u002Fpair4_30.js"]
,["Options\u002Fdatadisplay.41.01.html","Data Display","This chapter provides detailed information on data display for the charts. You can find information on the following topics:","Options\u002Fpairs\u002Fpair1_41.js"]
,["Options\u002Fdatadisplay.41.02.html","Drawing the Graphical Representations of Data","Each graphical representation of data is displayed within a chart by a dedicated object called a displayer.","Options\u002Fpairs\u002Fpair2_32.js"]
,["Options\u002Fdatadisplay.41.03.html","Using Single Displayers","The base class used to represent a single displayer is the IlvSingleChartDisplayer class.","Options\u002Fpairs\u002Fpair3_32.js"]
,["Options\u002Fdatadisplay.41.04.html","Scatter Displayer","A scatter displayer has the following basic characteristics:","Options\u002Fpairs\u002Fpair4_31.js"]
,["Options\u002Fdatadisplay.41.05.html","Polyline Displayer","A polyline displayer has the following basic characteristics:","Options\u002Fpairs\u002Fpair5_28.js"]
,["Options\u002Fdatadisplay.41.06.html","Polygon Displayer","A polygon displayer has the following basic characteristics:","Options\u002Fpairs\u002Fpair6_25.js"]
,["Options\u002Fdatadisplay.41.07.html","Step Displayer","A step displayer has the following basic characteristics:","Options\u002Fpairs\u002Fpair7_23.js"]
,["Options\u002Fdatadisplay.41.08.html","Stair Displayer","A stair displayer has the following basic characteristics:","Options\u002Fpairs\u002Fpair8_20.js"]
,["Options\u002Fdatadisplay.41.09.html","Bar Displayer","A bar displayer has the following basic characteristics:","Options\u002Fpairs\u002Fpair9_18.js"]
,["Options\u002Fdatadisplay.41.10.html","3D Bar Displayer","A 3D bar displayer has the following basic characteristics:","Options\u002Fpairs\u002Fpair10_14.js"]
,["Options\u002Fdatadisplay.41.11.html","High-Low Displayer","A high-low displayer has the following basic characteristics:","Options\u002Fpairs\u002Fpair11_13.js"]
,["Options\u002Fdatadisplay.41.12.html","High-Low Bar Displayer","A high-low bar displayer has the following basic characteristics:","Options\u002Fpairs\u002Fpair12_12.js"]
,["Options\u002Fdatadisplay.41.13.html","Pie Displayer","A pie displayer has the following basic characteristics:","Options\u002Fpairs\u002Fpair13_12.js"]
,["Options\u002Fdatadisplay.41.14.html","Using Composite Displayers","The base class used to represent a composite displayer is the IlvCompositeChartDisplayer class. All composite displayers are defined as a combination of other displayers, which can be single displayers or composite displayers. The child displayers that make up a composite displayer are automatically...","Options\u002Fpairs\u002Fpair14_10.js"]
,["Options\u002Fdatadisplay.41.15.html","Marked Polyline Displayer","A marked polyline displayer has the following basic characteristics:","Options\u002Fpairs\u002Fpair15_10.js"]
,["Options\u002Fdatadisplay.41.16.html","High-Low Open-Close Displayer","A high-low open-close displayer has the following basic characteristics:","Options\u002Fpairs\u002Fpair16_9.js"]
,["Options\u002Fdatadisplay.41.17.html","Stacked Displayers","The base class used to represent data with a stacked graphical representation is the IlvStackedChartDisplayer class. This type of graphical representation enables you to compare the contribution of a given data value to a total across several data sets. The type of the child displayers that are crea...","Options\u002Fpairs\u002Fpair17_8.js"]
,["Options\u002Fdatadisplay.41.18.html","Side-by-Side Displayers","The base class used to represent data side by side is the IlvSideBySideChartDisplayer class. The type of the child displayers that are created by default to be displayed is not specified at that level of the class hierarchy. However, it is possible to define the child displayers that will be created...","Options\u002Fpairs\u002Fpair18_8.js"]
,["Options\u002Fdatadisplay.41.19.html","Adding a Displayer to a Chart","Once a displayer has been created, it should be added to the chart that needs to use it to display data.","Options\u002Fpairs\u002Fpair19_7.js"]
,["Options\u002Fdatadisplay.41.20.html","Customizing Data Display","By default, data are simply displayed by the defined displayers using the palette(s) set on the displayers. However, you can customize your data display as follows:","Options\u002Fpairs\u002Fpair20_6.js"]
,["Options\u002Fdatadisplay.41.21.html","Adding Graphic Information to a Data Point","You can add specific graphic information to a data point of a given data set. This information is stored in a dedicated object called a point information object. The information will be treated at the time the chart is drawn.","Options\u002Fpairs\u002Fpair21_6.js"]
,["Options\u002Fdatadisplay.41.22.html","Defining How the Palettes are Applied for the Data Display","By default, the palette used by a displayer to display a data point of a data set is determined in the following order:","Options\u002Fpairs\u002Fpair22_5.js"]
,["Options\u002Fdatadisplay.41.23.html","Projecting Out-of-Bounds Data Points","By default, the data points that should appear outside of the data display area (if such data points exist) are not drawn. The graphical representations of such data points are simply clipped by the data display area. However, for the displayers that are instances of the IlvPolylineChartDisplayer cl...","Options\u002Fpairs\u002Fpair23_5.js"]
,["Options\u002Fscaledisplay.42.01.html","Scales Display","This chapter provides detailed information on displaying the scales of charts. You can find information on the following topics:","Options\u002Fpairs\u002Fpair1_42.js"]
,["Options\u002Fscaledisplay.42.02.html","Drawing the Scales of a Chart","A scale is displayed within a chart by a dedicated object called a scale displayer.","Options\u002Fpairs\u002Fpair2_33.js"]
,["Options\u002Fscaledisplay.42.03.html","Setting General Properties","The following properties are defined for all the scale displayers:","Options\u002Fpairs\u002Fpair3_33.js"]
,["Options\u002Fscaledisplay.42.04.html","Using Single Scale Displayers","The base class used to represent a single scale is the IlvSingleScaleDisplayer class.","Options\u002Fpairs\u002Fpair4_32.js"]
,["Options\u002Fscaledisplay.42.05.html","Setting General Properties","The following properties are defined for all the single scale displayers. The methods followed by an asterisk (*) are defined as pure virtual at the level of the IlvAbstractScaleDisplayer class and are redefined at the level of the IlvSingleScaleDisplayer class.","Options\u002Fpairs\u002Fpair5_29.js"]
,["Options\u002Fscaledisplay.42.06.html","Predefined Single Scale Displayers","The following sections describe the single scale displayers of the Charts Library. For each scale displayer, you will find a table that describes the conditions for using the scale displayer, including whether the scale displayer can be used whatever the type of the projection is and for which coord...","Options\u002Fpairs\u002Fpair6_26.js"]
,["Options\u002Fscaledisplay.42.07.html","Using Scale Steps Updaters to Compute Scales Graduations","The computation of the steps and substeps is performed by a dedicated object called scale steps updater that is set on the scale.","Options\u002Fpairs\u002Fpair7_24.js"]
,["Options\u002Fscaledisplay.42.08.html","Adding a Scale Displayer in a Chart","A chart uses one abscissa scale and as many ordinate scales as you want. The type of scales that can be used for a given chart depends on the type of the projection used in the chart.","Options\u002Fpairs\u002Fpair8_21.js"]
,["Options\u002Fscaledisplay.42.09.html","Advanced Features for Customizing Scales","Several of the features for customizing scales cannot be made by simply setting properties on scales. These advanced features require you to specify certain settings on other objects of the chart. These advanced features are the following:","Options\u002Fpairs\u002Fpair9_19.js"]
,["Options\u002Fscaledisplay.42.10.html","Defining the Minimum and Maximum Data Values Represented by a Scale","The minimum and maximum data values that are represented by a scale are stored in the coordinate information object associated with the coordinate represented by the scale.","Options\u002Fpairs\u002Fpair10_15.js"]
,["Options\u002Fscaledisplay.42.11.html","Applying a Transformation to the Data Values Represented by a Scale","Different types of transformations can be applied to the data values that are represented by a given scale. These transformations are defined by means of transformer objects that are all instances of subclasses of the IlvChartCoordinateTransformer class. Several subclasses are provided in the Charts...","Options\u002Fpairs\u002Fpair11_14.js"]
,["Options\u002Fdecodisplay.43.01.html","Decorations Display","The Charts Library provides the capability to add decorations to a chart that will improve its appearance or help in understanding the data. This chapter provides information on displaying these decorations in a chart. You will find information on the following topics:","Options\u002Fpairs\u002Fpair1_43.js"]
,["Options\u002Fdecodisplay.43.02.html","Displaying a Legend","The base class used to define a legend to be added to a given chart is the IlvChartLegend class. This class inherits from the IlvShadowRectangle class. Thus, the chart legend object is a graphic object just like the chart object and is positioned independently of the chart object.","Options\u002Fpairs\u002Fpair2_34.js"]
,["Options\u002Fdecodisplay.43.03.html","Setting General Properties","The following table shows the properties defined for a chart legend object.","Options\u002Fpairs\u002Fpair3_34.js"]
,["Options\u002Fdecodisplay.43.04.html","Adding a Legend to a Chart","A chart legend object is added to a chart by means of the IlvChartGraphic::setLegend method. When the legend is set on the chart, the legend items corresponding to the displayers that are defined in the chart are computed automatically and added to the legend (if the property \u201CAutomatically Recomput...","Options\u002Fpairs\u002Fpair4_33.js"]
,["Options\u002Fdecodisplay.43.05.html","Displaying a Grid","A grid is a graphical indicator of data values. A grid is attached to a scale and is composed of the following:","Options\u002Fpairs\u002Fpair5_30.js"]
,["Options\u002Fdecodisplay.43.06.html","Setting General Properties","The following table shows the properties defined for all the grid displayers.","Options\u002Fpairs\u002Fpair6_27.js"]
,["Options\u002Fdecodisplay.43.07.html","Adding a Grid Displayer to a Scale","Since a grid is attached to a scale, the type of the grid used for a given scale depends on the type of the scale. The type of the scales that can be used for a given chart depends on the type of the projection used in the chart.","Options\u002Fpairs\u002Fpair7_25.js"]
,["Options\u002Fdecodisplay.43.08.html","Displaying a Cursor","A cursor is a graphical indicator of a data value. A cursor is associated with a given scale and indicates the value corresponding to a given data point on this scale. It is composed of two distinct elements:","Options\u002Fpairs\u002Fpair8_22.js"]
,["Options\u002Fdecodisplay.43.09.html","Setting General Properties","The following table shows the properties defined for all the classes displaying cursors.","Options\u002Fpairs\u002Fpair9_20.js"]
,["Options\u002Fdecodisplay.43.10.html","Adding a Cursor to a Scale","You can set as many cursors as you want on a given scale. Since a cursor is associated with a scale, the type of the cursor used for a given scale depends on the type of the scale. The type of the scales that can be used for a given chart depends on the type of the projection used in the chart.","Options\u002Fpairs\u002Fpair10_16.js"]
,["Options\u002Finteracting.44.01.html","Interacting with Charts","The Charts Library provides interactors that allow the user to interact with a chart. This chapter provides detailed information on the chart interactors. You can find information on the following topics:","Options\u002Fpairs\u002Fpair1_44.js"]
,["Options\u002Finteracting.44.02.html","Using the Chart Interactors","The base class used to define the behavior of a chart in response to a given action by the user is the IlvChartInteractor class.","Options\u002Fpairs\u002Fpair2_35.js"]
,["Options\u002Finteracting.44.03.html","Zoom Interactor","A zoom interactor has the following basic characteristics:","Options\u002Fpairs\u002Fpair3_35.js"]
,["Options\u002Finteracting.44.04.html","Scroll Interactor","A scroll interactor has the following basic characteristics:","Options\u002Fpairs\u002Fpair4_34.js"]
,["Options\u002Finteracting.44.05.html","Pan Interactor","A pan interactor has the following basic characteristics:","Options\u002Fpairs\u002Fpair5_31.js"]
,["Options\u002Finteracting.44.06.html","Crosshair Interactor","A crosshair interactor has the following basic characteristics:","Options\u002Fpairs\u002Fpair6_28.js"]
,["Options\u002Finteracting.44.07.html","Drag-Point Interactor","A drag-point interactor allows the user to drag a data point. It has the following basic characteristics:","Options\u002Fpairs\u002Fpair7_26.js"]
,["Options\u002Finteracting.44.08.html","Highlight-Data-Point Interactor","A highlight-data-point interactor allows the user to trigger an action whenever the mouse moves over a data point in the data display area. It has the following basic characteristics:","Options\u002Fpairs\u002Fpair8_23.js"]
,["Options\u002Finteracting.44.09.html","Information-View Interactor","A information-view interactor displays information about a data point whenever the user moves the mouse over the data point. It has the following basic characteristics:","Options\u002Fpairs\u002Fpair9_21.js"]
,["Options\u002Finteracting.44.10.html","Select-Data-Points Interactor","A select-data-points interactor allows the user to select data points in the data display area. It has the following basic characteristics:","Options\u002Fpairs\u002Fpair10_17.js"]
,["Options\u002Finteracting.44.11.html","Setting an Interactor on a Chart Object","Several interactors can be used at the same time to interact with a given chart object. These interactors are managed by a dedicated object called a chart interactor manager.","Options\u002Fpairs\u002Fpair11_15.js"]
,["Options\u002Fanimatedchart.45.1.html","Using Charts to Display Real-Time Data","The Charts Library provides the capability to display real-time data in your charts. This chapter gives detailed information on how to use the scroll modes to do this.","Options\u002Fpairs\u002Fpair1_45.js"]
,["Options\u002Fanimatedchart.45.2.html","Automatic Scroll Modes","A chart object can display either predefined data or real-time data (data arriving \u201Con the fly\u201D). The way a given chart object reacts when new data are added is defined by a value of type IlvChartGraphic::ScrollMode. Three scroll modes have been predefined:","Options\u002Fpairs\u002Fpair2_36.js"]
,["Options\u002Fanimatedchart.45.3.html","Using Automatic Scroll Modes to Display Real-Time Data","To use automatic scroll modes to display data arriving on the fly (real-time data), do the following:","Options\u002Fpairs\u002Fpair3_36.js"]
,["Options\u002Fanimatedchart.45.4.html","Improving Performance When Adding Data Points to a Chart","By default, each time a data point is added to a data set, the chart is updated immediately. The area of the chart where the graphical representation of the new data point should be displayed is first invalidated and then redrawn by the holder of the chart. The holder is an instance of the IlvGraphi...","Options\u002Fpairs\u002Fpair4_35.js"]
,["Options\u002Fanimatedchart.45.5.html","Releasing the Automatic Update","The automatic update of the charts that is performed when data are modified can be released by calling the method IlvChartGraphic::reDrawWhenNotified with IlvFalse as a parameter. In this a case, the redrawing will have to be performed manually by calling the IlvChartGraphic::updateAndReDraw method....","Options\u002Fpairs\u002Fpair5_32.js"]
,["Options\u002FchusrappendixA.46.1.html","The IlvXMLChartData Class","In this Appendix you will find a detailed description of the IlvXMLChartData class.","Options\u002Fpairs\u002Fpair1_46.js"]
,["Options\u002FchusrappendixA.46.2.html","Introducing the IlvXMLChartData Class","The class IlvXMLChartData derives from IlvAbstractChartData and reads one or several data sets from an XML file. The XML file should conform to the following DTD:","Options\u002Fpairs\u002Fpair2_37.js"]
,["Options\u002FchusrappendixA.46.3.html","Tags Definition","In the next paragraphs, you will find the definition of the following tags:","Options\u002Fpairs\u002Fpair3_37.js"]
,["Options\u002FchusrappendixA.46.4.html","data","The <data> tag defines a data set, that is, a set of series. It is possible to define one of the series as being the abscissa values, using the xSeries attribute:","Options\u002Fpairs\u002Fpair4_36.js"]
,["Options\u002FchusrappendixA.46.5.html","series","The <series>...<\u002Fseries> tag has the following attributes:","Options\u002Fpairs\u002Fpair5_33.js"]
,["Options\u002FchusrappendixA.46.6.html","valuesList","The <valuesList>...<\u002FvaluesList> tag can hold either floating point values, or calendar dates (in dd\u002Fmm\u002Fyy format). It accepts only the attribute delimiter which defines the value delimiter in the list. The default is \u2019,\u2019.","Options\u002Fpairs\u002Fpair6_29.js"]
,["Options\u002FchusrappendixA.46.7.html","valueOperator","The <valueOperator> tag is only used to define a list of properties which can be processed separately through custom classes (see the IlvXMLPropertyReader class) and will be applied to the series for which the properties are defined.","Options\u002Fpairs\u002Fpair7_27.js"]
,["Options\u002FchusrappendixA.46.8.html","property","Example:","Options\u002Fpairs\u002Fpair8_24.js"]
,["Options\u002FchusrappendixA.46.9.html","Customizing Value and Date List Processing","If you need a specific treatment of any value lists, it is possible to give your own value list processor to the IlvXMLChartData class. To do this, derive IlvXMLValueListProcessor and override the processValueList() method. Then use IlvXMLChartData::registerValueListProcessor() to get it used by the...","Options\u002Fpairs\u002Fpair9_22.js"]
,["Options\u002Fglusrfrontcover.html","Graph Layout","This manual provides information for developing applications that incorporate the Rogue Wave\u00A0Views Graph Layout package. It describes the fundamentals that underlie the graph algorithms and shows how to create customized graph layouts.","Options\u002Fpairs\u002Fpair1_47.js"]
,["Options\u002Fglusrintroduction.48.1.html","Introducing the Graph Layout Package","This chapter introduces you to the Graph Layout package of Rogue Wave\u00AE\u00A0Views. The following topics are covered:","Options\u002Fpairs\u002Fpair1_48.js"]
,["Options\u002Fglusrintroduction.48.2.html","What is the Graph Layout Package of Rogue Wave\u00A0Views?","Many types of complex business data can be best visualized as a set of nodes and interconnecting links, more commonly called a graph or a network. Examples of graphs include business organizational charts, work flow diagrams, telecom network displays, and genealogical trees. Whenever these graphs be...","Options\u002Fpairs\u002Fpair2_38.js"]
,["Options\u002Fglusrintroduction.48.3.html","Features of Rogue Wave\u00A0Views Graph Layout","The Graph Layout package of Rogue Wave\u00A0Views provides several ready-to-use layout algorithms. In addition, new layout algorithms can be developed using the generic layout framework of the Graph Layout package.","Options\u002Fpairs\u002Fpair3_38.js"]
,["Options\u002Fglusrintroduction.48.4.html","Rogue Wave\u00A0Views Graph Layout in User Interface Applications","Many fields use graph drawings and graph layouts in user interface applications. Therefore, the Rogue Wave\u00A0Views Graph Layout package is particularly well-suited for these kinds of applications. The following is a list of some of the fields where the graph layout capabilities of the Graph Layout pac...","Options\u002Fpairs\u002Fpair4_37.js"]
,["Options\u002Fglusrbasics.49.01.html","Basic Concepts","In this chapter, you will learn about some basic concepts and background information that will help you when using the Rogue Wave\u00AE\u00A0Views Graph Layout package. The following topics are covered:","Options\u002Fpairs\u002Fpair1_49.js"]
,["Options\u002Fglusrbasics.49.02.html","Graph Layout: A Brief Introduction","This section provides some background information about graph layout in general, not specifically related to the Rogue Wave\u00A0Views Graph Layout package.","Options\u002Fpairs\u002Fpair2_39.js"]
,["Options\u002Fglusrbasics.49.03.html","What is a Good Layout?","To deal with the various needs of different applications, many classes of graph layout algorithms have been developed. A layout algorithm addresses one or more quality criteria, depending on the type of graph and the features of the algorithm, when laying out a graph. The most common criteria are:","Options\u002Fpairs\u002Fpair3_39.js"]
,["Options\u002Fglusrbasics.49.04.html","Methods for Using Layout Algorithms","Layout algorithms can be employed in a variety of ways in the various applications in which they are used. The most common ways of using an algorithm are the following:","Options\u002Fpairs\u002Fpair4_38.js"]
,["Options\u002Fglusrbasics.49.05.html","Graph Layout in Rogue Wave\u00A0Views","In Rogue Wave\u00A0Views, graphs are instances of the class IlvGrapher. We call these instances graphers. The nodes, which are instances of IlvGraphic, and the links, which are instances of IlvLinkImage, \u201Cknow\u201D how to draw themselves. The nodes can have arbitrary coordinates, or they can be placed intera...","Options\u002Fpairs\u002Fpair5_34.js"]
,["Options\u002Fglusrbasics.49.06.html","The Base Class: IlvGraphLayout","The IlvGraphLayout class is the base class for all layout algorithms. This class is an abstract class and cannot be used directly. You must use one of its subclasses (IlvTreeLayout, IlvHierarchicalLayout, IlvOrthogonalLinkLayout, IlvRandomLayout, or IlvBusLayout). You can also create your own subcla...","Options\u002Fpairs\u002Fpair6_30.js"]
,["Options\u002Fglusrbasics.49.07.html","Basic Operations with IlvGraphLayout","When subclassing IlvGraphLayout, you will normally use the basic methods described in this section.","Options\u002Fpairs\u002Fpair7_28.js"]
,["Options\u002Fglusrbasics.49.08.html","Layout Parameters in IlvGraphLayout","The IlvGraphLayout class defines a number of generic parameters. These parameters can be used to customize the layout algorithms.","Options\u002Fpairs\u002Fpair8_25.js"]
,["Options\u002Fglusrbasics.49.09.html","Allowed Time","Several layout algorithms can be designed to stop computation when a user-defined time specification is exceeded. This may be done for different reasons: as a security measure to avoid a long computation time on very large graphs or as an upper limit for algorithms that iteratively improve a current...","Options\u002Fpairs\u002Fpair9_23.js"]
,["Options\u002Fglusrbasics.49.10.html","Animation","Some iterative layout algorithms can optionally redraw the graph after each iteration or step. This may create a pleasant animation effect and may be used to keep the user aware of the evolution of the layout computation by showing intermediate results (as a kind of progress bar). However, this incr...","Options\u002Fpairs\u002Fpair10_18.js"]
,["Options\u002Fglusrbasics.49.11.html","Layout Region","Some layout algorithms can control the size of the graph drawing and can take into account a user-defined layout region. For example, you can specify that the layout should fit a given rectangle within a manager view or that it should fit the entire manager view.","Options\u002Fpairs\u002Fpair11_16.js"]
,["Options\u002Fglusrbasics.49.12.html","Preserve Fixed Links","At times, you may want some links of the graph to be \u201Cpinned\u201D (that is, to stay in their current shape when the layout is performed). You need a way to indicate the links that the layout algorithm cannot reshape. This makes sense especially when using a Semi-automatic layout (the method where the en...","Options\u002Fpairs\u002Fpair12_13.js"]
,["Options\u002Fglusrbasics.49.13.html","Preserve Fixed Nodes","At times, you may want some nodes of the graph to be \u201Cpinned\u201D (that is, to stay in their current position when the layout is performed). You need a way to indicate the nodes that the layout algorithm cannot move. This makes sense especially when using a Semi-automatic layout (the method where the us...","Options\u002Fpairs\u002Fpair13_13.js"]
,["Options\u002Fglusrbasics.49.14.html","Random Generator Seed Value","Some layout algorithms use random numbers (or randomly chosen parameters) for which they accept a user-defined seed value. For example, the Random Layout uses the random generator to compute the coordinates of the nodes.","Options\u002Fpairs\u002Fpair14_11.js"]
,["Options\u002Fglusrbasics.49.15.html","Use Default Parameters","All the generic parameters have a default value. After modifying parameters, you may want the layout algorithm to use the default values. Then, you may want to return to your customized values. Rogue Wave\u00AE\u00A0Views keeps the previous settings when selecting the default values mode. You can switch betwe...","Options\u002Fpairs\u002Fpair15_11.js"]
,["Options\u002Fglusrgetstart.50.1.html","Getting Started with Graph Layout","This chapter provides information to get started using the Graph Layout package of Rogue Wave\u00AE\u00A0Views. The following topics are covered:","Options\u002Fpairs\u002Fpair1_50.js"]
,["Options\u002Fglusrgetstart.50.2.html","Basic Steps for Using Layout Algorithms: A Summary","To use the layout algorithms provided by the Graph Layout package of Rogue Wave\u00A0Views, you will usually perform the following steps:","Options\u002Fpairs\u002Fpair2_40.js"]
,["Options\u002Fglusrgetstart.50.3.html","Sample Application","The basic steps for using the layout algorithms are illustrated in the sample application provided with this release. The sample uses the Orthogonal Link Layout, but the principles are similar for any of the other layouts.","Options\u002Fpairs\u002Fpair3_40.js"]
,["Options\u002Fglusrgetstart.50.4.html","Launching Rogue Wave\u00A0Views Studio with the Graph Layout Extension","To launch Rogue Wave\u00AE\u00A0Views Studio with the Graphic Layout extension, do the following:","Options\u002Fpairs\u002Fpair4_39.js"]
,["Options\u002Flayouts.51.01.html","Layout Algorithms","This chapter describes the layout algorithms of the Rogue Wave\u00AE\u00A0Views Graph Layout package. The following topics are covered:","Options\u002Fpairs\u002Fpair1_51.js"]
,["Options\u002Flayouts.51.02.html","Determining the Appropriate Layout Algorithm","When using the Graph Layout package, you need to determine which of the ready-to-use layout algorithms is appropriate for your particular needs. Some layout algorithms can handle a wide range of graphs. Others are designed for particular classes of graphs and will give poor results or will reject gr...","Options\u002Fpairs\u002Fpair2_41.js"]
,["Options\u002Flayouts.51.03.html","Generic Parameters Support","The generic parameters of the Graph Layout package allow you to customize the behavior of the layout algorithms to meet specific needs. Generic Parameters Supported by Layout Algorithms indicates the generic parameters that are supported by each layout algorithm. These parameters are defined in the ...","Options\u002Fpairs\u002Fpair3_41.js"]
,["Options\u002Flayouts.51.04.html","Layout Characteristics","It is often useful to know how certain settings will affect the resulting layout of the graph after the layout algorithm has been applied. Layout Characteristics of Layout Algorithms provides additional information about the behavior of the layout algorithms.","Options\u002Fpairs\u002Fpair4_40.js"]
,["Options\u002Flayouts.51.05.html","Tree Layout","In this section, you will learn about the Tree Layout algorithm provided with the Rogue Wave\u00AE\u00A0Views Graph Layout package (class IlvTreeLayout from the library ilvtree).","Options\u002Fpairs\u002Fpair5_35.js"]
,["Options\u002Flayouts.51.06.html","Brief Description of the Algorithm","For the Tree Layout, the core algorithm for the layout modes free, level, and radial works in just two steps and is very fast.","Options\u002Fpairs\u002Fpair6_31.js"]
,["Options\u002Flayouts.51.07.html","Parameters","The Tree Layout uses generic parameters, common to other graph layouts, and specific parameters applicable in tree layouts only. Refer to the following sections for general information on parameters among the graph layouts:","Options\u002Fpairs\u002Fpair7_29.js"]
,["Options\u002Flayouts.51.08.html","Free Layout Mode","The free layout mode arranges the children of each node starting recursively from the root so that the links flow roughly in the same direction. For instance, if the link flow direction is top-down, the root node is placed at the top of the drawing. Siblings (that is, nodes with the same parent) are...","Options\u002Fpairs\u002Fpair8_26.js"]
,["Options\u002Flayouts.51.09.html","Level Layout Mode","The level layout mode partitions the node into levels and arranges the levels horizontally or vertically. The root is placed at level 0, its children at level 1, the children of those children at level 2, and so on. In contrast to the free layout mode, in level layout mode the nodes of the same leve...","Options\u002Fpairs\u002Fpair9_24.js"]
,["Options\u002Flayouts.51.10.html","Radial Layout Mode","The radial layout mode partitions the node into levels and arranges the levels in circles around the root node. Radial Layout Mode shows an example of the radial layout mode. The compass icons show the compass directions in this drawing.","Options\u002Fpairs\u002Fpair10_19.js"]
,["Options\u002Flayouts.51.11.html","Tip-Over Layout Modes","As in radial layout, drawing in free layout mode can be adjusted to the aspect ratio of the area. Free layout mode can also use tip-over alignment to balance the drawing between height and depth.","Options\u002Fpairs\u002Fpair11_17.js"]
,["Options\u002Flayouts.51.12.html","For Experts: Further Tips and Tricks","Here are more featured items for using Tree Layout:","Options\u002Fpairs\u002Fpair12_14.js"]
,["Options\u002Flayouts.51.13.html","Hierarchical Layout","In this section, you will learn about the Hierarchical Layout algorithm provided with the Rogue Wave\u00A0Views Graph Layout package (class IlvHierarchicalLayout from the library ilvhierarchical).","Options\u002Fpairs\u002Fpair13_14.js"]
,["Options\u002Flayouts.51.14.html","Brief Description of the Algorithm","This algorithm works in four steps.","Options\u002Fpairs\u002Fpair14_12.js"]
,["Options\u002Flayouts.51.15.html","Parameters","The Hierarchical Layout uses generic parameters, common to other graph layouts, and specific parameters applicable in hierarchical layouts only. Refer to the following sections for general information on parameters among the graph layouts:","Options\u002Fpairs\u002Fpair15_12.js"]
,["Options\u002Flayouts.51.16.html","Orthogonal Link Layout","In this section, you will learn about the Orthogonal Link Layout algorithm from the Rogue Wave\u00A0Views Graph Layout package (class IlvOrthogonalLinkLayout from the library ilvorthlink).","Options\u002Fpairs\u002Fpair16_10.js"]
,["Options\u002Flayouts.51.17.html","Brief Description of the Algorithm","The Orthogonal Link Layout algorithm is based on a combinatorial optimization that chooses the \u201Coptimal\u201D shape of the links in order to minimize a cost function. This cost function is proportional to the number of link-to-link and link-to-node crossings.","Options\u002Fpairs\u002Fpair17_9.js"]
,["Options\u002Flayouts.51.18.html","Parameters","The Orthogonal Link Layout uses generic parameters, common to other graph layouts, and specific parameters applicable in orthogonal link layouts only. Refer to the following sections for general information on parameters among the graph layouts:","Options\u002Fpairs\u002Fpair18_9.js"]
,["Options\u002Flayouts.51.19.html","Random Layout","In this section, you will learn about the Random Layout algorithm from the Rogue Wave\u00AE\u00A0Views Graph Layout package (class IlvRandomLayout from the library ilvrandom).","Options\u002Fpairs\u002Fpair19_8.js"]
,["Options\u002Flayouts.51.20.html","Brief Description of the Algorithm","The Random Layout algorithm is not really a layout algorithm. It simply places the nodes at randomly computed positions inside a user-defined region. Nevertheless, the Random Layout algorithm may be useful when a random, initial placement is needed by another layout algorithm or in cases where an at...","Options\u002Fpairs\u002Fpair20_7.js"]
,["Options\u002Flayouts.51.21.html","Parameters","The Random Layout uses generic parameters, common to other graph layouts, and specific parameters applicable in random layouts only. Refer to the following sections for general information on parameters among the graph layouts:","Options\u002Fpairs\u002Fpair21_7.js"]
,["Options\u002Flayouts.51.22.html","Bus Layout","In this section, you will learn about the Bus Layout algorithm from the Rogue Wave\u00A0Views Graph Layout package (class IlvBusLayout from the library ilvbus).","Options\u002Fpairs\u002Fpair22_6.js"]
,["Options\u002Flayouts.51.23.html","Brief Description of the Algorithm","Bus topology is well-known in network management and telecommunications fields. The Bus Layout class can display these topologies nicely. It represents the \u201Cbus\u201D as a \u201Cserpent\u201D polyline. The width of the \u201Cserpent\u201D is user-defined (via the width of the layout region parameter) and the height is compu...","Options\u002Fpairs\u002Fpair23_6.js"]
,["Options\u002Flayouts.51.24.html","Parameters","The Bus Layout uses generic parameters, common to other graph layouts, and specific parameters applicable in bus layouts only. Refer to the following sections for general information on parameters among the graph layouts:","Options\u002Fpairs\u002Fpair24_5.js"]
,["Options\u002Fglusradvanced.52.01.html","Using Advanced Features","This chapter describes advanced features for using the Graph Layout package of Rogue Wave\u00AE\u00A0Views. The following topics are covered:","Options\u002Fpairs\u002Fpair1_52.js"]
,["Options\u002Fglusradvanced.52.02.html","Using a Layout Report","Layout reports are objects used to store information about the particular behavior of a layout algorithm. After the layout is completed, this information is available to be read from the layout report.","Options\u002Fpairs\u002Fpair2_42.js"]
,["Options\u002Fglusradvanced.52.03.html","Using Layout Event Listeners","The layout event listeners mechanism provides a way to inform the end user of what is happening during the layout. At times, a layout algorithm may take a long time to execute, especially when dealing with large graphs. In addition, an algorithm may not converge in some cases. No matter what the sit...","Options\u002Fpairs\u002Fpair3_42.js"]
,["Options\u002Fglusradvanced.52.04.html","Using the Graph Model","The IlvGraphModel class defines a suitable, generic API for graphs that have to be laid out with Rogue Wave\u00AE\u00A0Views graph layout algorithms.","Options\u002Fpairs\u002Fpair4_41.js"]
,["Options\u002Fglusradvanced.52.05.html","The Graph Model Concept","With a graph model, you can use already-built graphs, nodes, and links that have been developed without Rogue Wave\u00AE\u00A0Views and apply the layout algorithms of Rogue Wave\u00A0Views. The graph model provides the basic, generic operations for performing the layout. A subclass must be written to adapt the gra...","Options\u002Fpairs\u002Fpair5_36.js"]
,["Options\u002Fglusradvanced.52.06.html","The IlvGraphModel Class","The IlvGraphModel class is an abstract class. Because it does not provide a concrete implementation of a graph data structure, a complete implementation must be provided by \u201Cadapter\u201D classes. The adapters extend the IlvGraphModel class and must use an underlying graph data structure. A special adapt...","Options\u002Fpairs\u002Fpair6_32.js"]
,["Options\u002Fglusradvanced.52.07.html","Using the IlvGrapherAdapter","The IlvGrapherAdapter class is a concrete subclass of IlvGraphModel that allows an IlvGrapher to be laid out using the layout algorithms provided in Rogue Wave\u00A0Views. It provides an implementation for all the abstract methods of IlvGraphModel. It also provides an overridden implementation of some no...","Options\u002Fpairs\u002Fpair7_30.js"]
,["Options\u002Fglusradvanced.52.08.html","Laying Out a Non-Views Grapher","","Options\u002Fpairs\u002Fpair8_27.js"]
,["Options\u002Fglusradvanced.52.09.html","Using the Filtering Features to Lay Out a Part of an IlvGrapher","","Options\u002Fpairs\u002Fpair9_25.js"]
,["Options\u002Fglusradvanced.52.10.html","Filtering by Layers","Inside an IlvGrapher, nodes and links can be managed by layers. (See the IlvManagerLayer class). Rogue Wave\u00A0Views allows you to specify that only nodes and links belonging to certain layers have to be taken into account when performing the layout. Use the following methods of the IlvGrapherAdapter c...","Options\u002Fpairs\u002Fpair10_20.js"]
,["Options\u002Fglusradvanced.52.11.html","Filtering by Graphic Objects","The nodes and links to be taken into account during the layout can also be filtered individually. To do this, a custom subclass of IlvLayoutGraphicFilter must be written. The filtering rules have to be embedded in the overridden implementation of the IlvLayoutGraphicFilter::accept method. For exampl...","Options\u002Fpairs\u002Fpair11_18.js"]
,["Options\u002Fglusradvanced.52.12.html","Laying Out Graphs with Nonzoomable Graphic Objects","","Options\u002Fpairs\u002Fpair12_15.js"]
,["Options\u002Fglusradvanced.52.13.html","A Special Case: Nonzoomable Graphic Objects","A graphic object is said to be zoomable if its bounding box follows the zoom level. Otherwise, the object is nonzoomable. (To know whether a graphic object is zoomable, use its IlBoolean zoomable() method, or check its documentation.)","Options\u002Fpairs\u002Fpair13_15.js"]
,["Options\u002Fglusradvanced.52.14.html","Reference Transformers","When a grapher contains nonzoomable graphic objects, it is not possible to deal with the geometry of the IlvGrapher based on the graph objects bounding boxes systematically computed for an identity transformer (manager coordinates). To ensure that the drawing of the laid-out graph is always correct,...","Options\u002Fpairs\u002Fpair14_13.js"]
,["Options\u002Fglusradvanced.52.15.html","How a Reference Transformer is Used","For a simple example of how a reference transformer is used, consider the IlvGraphModel::boundingBox(IlAny nodeOrLink) method. This abstract method of the IlvGraphModel class is implemented in the IlvGrapherAdapter. To compute the bounding box, it calls the IlvGraphic::boundingBox(IlvTransformer t) ...","Options\u002Fpairs\u002Fpair15_13.js"]
,["Options\u002Fglusradvanced.52.16.html","Reference Views","Optionally, an IlvMgrView can be specified as a reference view for the IlvGrapherAdapter. If a reference view is specified, its current transformer (at the moment when the layout is started) is automatically used as the reference transformer. Usually, applications use the same manager view that is u...","Options\u002Fpairs\u002Fpair16_11.js"]
,["Options\u002Fglusradvanced.52.17.html","Specifying a Reference Transformer","A reference transformer can be specified explicitly using the method:","Options\u002Fpairs\u002Fpair17_10.js"]
,["Options\u002Fglusradvanced.52.18.html","Defining a New Type of Layout","If the layout algorithms provided in Rogue Wave\u00AE\u00A0Views do not meet your needs, you can develop your own layout algorithms by subclassing IlvGraphLayout.","Options\u002Fpairs\u002Fpair18_10.js"]
,["Options\u002Fglusradvanced.52.19.html","Questions and Answers about Using the Layout Algorithms","Table\u00A05.2 provides some helpful suggestions for using the layout algorithms. You may find some answers to questions that come up when using the Graph Layout package.","Options\u002Fpairs\u002Fpair19_9.js"]
,["Options\u002Fdocfrontcover.html","Maps","This manual provides conceptual and hands-on information for developing applications that incorporate Rogue Wave\u00AE\u00A0Views Maps. It describes the fundamentals that underlie Rogue Wave\u00A0Views Maps and shows how to create and use map objects.","Options\u002Fpairs\u002Fpair1_53.js"]
,["Options\u002Fmapsusrintro.54.1.html","Introducing Rogue Wave\u00A0Views Maps","This chapter introduces you to the Rogue Wave\u00AE\u00A0Views\u00A0Maps package. Rogue Wave\u00A0Views\u00A0Maps consists of a full-featured C++ class library for building high-performance applications that require the use of a cartographic background.","Options\u002Fpairs\u002Fpair1_54.js"]
,["Options\u002Fmapsusrintro.54.2.html","What Is Rogue Wave\u00A0Views Maps?","Rogue Wave\u00AE\u00A0Views Maps consists of the following components:","Options\u002Fpairs\u002Fpair2_43.js"]
,["Options\u002Fmapsusrintro.54.3.html","Installation of Rogue Wave\u00A0Views Maps","In order to use the product, you need the following software:","Options\u002Fpairs\u002Fpair3_43.js"]
,["Options\u002Fmapsusrgetstart.55.01.html","Getting Started with Rogue Wave\u00A0Views Maps","This chapter shows you the main features of Rogue Wave\u00AE\u00A0Views Maps, by creating maps using the Rogue Wave\u00A0Views Map Builder. By working with different examples, you will see the efficiency of the predefined map readers, the ease of connection to an Oracle Spatial database, and other features that ar...","Options\u002Fpairs\u002Fpair1_55.js"]
,["Options\u002Fmapsusrgetstart.55.02.html","Data used in Examples","This chapter uses data for demonstration purposes as described in the following list. For a list of suggested free sources for downloading map data see Map Data.","Options\u002Fpairs\u002Fpair2_44.js"]
,["Options\u002Fmapsusrgetstart.55.03.html","Creating a Map","","Options\u002Fpairs\u002Fpair3_44.js"]
,["Options\u002Fmapsusrgetstart.55.04.html","Running Rogue Wave\u00A0Views Map Builder","To launch Rogue Wave\u00AE\u00A0Views Map Builder:","Options\u002Fpairs\u002Fpair4_42.js"]
,["Options\u002Fmapsusrgetstart.55.05.html","Loading the File Containing the Coastal Borders Information","The first Shapefile you load, for example, Poline.shp, contains the coastal borders information of the Philippines. Each Shapefile contains one \u201Ctheme,\u201D such as roads, towns, or coastal borders and all the objects of the file are of the same type (line, point, or polygon, and so on). The theme of th...","Options\u002Fpairs\u002Fpair5_37.js"]
,["Options\u002Fmapsusrgetstart.55.06.html","Using the Rogue Wave\u00A0Views Map Builder Toolbar","With the map loaded, try using the following commands on the Map Builder toolbar:","Options\u002Fpairs\u002Fpair6_33.js"]
,["Options\u002Fmapsusrgetstart.55.07.html","Loading the Roads into the Map","In this section, you will see how to choose a renderer and how to use the scale filters.","Options\u002Fpairs\u002Fpair7_31.js"]
,["Options\u002Fmapsusrgetstart.55.08.html","Loading the Towns","In this section, you will see how to attach the attributes and display them.","Options\u002Fpairs\u002Fpair8_28.js"]
,["Options\u002Fmapsusrgetstart.55.09.html","Loading the Large Towns Into the Map","In this section you will see how to set renderer properties, edit layers, and save your Rogue Wave\u00AE\u00A0Views map.","Options\u002Fpairs\u002Fpair9_26.js"]
,["Options\u002Fmapsusrgetstart.55.10.html","Editing the Layers","Layer ordering and visibility filters can be changed, by right-clicking the layer name in the legend window. The following menu is displayed:","Options\u002Fpairs\u002Fpair10_21.js"]
,["Options\u002Fmapsusrgetstart.55.11.html","Saving the File","At this point, you are going to save your file. Rogue Wave\u00AE\u00A0Views Map Builder saves files exclusively in the .ilv format. Although this is automatic, add the .ilv extension to the name of the file so that it can be easily identified as a file of this format.","Options\u002Fpairs\u002Fpair11_19.js"]
,["Options\u002Fmapsusrgetstart.55.12.html","Creating a Map with Load-on-Demand","","Options\u002Fpairs\u002Fpair12_16.js"]
,["Options\u002Fmapsusrgetstart.55.13.html","Loading the Base Structure Map and CADRG Files","To load the necessary files for this example, first close the buffers that are currently open. Then load the waco.ivl file:","Options\u002Fpairs\u002Fpair13_16.js"]
,["Options\u002Fmapsusrgetstart.55.14.html","Creating a Map Using Oracle Spatial","","Options\u002Fpairs\u002Fpair14_14.js"]
,["Options\u002Fmapsusrgetstart.55.15.html","Creating the Layer in the Database","In this section, you are going to create a database for use with this example. You will use the Oracle Sample to create the database.","Options\u002Fpairs\u002Fpair15_14.js"]
,["Options\u002Fmapsusrgetstart.55.16.html","Displaying an Oracle Spatial Layer with the Map Builder","In this section, you are going to perform a simple request to the Oracle Database. You will see how to connect to the database, query the database and display a window of data. You will use the data loaded in the database in the previous section, however, you can use any other data set present in yo...","Options\u002Fpairs\u002Fpair16_12.js"]
,["Options\u002Fmapsusrgetstart.55.17.html","Displaying an Oracle Spatial Layer in Load-On-Demand","In this section, you are going to load the same layer from the previous section, using the load-on-demand functionality.","Options\u002Fpairs\u002Fpair17_11.js"]
,["Options\u002Fmapsusrgetstart.55.18.html","Testing the Persistence of the Information","To test the persistence of your map information:","Options\u002Fpairs\u002Fpair18_11.js"]
,["Options\u002Fprogrammingmaps.56.01.html","Rogue Wave\u00A0Views Maps Reader Framework","This chapter explains how to use the Rogue Wave\u00AE\u00A0Views Maps reader framework to create Rogue Wave\u00A0Views applications displaying cartographic data.","Options\u002Fpairs\u002Fpair1_56.js"]
,["Options\u002Fprogrammingmaps.56.02.html","The Classes for Creating Maps: An Overview","Rogue Wave\u00AE\u00A0Views Maps provides a set of classes that you can use to read data from various cartographic data sources (files, databases, map servers, and so on), create map features, transform the features into Rogue Wave\u00A0Views graphic objects using renderers, and position them correctly onto an exi...","Options\u002Fpairs\u002Fpair2_45.js"]
,["Options\u002Fprogrammingmaps.56.03.html","Map Features","When you read a map in Rogue Wave\u00AE\u00A0Views, cartographic data is loaded as IlvMapFeature objects. A map feature is an object that represents cartographic data as it was read from its source file. It can be a segment of road, an aerial image, the summit of a hill, or a digital terrain model. A map feat...","Options\u002Fpairs\u002Fpair3_45.js"]
,["Options\u002Fprogrammingmaps.56.04.html","Map Feature Geometry","Each map feature has a geometry. The geometry of a map feature is information relating to its shape and position.","Options\u002Fpairs\u002Fpair4_43.js"]
,["Options\u002Fprogrammingmaps.56.05.html","Map Feature Attributes","Each map feature can also have attributes. If the map feature is a town, its attributes can be its name, or the number of inhabitants. Attributes can be used, for example, for graphical rendering. In the section Creating a Colored Line Renderer the color of polylines representing contour lines on a ...","Options\u002Fpairs\u002Fpair5_38.js"]
,["Options\u002Fprogrammingmaps.56.06.html","Attaching Attributes to Graphic Objects","In Rogue Wave\u00AE\u00A0Views, you can attach properties to IlvGraphic objects using the class IlvNamedProperty, saving the properties in an .ilv file together with the related object.","Options\u002Fpairs\u002Fpair6_34.js"]
,["Options\u002Fprogrammingmaps.56.07.html","Renderers","This section introduces you to map renderers. It covers the following topics:","Options\u002Fpairs\u002Fpair7_32.js"]
,["Options\u002Fprogrammingmaps.56.08.html","Overview of Renderers","A renderer is an object that is used to transform a map feature into a graphic object of the class IlvGraphic or one of its subclasses.","Options\u002Fpairs\u002Fpair8_29.js"]
,["Options\u002Fprogrammingmaps.56.09.html","Creating a Colored Line Renderer","This section shows how to write a new renderer that displays colored polylines from the numeric value of an attribute whose name is known.","Options\u002Fpairs\u002Fpair9_27.js"]
,["Options\u002Fprogrammingmaps.56.10.html","Making a Renderer Persistent","There are certain situations where you might want to save a renderer. When you work in load-on-demand mode, for example, only the parameters necessary for loading the graphic objects in the layer are saved, not the objects themselves. Load-on-demand is described in Using Load-On-Demand.","Options\u002Fpairs\u002Fpair10_22.js"]
,["Options\u002Fprogrammingmaps.56.11.html","Extending an Existing Renderer","Most of the time, you do not have to write a renderer from scratch. You can use one of the default renderers that are supplied in the package and tailor it to your needs.","Options\u002Fpairs\u002Fpair11_20.js"]
,["Options\u002Fprogrammingmaps.56.12.html","Feature Iterators","Feature iterators are objects used to read cartographic objects. The IlvMapFeatureIterator abstract class allows you to read cartographic data in a uniform way whatever its origin (file, database, map server, and so on).","Options\u002Fpairs\u002Fpair12_17.js"]
,["Options\u002Fprogrammingmaps.56.13.html","Overview of IlvMapFeatureIterator","A map feature iterator has three main methods:","Options\u002Fpairs\u002Fpair13_17.js"]
,["Options\u002Fprogrammingmaps.56.14.html","Writing a New Reader","In this section, you will find an example of an IlvMapFeatureIterator that you can use to read polylines that were saved in an ASCII file.","Options\u002Fpairs\u002Fpair14_15.js"]
,["Options\u002Fprogrammingmaps.56.15.html","Selecting a Target Projection","Maps are always represented within a specific projection system. If you want to merge data coming from different sources into the same manager, you should be able to reproject it so that its respective positions on the target map reflect its exact positions in the source projection. Also if you incl...","Options\u002Fpairs\u002Fpair15_15.js"]
,["Options\u002Fprogrammingmaps.56.16.html","Loading Maps into Rogue Wave\u00A0Views","Loading cartographic data into Rogue Wave\u00AE\u00A0Views is a very simple operation. This section shows how to import maps into Rogue Wave\u00A0Views. It covers the following topics:","Options\u002Fpairs\u002Fpair16_13.js"]
,["Options\u002Fprogrammingmaps.56.17.html","Loading a Map of the Rogue Wave\u00A0Views Format","Rogue Wave\u00A0Views files (.ilv) can contain various kinds of information. They can contain information from other Rogue Wave\u00A0Viewss packages (Graph Layout, Prototypes) or from Rogue Wave\u00A0Views applications designed by end users. They can also hold cartographic data such as that generated with the Map ...","Options\u002Fpairs\u002Fpair17_12.js"]
,["Options\u002Fprogrammingmaps.56.18.html","The Map Loader","The package format provides the class IlvMapLoader that you can use to load in a very simple way any file format for which Rogue Wave\u00A0Views provides a predefined reader (Shapefile, DTED, CADRG, and so on). These predefined readers are described in the Predefined Readers.","Options\u002Fpairs\u002Fpair18_12.js"]
,["Options\u002Fprogrammingmaps.56.19.html","The Scale Filters","When you create a map, you may want one manager layer displaying a certain type of information to be visible only at a given scale. For example, concerning a roadway infrastructure, you may want the secondary roads to be visible only if the map is sufficiently zoomed so that the map is not overloade...","Options\u002Fpairs\u002Fpair19_10.js"]
,["Options\u002Floadondemand.57.01.html","Using Load-On-Demand","This chapter explains how to use the load-on-demand mechanism, which lets you load into memory only the data that you want to display in a manager view and unload the data when you no longer use it. This mechanism is extremely valuable, especially when very large maps are concerned. Let us consider ...","Options\u002Fpairs\u002Fpair1_57.js"]
,["Options\u002Floadondemand.57.02.html","How Load-on-Demand Works","With the load-on-demand mechanism, a manager layer is divided into a set of rectangles of the same size, called tiles. The graphic objects that a tile contains are loaded into the application only when that tile becomes visible inside one of the manager views. When a tile is no longer visible in any...","Options\u002Fpairs\u002Fpair2_46.js"]
,["Options\u002Floadondemand.57.03.html","Structure and Size of the Tiling Grid","A tiled layer is a particular type of manager layer specifically designed to support load-on-demand. A tiled layer is divided into a set of rectangular tiles of identical size that form a tiling grid.","Options\u002Fpairs\u002Fpair3_46.js"]
,["Options\u002Floadondemand.57.04.html","Structure of the Tiling Grid","The tiling grid is defined by its origin tile, which is located at the intersection of the row and column of index 0.","Options\u002Fpairs\u002Fpair4_44.js"]
,["Options\u002Floadondemand.57.05.html","Size of the Tiling Grid","You can set the size of the tiling grid using the following method:","Options\u002Fpairs\u002Fpair5_39.js"]
,["Options\u002Floadondemand.57.06.html","Displaying the State of Tiles","You can create a debug view to display the state of the tiles in a tiled layer using the following method:","Options\u002Fpairs\u002Fpair6_35.js"]
,["Options\u002Floadondemand.57.07.html","Controlling Load-on-Demand","This section shows the different ways to control load-on-demand. It covers the following topics:","Options\u002Fpairs\u002Fpair7_33.js"]
,["Options\u002Floadondemand.57.08.html","Using Visibility Filters to Control Load-on-Demand","You can use scale visibility filters to control the display of tiles in a manager layer. For details on visibility filters, see the section The Scale Filters on page\u00A071.","Options\u002Fpairs\u002Fpair8_30.js"]
,["Options\u002Floadondemand.57.09.html","Loading Tiles via the API","The load-on-demand mechanism is event-driven in that cartographic data is loaded or unloaded following user\u2019s actions, such as zooming or panning. You can, however, use the lockTile method, for example, to preload a tile corresponding to a map zone that is visited frequently or to prevent the tile f...","Options\u002Fpairs\u002Fpair9_28.js"]
,["Options\u002Floadondemand.57.10.html","Managing Errors and Load-on-Demand Events","The load-on-demand mechanism might generate errors when the map cannot be entirely loaded due to memory problems, absence of data, loss of connection to a server, and so on. Applications must catch these errors to inform the user that the map being viewed is not complete.","Options\u002Fpairs\u002Fpair10_23.js"]
,["Options\u002Floadondemand.57.11.html","Caching Tiles","The tile cache is the place where tiles whose lock counter has returned to 0 are stored. The tiles in the cache are eligible for unloading if memory is needed for loading new tiles.","Options\u002Fpairs\u002Fpair11_21.js"]
,["Options\u002Floadondemand.57.12.html","Saving a Tiled Layer","A layer has a number of associated parameters. Some parameters such as named properties, visibility filters, and names are common to all layers, whether they are tiled layers or just normal layers. Other parameters are specific to tiled layers. These are the tiling parameters and the tile loader int...","Options\u002Fpairs\u002Fpair12_18.js"]
,["Options\u002Floadondemand.57.13.html","Writing a New Cache Algorithm","This section explains how to write a customized cache algorithm to meet specific application requirements. The example in this section is a simplified version of the class IlvDefaultTileCache provided in the Rogue Wave\u00AE\u00A0Views Maps library. The complete source code for this example can be found in th...","Options\u002Fpairs\u002Fpair13_18.js"]
,["Options\u002Floadondemand.57.14.html","Implementing Load-on-Demand for a New Data Source","To implement load-on-demand for a new data source, all you have to do is write a specific tile loader that implements the IlvTileLoader abstract class. Notice, however, that for the predefined map formats supplied with Rogue Wave\u00AE\u00A0Views, such as CADRG, load-on-demand has been implemented in a subcla...","Options\u002Fpairs\u002Fpair14_16.js"]
,["Options\u002Freaders.58.01.html","Predefined Readers","This chapter introduces you to the predefined readers supplied with Rogue Wave\u00AE\u00A0Views Maps:","Options\u002Fpairs\u002Fpair1_58.js"]
,["Options\u002Freaders.58.02.html","The Shapefile Reader","This section describes the classes of the IlvMaps library that allow you to read files with the Shapefile format.","Options\u002Fpairs\u002Fpair2_47.js"]
,["Options\u002Freaders.58.03.html","Introducing the Shapefile Format","The Shapefile format is the exchange format for vector maps of the Environmental Systems Research Institute (ESRI). This format supports polygons, arcs, lines, and points. Each Shapefile contains one single theme, meaning that all the objects in the file are of the same type (either line, point, pol...","Options\u002Fpairs\u002Fpair3_47.js"]
,["Options\u002Freaders.58.04.html","Classes for Reading the Shapefile Format","The following classes are used to read the Shapefile format:","Options\u002Fpairs\u002Fpair4_45.js"]
,["Options\u002Freaders.58.05.html","Shapefile Load-On-Demand","The Maps module provides classes to perform the load-on-demand on Shapefiles. This is achieved by using specific spatial index files. These files, usually having an .idx extension, store relations between tile and object identifiers that belong to these tiles. A class and a tool example are provided...","Options\u002Fpairs\u002Fpair5_40.js"]
,["Options\u002Freaders.58.06.html","The DTED File Reader","This section describes the classes of the IlvMaps library that allow you to read files with the DTED format.","Options\u002Fpairs\u002Fpair6_36.js"]
,["Options\u002Freaders.58.07.html","Introducing the DTED Format","The Digital Terrain Elevation Data (DTED) format is a map format for terrain elevations published by the U.S. National Imagery and Mapping Agency (NIMA). The DTED files contain digital terrain models as rasters. A raster is a georeferenced grid containing a value in each one of its cells. In the cas...","Options\u002Fpairs\u002Fpair7_34.js"]
,["Options\u002Freaders.58.08.html","Classes for Reading the DTED Format","The class for reading DTED formats is IlvDTEDReader. This class is a subclass of IlvMapFeatureIterator and returns only one IlvMapFeature object, which is the raster corresponding to the Digital Terrain Model (DTM) stored in the file. The geometry of this map feature is of type IlvMapRaster. The map...","Options\u002Fpairs\u002Fpair8_31.js"]
,["Options\u002Freaders.58.09.html","Graphical Rendering of a Digital Terrain Model","The default renderer of an IlvDTEDReader class is an IlvDefaultRasterRenderer that displays the raster as an image, with each color corresponding to an elevation value. The default parameters for this renderer use a color model specially designed for displaying elevations (IlvIntervalColorModel::Mak...","Options\u002Fpairs\u002Fpair9_29.js"]
,["Options\u002Freaders.58.10.html","The CADRG File Reader","This section describes the classes of the IlvMaps library that allow you to read files with the CADRG format.","Options\u002Fpairs\u002Fpair10_24.js"]
,["Options\u002Freaders.58.11.html","Classes for Reading the CADRG Format","IlvCADRGTocReader: This class reads the table of contents of a CADRG volume.","Options\u002Fpairs\u002Fpair11_22.js"]
,["Options\u002Freaders.58.12.html","The Image File Reader","This section describes a generic image file reader. The formats handled by this reader are those supported by Rogue Wave\u00A0Views. An image coded in one of these formats does not contain any georeferencing information, so this information has to be known before loading this kind of images. The IlvImage...","Options\u002Fpairs\u002Fpair12_19.js"]
,["Options\u002Freaders.58.13.html","The IlvImageReader Class","This class is a subclass of the IlvMapFeatureIterator abstract class and returns only one IlvMapFeature object, which is the image stored in the file. The geometry of this map feature is of type IlvMapImage. The map feature has no attribute. To use this reader you have to provide a file name and the...","Options\u002Fpairs\u002Fpair13_19.js"]
,["Options\u002Freaders.58.14.html","The IlvImageTileLoader Class","This class is used to read a set of images that are parts of a larger image. This tile loader allows an application to load only the images that are visible at a given time, each image corresponding to a tile. Each file must be named so that it is possible to construct its file name knowing the row ...","Options\u002Fpairs\u002Fpair14_17.js"]
,["Options\u002Freaders.58.15.html","Examples","In the following code extract, the tile loader will search for a file named tiles\u002Ftile_010_20.jpg when attempting to load the tile at column 10 and row 20.","Options\u002Fpairs\u002Fpair15_16.js"]
,["Options\u002Freaders.58.16.html","The IlvImageLayer Class","The IlvImageLayer class is an IlvTiledLayer that can be saved in an .ilv file. In particular, it handles all the mechanisms to properly restart the load-on-demand layer when this layer is read from an .ilv file:","Options\u002Fpairs\u002Fpair16_14.js"]
,["Options\u002Freaders.58.17.html","The GeoTIFF Reader","This section describes the classes that allow you to read GeoTIFF files. This reader uses the IlvTIFFStreamer of the Rogue Wave\u00A0Views\u00A0Foundation package.","Options\u002Fpairs\u002Fpair17_13.js"]
,["Options\u002Freaders.58.18.html","The GeoTIFF Format","The GeoTIFF format is an extension of the TIFF (Tagged Image File Format) format. The TIFF format is an image file format that allows tags to be added in the file, tags being information about the image contained in the file such as the resolution, the number of samples per pixel, and so on. The Geo...","Options\u002Fpairs\u002Fpair18_13.js"]
,["Options\u002Freaders.58.19.html","The IlvGeoTIFFReader Class","The IlvGeoTIFFReader class implements the IlvFeatureIterator abstract class. The getNextFeature method returns an IlvMapFeature containing an IlvMapImage geometry. The TIFF image can then be rendered by the IlvDefaultImageRenderer to produce an IlvIcon. The TIFF reader takes one parameter as argumen...","Options\u002Fpairs\u002Fpair19_11.js"]
,["Options\u002Freaders.58.20.html","The IlvGeoTIFFTileLoader Class","The IlvGeoTIFFTileLoader class provides the services to load a tiled TIFF file on demand, that is, only the visible parts of the tiled TIFF file are loaded and displayed at a given time. This tile loader works as any tile loader, in conjunction with an IlvTiledLayer. The TIFF reader provides require...","Options\u002Fpairs\u002Fpair20_8.js"]
,["Options\u002Freaders.58.21.html","The IlvGeoTIFFLayer Class","The IlvGeoTIFFLayer class is an IlvTiledLayer that can be saved in an .ilv file. In particular, it handles all the mechanisms to properly restart the load-on-demand layer when this layer is read from an .ilv file:","Options\u002Fpairs\u002Fpair21_8.js"]
,["Options\u002Freaders.58.22.html","The IlvGeoTIFFTiler Class","The IlvGeoTIFFTiler class is used to re-encode an already existing TIFF file to a tiled GeoTIFF file. Here is an example of how to use the tiler:","Options\u002Fpairs\u002Fpair22_7.js"]
,["Options\u002Freaders.58.23.html","The Oracle Spatial Features","This section describes the features of the ilvdbmaps library that allow you to handle Oracle SDO Relational and Object models.","Options\u002Fpairs\u002Fpair23_7.js"]
,["Options\u002Freaders.58.24.html","Relational Model Classes","This section covers the following topics:","Options\u002Fpairs\u002Fpair24_6.js"]
,["Options\u002Freaders.58.25.html","Object Model Classes","This section covers the following topics:","Options\u002Fpairs\u002Fpair25_5.js"]
,["Options\u002Freaders.58.26.html","The S57 Map Reader","Rogue Wave\u00A0Views Maps contains classes for reading S57 files. The S57 format is a numerical map format for nautical maps, which is a standard published by the International Hydrographic Organization (IHO). You can find more information at:","Options\u002Fpairs\u002Fpair26_5.js"]
,["Options\u002Freaders.58.27.html","Classes for reading S57 format","The class for reading S57 formats is the IlvS57Loader. This class is a subclass of the IlvMapFeatureIterator and returns one IlvMapFeature object for each S57 feature (S57 FRID record).","Options\u002Fpairs\u002Fpair27_5.js"]
,["Options\u002Freaders.58.28.html","Configuring styles, colors and icons","As mentioned above, a configuration file, called S57Styles.txt, is available to indicate the style to represent each map feature, based on its S57 code. For example:","Options\u002Fpairs\u002Fpair28_4.js"]
,["Options\u002Fprojections.59.01.html","Map Projections","This chapter introduces you to map projections and explains how to use the Rogue Wave\u00AE\u00A0Views Maps projection package with your mapping applications.","Options\u002Fpairs\u002Fpair1_59.js"]
,["Options\u002Fprojections.59.02.html","Introducing Map Projections","A map is a projected representation of the Earth, or part of it, on a flat surface, which can be a piece of paper or a computer screen. Since the Earth has an ellipsoidal shape, it is best represented as a \u201Cglobe\u201D, and attempts to portray it by projecting its points onto a flat surface always result...","Options\u002Fpairs\u002Fpair2_48.js"]
,["Options\u002Fprojections.59.03.html","Cylindrical Projections","A cylindrical projection is obtained by wrapping a large, flat plane around the globe to form a cylinder. In the following figure, the cylinder is tangent to the equator. The closer the zone of tangency the less the distortion.","Options\u002Fpairs\u002Fpair3_48.js"]
,["Options\u002Fprojections.59.04.html","Conic Projections","A conic projection transfers the image of the globe to a cone either secant or tangent to the surface of the Earth as illustrated in Examples of Conic Projections","Options\u002Fpairs\u002Fpair4_46.js"]
,["Options\u002Fprojections.59.05.html","Azimuthal Projections","With azimuthal projections, also called planar projections, the spherical globe is projected onto a flat surface.","Options\u002Fpairs\u002Fpair5_41.js"]
,["Options\u002Fprojections.59.06.html","Equal Area or Conformal Projections","All map projections show some kind of distortion in the areas that are far from the projection center. Depending on the kind of projection used, the distortion may be of angle, area, shape, size, distance, or scale. In this respect, projections fall into two main categories, Equal Area and Conformal...","Options\u002Fpairs\u002Fpair6_37.js"]
,["Options\u002Fprojections.59.07.html","Projecting Data: An Example","This section provides a simple example application illustrating the basic operations that you must perform when using a projection. It shows how to create a projection and compute the image of a geographic point on a flat surface.","Options\u002Fpairs\u002Fpair7_35.js"]
,["Options\u002Fprojections.59.08.html","Running the Example Application","The example is commented, part by part, then printed as a whole in the section The Complete Example.","Options\u002Fpairs\u002Fpair8_32.js"]
,["Options\u002Fprojections.59.09.html","Including the Projection Declaration","To be able to use the Rogue Wave\u00AE\u00A0Views Maps projections library, you must include the header file that declares the projection classes. In our example, we use only the Mercator projection class which is declared in the header file <ilviews\u002Fmaps\u002Fprojection\u002Fmercator.h>.","Options\u002Fpairs\u002Fpair9_30.js"]
,["Options\u002Fprojections.59.10.html","The Main Function","The main function in our example program initializes a Mercator projection and calls a function to perform forward and inverse projections.","Options\u002Fpairs\u002Fpair10_25.js"]
,["Options\u002Fprojections.59.11.html","Creating the Projected Data","In the projection library, computations are performed in double-precision. Therefore, we need to create an instance of the class IlvCoordinate that contains a vector of two coordinates. The values of the class are the latitude lambda and the longitude phi. These values are expressed in radians. To c...","Options\u002Fpairs\u002Fpair11_23.js"]
,["Options\u002Fprojections.59.12.html","Projecting the Data","When data is projected, the geographical coordinates (longitude and latitude) are transformed to projected coordinates. This operation is necessary for one of the following reasons:","Options\u002Fpairs\u002Fpair12_20.js"]
,["Options\u002Fprojections.59.13.html","Printing the Result of the Projection","The result of the projection is stored in the xy variable. In the following example, the result is expressed in meters, which is the default measurement unit. The coordinates represent the distance from the center of the projection. This distance is very different from the real distance between the ...","Options\u002Fpairs\u002Fpair13_20.js"]
,["Options\u002Fprojections.59.14.html","Calculating the Inverse Projection","The inverse projection transforms projected data to longitude and latitude. This operation allows you, for example, to determine the geographical coordinates that a user designates with a mouse on a projected map.","Options\u002Fpairs\u002Fpair14_18.js"]
,["Options\u002Fprojections.59.15.html","Printing Geographic Coordinates","To print geographic coordinates in humanly readable form, we use the static function RadianToDMS of the class IlvMaps which converts an IlvCoordinate to a string containing degrees, minutes, and seconds.","Options\u002Fpairs\u002Fpair15_17.js"]
,["Options\u002Fprojections.59.16.html","The Complete Example","#include <ilviews\u002Fmaps\u002Fprojection\u002Fmercator.h>","Options\u002Fpairs\u002Fpair16_15.js"]
,["Options\u002Fprojections.59.17.html","Projection Methods and Parameters","This section describes projection methods and parameters. It covers the following topics:","Options\u002Fpairs\u002Fpair17_14.js"]
,["Options\u002Fprojections.59.18.html","Forward and Inverse Functions","Projections are implemented using the forward and inverse functions:","Options\u002Fpairs\u002Fpair18_14.js"]
,["Options\u002Fprojections.59.19.html","Projection Parameters","The following parameters can be set for a projection:","Options\u002Fpairs\u002Fpair19_12.js"]
,["Options\u002Fprojections.59.20.html","Utilities","The class IlvMaps provides conversion utilities to convert radians to degrees, as well as the reverse.","Options\u002Fpairs\u002Fpair20_9.js"]
,["Options\u002Fprojections.59.21.html","Ellipsoids","This section explains ellipsoids and how they are related to map projections. You will also find a list of the predefined ellipsoids that are supplied with the Rogue Wave\u00AE\u00A0Views Maps projection package.","Options\u002Fpairs\u002Fpair21_9.js"]
,["Options\u002Fprojections.59.22.html","Overview of Ellipsoids","Ellipsoids are used to represent the shape of the Earth. For many applications, and especially in small-scale mapping, the Earth can be represented as a sphere. Most of the projections supplied in this package assume by default that the Earth is a sphere with a radius of approximately 6371 kilometer...","Options\u002Fpairs\u002Fpair22_8.js"]
,["Options\u002Fprojections.59.23.html","Associating an Ellipsoid with a Projection","Each projection is associated with an ellipsoid. By default, most of the projections use the ellipsoid IlvEllipsoid::SPHERE. Only some specific projections, such as the Universal Transverse Mercator or the Universal Polar Stereographic, use a nonspherical ellipsoid by default.","Options\u002Fpairs\u002Fpair23_8.js"]
,["Options\u002Fprojections.59.24.html","Defining New Ellipsoids","Ellipsoids provided in the package are defined by two parameters:","Options\u002Fpairs\u002Fpair24_7.js"]
,["Options\u002Fprojections.59.25.html","Predefined Ellipsoids","The maps package contains a list of predefined ellipsoids. A predefined ellipsoid is referenced by its name. To access a predefined ellipsoid, use the static method GetRegisteredEllipsoid of the class IlvEllipsoid.","Options\u002Fpairs\u002Fpair25_6.js"]
,["Options\u002Fprojections.59.26.html","Unit Converters","This section explains how to use unit converters with projections. It covers the following topics:","Options\u002Fpairs\u002Fpair26_6.js"]
,["Options\u002Fprojections.59.27.html","Using Unit Converters Directly","To convert meters to feet, you can use a static member of the class IlvUnitConverter.","Options\u002Fpairs\u002Fpair27_6.js"]
,["Options\u002Fprojections.59.28.html","Using Converters With Projections","Unit converters can be associated with a projection as shown in the following example, which is a modification of the useproj program that uses feet, instead of meters.","Options\u002Fpairs\u002Fpair28_5.js"]
,["Options\u002Fprojections.59.29.html","Defining Unit Converters","To define a unit converter, you must provide the name of the measurement unit and its equivalent in meters.","Options\u002Fpairs\u002Fpair29_3.js"]
,["Options\u002Fprojections.59.30.html","Using Predefined Unit Converters","The library contains a list of predefined unit converters. A predefined unit converter is referenced by its name. To access a predefined unit converter, use the static function GetRegisteredConverter of the class IlvUnitConverter.","Options\u002Fpairs\u002Fpair30_3.js"]
,["Options\u002Fprojections.59.31.html","Conversion Between Coordinates in Different Geodetic Datums","When merging maps created by different mapping agencies, you can observe that identical points are sometimes positioned hundreds of meters away. The reason for this positioning error can be that these agencies use different geodetic data as the basis of their coordinate systems.","Options\u002Fpairs\u002Fpair31_2.js"]
,["Options\u002Fprojections.59.32.html","Horizontal Datum Shift","The datum conversion method that Rogue Wave\u00A0Views Maps implements by default is based on the assumption that the datum used is one that describes latitudes and longitudes read from an ellipsoid surface whose center is slightly shifted from the center of the Earth so that it is tangent to the geoid s...","Options\u002Fpairs\u002Fpair32_2.js"]
,["Options\u002Fprojections.59.33.html","Adding Graphic Objects on Top of an Imported Map","This section shows how to import an .ilv map file whose projection is now into a Rogue Wave\u00AE\u00A0Views manager, and how to lay graphic objects over that map. It is based on an example that loads a map of the USA projected with a Lambert Azimuthal Equal Area projection into a manager, and adds cities on ...","Options\u002Fpairs\u002Fpair33_2.js"]
,["Options\u002Fprojections.59.34.html","Running the Example Application","To compile and run the example application:","Options\u002Fpairs\u002Fpair34_2.js"]
,["Options\u002Fprojections.59.35.html","Defining the Sample Class, the Main Function, and the Constructor","The Class","Options\u002Fpairs\u002Fpair35_2.js"]
,["Options\u002Fprojections.59.36.html","Getting Map Information","In Rogue Wave\u00AE\u00A0Views Maps, map information can be attached to managers using the IlvMapInfo class. This class encapsulates the IlvProjection and IlvMapAdapter to convert coordinates between map coordinates and manager coordinates.","Options\u002Fpairs\u002Fpair36_2.js"]
,["Options\u002Fprojections.59.37.html","Showing the Mouse Position","When data is loaded in the map, we set in input callback to show mouse position:","Options\u002Fpairs\u002Fpair37_2.js"]
,["Options\u002Fprojections.59.38.html","Creating a New Projection","This section explains how to extend the Rogue Wave\u00AE\u00A0Views Maps projection library with your own projections. The example used in this section is a simplified version of the Mercator projection.","Options\u002Fpairs\u002Fpair38.js"]
,["Options\u002Fprojections.59.39.html","Step 1: Defining a New Projection","The first step explains the minimum requirement to subtype a projection. It focuses on how to implement the forward and inverse functions of a projection.","Options\u002Fpairs\u002Fpair39.js"]
,["Options\u002Fprojections.59.40.html","Defining the Projection","The projection is defined in the file proj_step1.cpp","Options\u002Fpairs\u002Fpair40.js"]
,["Options\u002Fprojections.59.41.html","Writing the Forward Projection","Before writing the forward functions for the Mercator projection, you must be familiar with the IlvProjection::forward function.","Options\u002Fpairs\u002Fpair41.js"]
,["Options\u002Fprojections.59.42.html","Writing the Inverse Projection","Before writing the inverse function for the Mercator projection, you should be familiar with the IlvProjection::inverse function.","Options\u002Fpairs\u002Fpair42.js"]
,["Options\u002Fprojections.59.43.html","Step 2: Defining a New Projection","This step explains how to add parameters to a projection, and how to write the Input\u002FOutput functions to support these additional parameters. It also shows how to create specific error codes.","Options\u002Fpairs\u002Fpair43.js"]
,["Options\u002Fprojections.59.44.html","Step 3: Defining a New Projection","This step explains how to add the accessor support for the specific parameters of a projection.","Options\u002Fpairs\u002Fpair44.js"]
,["Options\u002Fdatadisc.html","Map Data","Suggested Free Sources","Options\u002Fpairs\u002Fpair1_60.js"]
],
"words":
{
"data":[0,27,1,7,2,3,3,18,4,5,5,9,6,5,7,9,8,4,10,3,11,5,12,3,13,3,14,6,15,9,16,9,17,4,18,5,19,1,20,11,22,5,24,7,25,1,27,3,28,6,29,4,30,2,33,1,35,1,39,1,40,1,41,1,42,3,46,4,47,15,48,7,49,4,50,6,51,18,52,11,53,6,54,17,55,1,56,12,57,9,58,1,59,1,64,7,66,1,67,1,69,1,70,1,71,6,72,17,73,4,74,2,75,3,76,3,77,2,78,1,79,2,80,4,81,2,82,8,84,2,85,5,86,1,87,1,88,10,89,4,90,2,93,2,94,3,95,9,96,1,97,3,99,7,101,3,102,1,105,3,110,1,112,1,119,1,121,19,122,2,123,3,124,3,125,4,126,4,127,22,128,2,129,9,130,7,131,3,132,1,133,5,135,1,138,1,139,4,140,4,141,7,142,17,143,4,144,4,145,2,146,2,147,2,150,1,151,3,152,4,154,10,155,6,156,56,157,46,158,54,159,1,161,12,162,1,163,18,164,1,165,7,167,20,168,1,169,8,171,17,173,17,174,2,175,11,178,1,179,5,181,4,182,1,183,8,184,1,185,17,186,1,187,22,188,1,189,19,190,1,191,14,192,1,193,27,194,1,195,66,196,1,199,1,201,3,202,1,203,3,207,3,209,1,210,1,211,8,212,5,213,12,214,4,215,3,216,43,217,3,218,21,219,6,220,6,221,3,222,2,223,21,224,3,225,1,226,1,227,7,231,2,232,3,233,1,234,14,235,2,236,4,237,1,238,3,241,11,242,3,243,20,244,6,245,11,246,3,247,4,248,2,250,22,251,10,252,14,253,13,254,6,255,7,256,13,257,10,258,18,259,1,263,2,268,2,269,1,270,2,271,16,272,5,273,8,274,4,275,6,276,3,278,1,279,2,280,12,281,5,282,21,283,11,284,1,289,1,293,12,295,3,296,2,297,2,298,1,299,10,300,14,301,6,302,1,303,7,304,7,305,3,306,1,307,1,308,3,310,3,315,6,316,9,317,7,318,3,322,2,324,1,325,11,327,17,328,5,329,5,330,4,331,13,332,30,334,1,335,1,336,83,338,6,339,9,340,55,341,4,342,5,343,5,344,1,345,30,346,6,347,1,348,21,349,9,350,4,351,2,352,6,353,1,354,10,355,7,356,15,358,1,359,11,360,21,361,16,362,13,363,10,364,32,365,23,366,1,367,16,368,22,369,7,370,36,371,5,372,51,373,36,374,28,375,41,376,62,377,65,379,15,380,13,382,4,383,33,384,1,385,2,386,23,387,2,388,2,389,2,390,2,391,2,392,7,393,7,394,27,395,1,396,3,397,14,398,12,399,15,400,11,401,7,402,69,403,17,404,8,407,17,409,10,411,2,413,3,414,10,415,6,416,1,417,3,420,1,421,2,423,5,424,5,425,1,427,16,428,2,429,1,430,2,432,5,433,6,434,8,435,15,437,4,438,17,439,20,440,50,441,1,443,4,444,1,445,2,453,1,455,2,457,1,487,1,498,1,504,5,506,1,518,3,520,3,523,6,524,9,526,1,534,1,535,2,536,6,537,12,538,2,540,9,541,6,542,2,543,1,548,2,551,1,552,3,553,3,554,1,555,1,556,1,557,7,559,4,560,2,567,1,568,1,572,5,575,1,579,3,580,1,595,2,596,12,597,11,598,7,601,3,607,3,611,1,612,4,614,2,616,2,619,2,631,4,632,3,635,1,637,1,641,8,642,2,643,1,645,3]
,"access":[0,19,1,6,2,3,3,11,4,1,5,8,6,5,7,3,8,4,10,1,11,3,12,2,13,2,14,5,15,3,16,2,17,1,18,3,19,1,20,4,21,1,24,1,25,3,27,2,28,3,29,2,30,2,33,1,39,1,40,1,42,2,45,1,47,3,48,1,50,1,51,1,54,1,56,1,58,1,72,1,75,3,76,2,77,1,80,1,82,1,84,1,85,5,86,1,88,3,89,2,93,1,97,1,101,2,102,1,112,1,116,1,121,2,127,2,129,2,130,1,131,1,132,1,133,2,135,1,139,3,140,4,141,3,142,2,143,1,144,1,145,2,146,2,147,2,150,1,151,3,156,1,159,2,161,1,167,1,179,1,181,1,189,5,193,1,195,1,196,1,201,2,202,1,210,1,211,7,212,5,213,7,214,3,215,3,216,12,217,1,218,3,220,1,221,3,222,2,223,8,224,2,231,2,233,1,234,14,236,1,238,1,244,1,245,2,246,1,250,2,251,1,254,1,256,1,257,2,259,1,268,2,273,1,275,1,280,1,282,3,283,4,284,2,288,1,289,1,293,1,295,3,296,2,302,1,303,7,304,7,305,3,306,1,307,1,308,3,315,1,316,4,320,1,321,1,327,1,328,1,336,1,340,2,345,1,348,1,396,1,414,1,486,2,489,2,516,1,545,1,572,1,575,2,576,3,577,1,583,1,595,3,598,1,625,1,630,1]
,"user":[0,1,3,1,7,3,10,2,11,2,16,2,17,3,20,3,22,1,24,3,27,3,29,6,51,4,52,5,56,1,57,2,60,1,64,3,69,1,73,2,74,2,85,1,91,2,92,1,105,1,108,1,110,1,118,2,120,5,122,3,124,3,127,5,131,1,133,1,137,2,155,3,156,3,157,9,158,7,161,2,163,2,165,2,167,2,175,2,177,1,189,1,201,2,207,1,210,1,213,1,232,1,244,1,255,1,276,2,282,4,316,4,340,2,356,2,372,1,426,1,427,7,428,1,429,1,430,1,431,1,432,2,433,3,434,2,435,5,449,1,452,1,455,2,457,2,459,4,460,1,465,1,467,1,468,1,469,3,501,2,509,1,516,3,528,1,534,1,554,1,568,1,597,1,614,1,641,1]
,"manual":[0,2,3,2,7,1,10,1,12,1,16,1,25,1,27,1,28,1,50,1,54,1,56,1,127,2,129,1,130,1,133,1,135,1,146,2,161,1,167,1,179,1,181,1,189,1,191,1,193,1,195,1,211,1,212,1,215,1,224,1,230,1,265,1,283,2,294,1,314,1,318,1,351,1,366,1,374,1,451,2,489,1,492,1,495,1,498,1,518,2,520,1,537,1,538,1,545,1,549,1,600,1,606,1,608,1,619,1,634,1]
,"consists":[0,1,87,3,117,1,157,1,211,1,225,1,232,2,241,1,257,1,319,1,341,1,351,1,352,1,457,1,481,1,489,2,519,1,520,1,534,1]
,"table":[0,4,1,1,3,2,15,9,19,9,20,13,21,1,22,8,23,2,24,24,25,8,26,3,27,11,28,8,29,5,31,5,32,4,33,1,34,1,35,5,36,1,38,1,39,4,41,1,42,3,43,6,44,3,45,4,47,1,48,2,51,6,52,5,53,1,56,2,57,34,58,1,59,1,60,1,61,1,62,1,63,1,64,4,68,1,70,1,73,1,77,1,80,1,82,1,84,8,85,1,86,1,87,12,88,16,89,16,90,18,91,19,92,4,93,3,94,2,95,20,96,2,97,9,98,1,99,3,100,6,102,5,104,4,105,9,106,1,107,2,108,1,110,3,112,1,114,1,118,1,120,4,121,20,122,1,123,1,124,17,125,2,126,2,127,27,128,1,129,9,130,9,131,5,142,2,144,7,154,11,156,13,157,20,158,9,161,32,163,1,165,1,167,13,169,1,171,1,173,1,174,1,179,14,183,1,185,1,187,1,209,2,210,2,211,1,216,12,218,6,219,8,220,4,223,12,232,4,233,4,241,3,242,1,243,17,244,14,245,17,246,14,247,4,250,8,251,10,252,5,253,3,254,11,255,4,256,4,257,4,258,6,260,3,265,10,270,1,271,7,272,6,273,10,274,5,275,8,276,18,277,3,279,1,280,6,281,1,282,9,283,2,293,1,298,7,299,1,300,6,301,11,304,1,315,2,316,15,317,20,325,4,336,1,345,1,347,1,372,2,384,1,395,1,396,1,397,1,410,1,412,2,418,1,421,1,422,2,424,1,425,2,427,1,476,5,500,1,517,1,537,2,538,2,582,1,583,4,597,2,625,1,630,1]
,"contents":[0,1,66,1,121,2,124,4,127,2,141,1,142,1,143,1,178,1,179,12,188,1,191,1,192,1,211,1,223,2,226,1,263,3,276,4,323,1,325,1,334,1,418,3,419,1,460,1,582,1,583,4]
,"preface":[0,1,211,1,258,1]
,"chapters":[0,1,139,1,211,1,224,1,318,2,319,1,352,1,366,1,451,1,518,1,524,1]
,"appendixes":[0,1,211,1]
,"glossary":[0,1,211,1]
,"part":[0,4,1,2,3,1,24,1,43,4,44,4,45,4,57,1,101,2,106,1,121,2,135,1,139,3,157,1,158,1,201,5,206,1,208,2,211,1,284,1,295,1,313,1,316,1,318,2,319,2,334,6,336,1,338,1,340,2,341,2,342,1,346,1,350,1,351,1,352,2,356,1,377,1,380,1,411,1,415,1,417,3,418,3,459,1,479,1,480,1,484,1,499,1,505,1,507,3,540,3,556,1,602,1,608,2]
,"rogue":[0,5,1,1,2,1,3,13,4,1,5,1,6,2,7,4,8,6,9,2,10,8,11,3,12,3,13,1,14,1,16,1,17,2,18,3,22,2,24,2,25,1,27,1,28,1,29,1,30,2,34,1,35,1,37,1,42,1,47,3,48,1,50,1,54,1,56,2,75,11,85,1,87,2,88,1,89,2,90,1,93,1,104,1,105,2,108,1,119,1,120,1,121,1,125,1,127,2,129,1,130,1,133,3,135,1,138,1,139,1,140,1,141,1,146,2,161,1,167,1,179,1,181,1,189,1,193,1,195,1,209,1,213,3,215,4,216,3,222,1,225,2,226,2,227,3,229,1,230,1,234,1,265,1,283,5,284,10,294,2,295,3,303,9,304,6,305,8,306,3,307,4,308,3,318,7,319,3,320,3,321,5,322,2,323,1,324,1,332,1,333,1,334,1,335,1,336,2,340,3,345,2,348,2,351,2,352,1,353,2,354,2,358,1,360,1,362,1,366,1,367,1,372,1,375,1,451,2,452,4,453,5,454,4,455,2,456,2,457,1,460,6,463,1,464,1,465,1,466,1,467,1,468,1,470,1,471,2,472,1,474,5,475,1,479,1,487,1,490,1,493,1,496,1,499,1,500,1,502,3,503,4,505,1,506,3,508,1,510,2,512,1,516,2,517,2,518,9,519,6,520,8,521,9,522,3,524,4,525,4,526,4,527,1,530,1,532,1,533,1,534,1,535,3,537,1,540,11,541,6,542,1,543,1,545,2,547,1,551,1,552,1,553,1,554,2,555,4,556,5,557,4,558,2,560,2,571,1,572,1,573,1,576,1,580,1,584,1,589,1,590,1,595,7,596,2,597,2,598,1,601,2,608,1,609,1,612,2,621,1,630,1,631,1,632,1,633,1,634,1,635,1,636,1,638,1]
,"wave":[0,5,1,1,2,1,3,13,4,1,5,2,6,2,7,4,8,6,9,2,10,8,11,3,12,3,13,1,14,1,16,1,17,2,18,3,22,2,24,2,25,1,27,1,28,1,29,1,30,2,34,1,35,1,37,1,42,1,47,3,48,1,50,1,54,1,56,2,58,1,75,11,85,1,87,2,88,1,89,2,90,1,93,1,104,1,105,2,108,1,119,1,120,1,121,1,125,1,127,2,129,1,130,1,133,3,135,1,138,1,139,1,140,1,141,1,146,2,161,1,167,1,179,1,181,1,189,1,193,1,195,1,209,1,213,3,215,4,216,3,222,1,225,2,226,2,227,3,229,1,230,1,234,2,265,1,283,5,284,10,294,2,295,3,303,9,304,6,305,8,306,3,307,5,308,3,318,7,319,3,320,3,321,5,322,2,323,1,324,1,332,1,333,1,334,1,335,1,336,2,340,3,345,2,348,2,351,2,352,1,353,2,354,2,358,1,360,1,362,1,366,1,367,1,372,1,375,1,451,2,452,4,453,5,454,4,455,2,456,2,457,1,460,6,463,1,464,1,465,1,466,1,467,1,468,1,470,1,471,2,472,1,474,5,475,1,479,1,487,1,490,1,493,1,496,1,499,1,500,1,502,3,503,4,505,1,506,3,508,1,510,2,512,1,516,2,517,3,518,9,519,6,520,8,521,9,522,3,524,4,525,4,526,4,527,1,530,1,532,1,533,1,534,1,535,3,537,1,540,11,541,6,542,1,543,1,545,2,547,1,551,1,552,1,553,1,554,2,555,4,556,5,557,4,558,2,560,2,571,1,572,1,573,1,576,1,580,1,584,1,589,1,590,1,595,7,596,2,597,2,598,1,601,2,608,1,609,1,612,2,621,1,630,1,631,1,632,1,633,1,634,1,635,1,636,1,638,1]
,"views":[0,5,1,1,2,1,3,13,5,2,6,2,7,3,8,6,9,2,10,8,11,3,12,2,13,1,14,1,16,1,17,2,18,3,22,2,24,2,25,1,27,1,28,1,30,2,34,1,35,1,37,1,42,1,47,3,48,1,50,1,54,1,56,2,58,1,75,5,85,1,87,2,88,1,89,2,90,1,93,1,104,1,105,2,108,1,119,1,120,1,125,1,127,2,129,1,130,1,133,3,135,1,138,1,139,1,140,1,141,1,146,1,161,1,167,1,179,1,181,1,189,1,193,1,195,1,209,1,213,3,215,4,216,3,225,1,226,2,227,3,229,1,230,1,234,3,265,1,283,5,284,1,294,1,295,2,303,10,304,6,305,9,306,4,307,4,308,3,318,7,319,3,320,3,321,5,322,2,323,1,324,1,332,1,334,1,335,1,336,2,340,3,345,2,348,2,351,2,352,1,353,2,354,2,358,1,360,1,362,1,366,1,367,1,372,1,375,1,451,2,452,4,453,5,454,3,455,2,456,2,457,1,460,8,463,1,464,1,465,1,466,1,467,1,468,1,470,1,471,2,472,1,474,5,475,1,479,1,487,1,490,1,493,1,496,1,499,1,500,1,502,3,503,5,505,1,506,3,508,1,510,2,512,1,514,1,515,1,516,2,517,3,518,9,519,6,520,8,521,7,522,3,524,4,525,4,526,4,527,1,530,1,532,1,533,2,534,2,535,2,537,1,540,11,541,6,542,1,543,1,545,2,547,1,551,1,552,1,553,1,554,2,555,4,556,4,557,4,558,2,560,5,571,1,572,1,573,1,576,1,580,1,584,1,589,1,590,1,595,1,596,1,597,1,598,1,601,2,608,1,609,1,612,2,621,1,630,1,631,1,632,1,633,1,634,1,635,1,636,1,638,1]
,"common":[0,1,1,2,17,1,56,1,85,1,98,1,99,1,140,2,145,1,146,1,147,1,274,1,326,1,351,1,457,1,458,1,459,1,476,2,481,1,486,1,489,1,492,2,495,1,498,1,502,1,541,1,570,1,619,1]
,"framework":[0,1,1,1,453,1,454,2,503,1,512,1,516,1,518,1,519,1,520,1,540,5,591,1]
,"introducing":[0,1,2,1,318,2,319,1,320,1,352,1,353,1,443,1,451,1,452,1,518,1,519,1,574,1,575,1,578,1,579,1,601,1,602,1]
,"contains":[0,5,3,2,13,1,24,2,25,1,29,2,44,1,57,1,63,1,84,1,85,1,87,4,91,1,105,4,109,1,113,2,128,1,136,2,141,1,193,11,195,30,200,1,202,1,203,1,207,1,210,1,216,1,222,1,223,7,225,1,244,1,250,1,256,1,257,1,281,1,289,2,294,1,298,2,309,1,310,1,318,2,322,2,324,1,331,1,332,1,334,3,336,1,340,2,345,1,348,1,372,5,379,2,394,1,398,1,418,1,419,1,439,1,443,1,451,1,461,2,462,1,473,1,481,1,482,1,495,1,498,1,500,2,512,1,515,2,516,1,517,2,518,1,526,3,528,1,533,1,543,1,544,1,560,1,568,1,575,1,577,1,579,1,582,2,595,1,598,1,600,1,611,1,625,1,630,2,635,1]
,"brief":[0,1,13,1,302,1,456,1,457,1,480,1,486,1,488,1,491,1,494,1,497,1]
,"introduction":[0,1,13,1,19,1,20,1,102,1,103,1,211,1,224,1,318,1,456,1,457,1]
,"product":[0,1,121,13,233,1,297,3,298,5,299,1,300,2,301,3,302,1,304,1,305,2,460,1,473,1,521,1,595,1]
,"basics":[0,1,1,1,6,1,20,1,318,1,352,1,358,1,419,1]
,"describes":[0,8,1,1,6,1,19,1,23,1,29,1,38,1,46,1,52,1,55,1,76,1,86,1,98,1,101,2,102,1,108,1,132,1,139,1,151,1,159,1,196,1,202,1,207,1,211,1,232,1,283,1,295,1,314,1,319,1,320,2,352,8,384,1,395,1,410,1,436,1,439,1,451,3,475,1,499,1,518,3,540,4,552,1,559,2,574,1,578,1,582,1,584,1,589,1,595,1,596,1,600,1,601,2,617,1,631,1,632,1]
,"basic":[0,1,5,1,6,2,26,2,27,1,28,1,84,1,211,1,212,1,216,1,218,1,224,1,226,1,295,1,320,1,351,1,352,1,358,2,360,3,363,3,364,1,365,2,366,1,367,1,369,1,374,1,383,1,385,1,386,1,387,1,388,1,389,1,390,1,391,1,392,1,393,1,394,1,396,1,397,1,398,1,399,1,410,2,428,1,429,1,430,1,431,1,432,1,433,1,434,1,435,1,436,1,439,1,451,2,456,3,461,2,462,2,471,1,472,1,473,1,491,1,503,1,516,1,551,1,607,1]
,"objects":[0,4,1,1,3,2,6,1,10,7,11,4,14,1,15,3,18,1,19,2,20,1,22,1,23,1,27,1,29,3,32,1,35,1,36,1,37,1,47,1,53,2,56,1,77,1,82,1,84,4,86,1,88,1,102,1,103,1,108,2,120,6,121,4,132,1,133,2,197,1,211,1,213,1,222,5,226,5,227,1,256,1,259,1,260,6,261,1,262,6,263,2,265,1,266,2,285,1,293,1,320,1,322,6,323,2,324,3,326,1,333,1,334,1,360,8,362,3,363,2,364,2,367,11,368,13,369,6,370,4,374,5,376,15,377,4,394,3,398,1,399,1,402,5,412,1,413,1,415,1,435,1,440,1,451,1,454,1,460,1,462,1,489,1,493,1,499,1,500,1,503,2,504,2,505,1,506,1,507,1,509,1,510,2,511,2,512,6,513,2,515,3,516,3,518,1,520,1,526,1,527,1,528,1,531,2,537,2,538,2,540,8,541,3,542,1,545,2,548,1,549,4,551,2,552,2,553,1,556,1,557,2,560,1,562,1,563,2,564,4,569,1,570,1,572,4,575,6,576,4,577,4,595,2,596,2,597,2,598,2,599,1,601,2,633,2]
,"necessary":[0,1,25,1,30,1,112,1,120,1,121,1,157,1,201,2,225,1,226,4,227,2,234,1,255,1,256,1,258,1,316,1,336,1,348,1,367,1,376,1,438,2,439,1,440,1,457,1,458,1,461,1,462,1,484,4,489,2,504,2,506,1,507,1,515,1,534,1,541,1,548,1,549,1,552,1,553,1,560,1,596,1,600,1,612,1,640,1,641,1,642,1]
,"build":[0,1,3,1,7,1,11,1,238,1,336,1,340,1,347,1,403,1,460,1,549,1,597,1,644,1]
,"application":[0,1,3,2,6,1,7,1,8,4,9,3,10,2,16,1,20,2,29,1,45,1,47,1,52,1,75,3,82,1,85,1,98,1,117,1,121,1,122,6,136,3,138,1,204,3,205,10,209,2,211,2,215,1,216,1,217,1,218,9,222,2,223,1,224,9,225,21,227,6,228,8,229,9,230,17,231,2,232,11,234,1,235,3,236,14,237,9,238,2,241,1,242,1,243,1,247,1,249,2,258,1,259,1,267,11,270,1,277,4,279,1,282,7,283,5,284,3,285,3,288,1,289,1,291,2,292,6,293,8,294,16,295,2,311,3,312,10,321,2,332,1,336,1,340,1,457,1,471,1,472,4,473,7,479,2,487,2,490,2,496,2,503,1,504,1,505,1,506,3,509,1,520,2,536,1,541,2,545,1,554,1,560,1,569,1,571,1,586,1,595,1,602,1,607,2,608,4,619,1,633,1,634,4,635,2,639,1]
,"second":[0,1,37,2,72,1,95,1,121,2,133,1,195,1,207,1,209,2,275,1,283,2,336,11,338,2,339,3,340,3,345,5,348,1,364,1,373,1,379,1,392,2,393,2,397,2,398,2,399,2,400,1,436,1,453,1,459,1,478,1,480,1,486,1,489,5,531,1,533,1,540,1,547,1,557,1,597,2,612,1,640,2,643,1]
,"chapter":[0,1,2,1,6,1,11,1,13,1,19,2,46,1,47,1,76,1,80,1,85,2,102,1,103,1,123,1,132,1,140,1,151,1,159,1,212,1,216,1,217,1,224,1,231,1,241,2,259,1,260,1,268,1,294,1,295,1,296,1,297,1,320,1,335,1,343,2,353,1,358,1,371,1,378,1,382,1,405,1,416,1,419,1,426,1,437,1,452,1,456,1,471,1,475,1,499,1,519,1,522,2,523,1,536,1,540,2,559,2,573,1,601,1]
,"overview":[0,1,6,2,7,1,102,1,211,2,336,1,340,1,345,1,348,1,540,1,541,1,545,1,546,1,547,1,551,1,552,1,621,1,622,1]
,"main":[0,1,5,1,8,1,9,1,12,1,25,1,27,1,31,1,51,1,52,2,53,1,56,1,57,2,73,3,74,2,75,3,82,1,88,1,89,1,108,1,122,1,136,2,141,2,146,1,200,1,216,4,220,1,221,1,222,3,223,4,224,3,225,2,226,6,227,4,230,2,234,2,237,2,238,1,239,1,240,2,243,4,244,1,245,5,247,2,249,1,250,2,251,4,252,3,253,3,254,4,255,3,256,3,257,2,258,3,261,2,262,3,263,3,264,1,265,2,266,2,267,4,271,2,272,2,273,1,275,4,277,1,280,3,282,2,283,6,284,2,285,1,288,3,289,1,290,2,291,1,292,1,293,1,294,2,295,1,299,1,301,2,302,1,307,1,320,1,322,3,323,1,330,1,332,2,333,1,336,1,339,2,340,3,342,1,352,1,353,1,354,1,369,1,400,2,412,1,414,1,460,1,474,1,504,1,507,1,516,1,522,1,525,2,534,1,540,1,541,1,551,1,552,1,564,1,602,1,606,1,607,1,610,2,616,1,628,1,633,1,635,5]
,"available":[0,1,8,1,12,1,22,1,29,1,54,1,57,1,75,3,82,1,112,3,121,1,135,1,145,2,157,1,158,1,165,1,167,1,171,1,187,3,189,2,193,1,195,5,246,3,250,1,255,1,283,2,295,1,321,1,322,1,324,1,331,1,332,2,339,1,354,2,355,1,356,2,361,1,372,1,375,3,379,1,400,1,412,2,422,1,425,1,436,1,457,1,474,1,486,1,489,1,495,1,497,1,498,1,500,1,522,1,537,1,538,1,547,1,568,1,595,2,600,1,601,1,619,1,625,1]
,"api":[0,1,3,1,6,1,8,1,15,1,22,1,24,1,34,1,35,1,36,1,37,1,51,1,85,1,89,1,97,1,109,1,284,1,502,1,518,1,520,1,565,1,567,1,610,1,619,1]
,"tables":[0,2,3,2,13,1,15,6,19,2,20,4,21,9,24,1,25,1,26,2,28,3,32,2,34,2,35,2,37,1,39,2,52,1,56,2,69,1,84,2,85,1,87,3,88,3,89,2,93,1,98,1,99,1,101,1,102,1,104,1,105,7,106,1,120,2,121,1,127,2,130,1,141,2,142,1,144,5,152,1,154,3,155,1,156,3,157,21,158,2,160,1,211,3,213,2,215,1,216,7,217,1,218,4,219,2,220,1,223,11,232,4,233,3,243,8,244,4,245,1,246,2,248,1,250,1,253,2,254,2,270,1,271,6,273,7,274,7,280,3,282,1,293,1,295,2,296,3,298,1,299,2,300,2,302,1,314,1,315,4,316,8,317,1,422,1,425,1,595,1,597,1]
,"important":[0,2,19,1,84,1,100,1,122,1,127,1,383,1,476,1,494,1,497,1,560,1,597,1]
,"object":[0,2,8,6,9,1,10,1,14,1,15,1,17,1,19,3,20,3,22,7,23,1,24,1,25,1,27,2,28,3,29,3,31,3,32,3,34,1,35,1,39,5,43,2,47,1,48,2,51,1,53,1,56,2,57,2,58,3,73,1,76,1,77,3,78,1,79,2,80,4,81,2,82,8,83,2,84,11,86,1,87,4,88,3,89,4,91,2,96,1,102,2,103,2,104,3,105,5,106,2,107,3,108,2,109,1,110,1,111,1,112,1,113,1,119,2,120,8,121,1,130,1,131,2,133,5,134,1,135,8,136,1,137,2,138,2,199,3,218,1,222,8,226,12,260,1,262,13,263,2,265,1,298,1,320,2,322,7,323,6,324,2,334,3,336,2,340,4,345,1,348,1,356,1,360,9,361,2,362,7,363,5,364,19,365,4,367,22,368,46,369,23,370,3,372,19,373,21,374,10,375,10,376,10,377,7,378,2,379,3,380,2,381,5,383,4,386,4,394,23,397,1,400,4,402,52,403,2,406,1,409,2,410,2,411,1,412,4,413,2,414,5,415,2,417,4,418,2,419,8,420,1,422,2,425,4,426,1,436,8,438,4,439,1,440,2,449,7,450,2,453,1,472,2,498,4,510,1,511,4,513,3,516,1,517,3,524,1,536,2,537,2,538,1,541,1,542,1,545,5,547,4,548,2,553,1,557,1,560,1,571,1,576,4,577,5,580,1,583,4,585,1,595,3,597,7,598,2,599,1,637,2]
,"(ilitable":[0,1]
,"class":[0,3,3,3,5,1,9,3,10,5,11,2,12,1,14,2,15,5,16,6,17,12,19,2,20,12,22,1,24,7,25,11,26,1,27,3,28,4,29,7,31,3,33,1,34,4,35,2,36,3,37,4,38,2,40,3,41,2,42,5,43,3,47,5,48,5,50,2,52,1,53,2,54,3,56,6,57,4,59,1,61,1,62,1,63,1,68,1,69,1,70,1,71,1,72,1,75,2,76,2,77,5,80,4,82,2,84,1,86,1,87,1,97,2,103,1,109,1,118,2,120,3,122,1,133,2,135,1,136,1,196,5,197,4,198,3,199,2,200,7,201,3,205,6,213,1,222,1,224,1,225,5,227,15,228,4,230,11,236,2,267,6,294,1,318,1,322,3,361,8,362,8,363,2,368,11,369,2,372,13,373,1,374,1,377,13,379,2,383,2,384,2,385,1,386,1,387,1,388,1,389,1,390,1,391,1,392,1,393,1,394,6,395,6,396,3,397,4,398,11,399,7,402,9,403,1,404,1,406,3,408,2,409,2,410,2,411,9,412,2,413,2,415,4,417,5,420,2,423,2,427,6,428,1,429,1,430,1,431,1,432,1,433,1,434,1,435,1,436,2,440,1,442,2,443,2,449,1,450,3,456,1,460,1,461,7,462,4,463,3,469,1,477,1,480,1,481,6,482,1,488,1,489,7,491,1,492,6,494,1,495,7,497,2,498,7,500,9,501,5,502,1,503,1,504,17,505,5,506,4,507,3,508,1,509,2,513,1,515,1,516,5,517,5,519,1,520,5,540,1,541,9,543,1,544,2,545,2,546,1,547,2,548,3,549,4,550,1,551,2,552,1,553,9,554,3,556,1,557,9,558,3,560,9,568,2,569,1,571,6,572,2,576,8,577,23,580,3,581,1,583,13,584,1,585,3,586,2,588,2,591,3,592,2,593,2,594,2,596,10,597,8,599,4,600,1,609,1,610,3,611,2,615,1,619,2,620,1,623,1,624,2,625,1,627,3,630,1,632,2,633,1,635,5,636,2,637,1,639,4,640,5,641,2,643,6]
,"subclasses)":[0,2,16,1,17,1,47,1]
,"sources":[0,2,1,1,3,1,11,1,13,1,16,2,17,2,20,1,46,4,47,1,54,2,71,1,72,2,73,1,74,2,101,1,123,3,138,1,141,2,143,2,156,2,158,1,161,1,163,2,165,1,167,2,169,1,171,2,173,2,175,1,179,1,181,1,183,1,185,2,187,2,189,1,191,1,193,2,194,1,195,8,213,1,214,1,218,2,223,6,235,1,237,1,241,3,243,1,244,1,252,1,258,4,293,3,301,2,518,1,523,1,524,2,540,1,541,1,554,1,631,1,645,3]
,"gadgets":[0,9,1,1,3,3,7,2,10,1,11,10,13,1,16,3,17,5,20,1,22,3,24,1,45,8,46,4,47,10,49,1,50,3,51,1,54,1,55,4,56,3,57,3,58,1,63,2,75,1,77,2,88,3,89,1,90,1,91,1,94,1,95,7,120,1,124,3,130,3,139,6,140,4,141,2,142,4,143,3,144,1,145,2,146,1,147,2,150,1,151,6,152,1,153,1,156,1,158,3,159,5,161,1,213,2,215,1,216,7,217,1,218,1,220,2,222,2,223,19,226,3,234,7,241,2,243,7,253,1,256,2,257,2,261,1,263,1,271,2,275,1,276,3,280,2,282,3,283,7,285,4,288,6,289,4,292,1,293,3,299,2,300,1,301,3,303,1,322,1,332,1]
,"source":[0,5,3,3,7,2,8,1,10,2,12,1,16,4,17,1,18,1,22,3,24,3,29,2,41,1,42,2,47,10,48,6,49,4,50,5,51,17,52,11,53,6,54,14,55,1,56,11,57,8,59,1,64,7,66,1,67,1,69,1,70,1,71,4,72,5,73,3,88,6,89,2,90,2,93,1,94,3,95,9,96,1,97,3,99,7,105,3,119,1,121,16,122,2,123,1,124,3,125,3,126,4,127,17,128,2,129,6,130,6,131,2,133,3,136,1,137,1,139,1,141,1,142,13,143,1,144,2,146,1,151,2,152,3,154,11,155,6,156,33,157,50,158,33,161,11,163,16,165,7,167,18,169,7,171,15,173,15,174,1,175,10,178,1,179,3,181,2,182,1,183,6,184,1,185,15,186,1,187,20,188,1,189,13,190,1,191,3,192,1,193,24,195,57,199,1,213,1,216,23,217,2,218,17,219,6,220,4,223,4,225,4,227,6,230,1,235,1,241,8,242,3,243,21,244,3,245,8,246,1,247,4,248,2,250,19,251,7,252,13,253,13,254,4,255,7,256,11,257,7,258,14,263,2,269,1,270,2,271,16,272,4,273,9,274,2,275,4,276,3,278,1,279,2,280,11,281,5,282,14,283,7,284,1,293,9,294,1,297,2,299,10,300,14,301,4,333,1,364,1,365,1,366,1,369,1,377,1,394,1,398,1,402,1,436,1,439,1,440,3,473,1,526,2,528,1,529,2,540,1,541,1,542,1,547,1,548,3,550,1,552,2,553,1,554,1,557,4,559,1,571,1,572,2,580,1,596,2,597,2,632,1,633,1,638,2]
,"(ilidatasource":[0,1,52,5]
,"aware":[0,1,142,9,199,1,465,1,489,2]
,"handling":[0,1,1,1,8,1,14,1,16,1,47,1,53,2,76,1,213,1,318,1,352,2,371,3,372,1,543,1]
,"values":[0,2,1,1,7,1,13,1,14,3,15,3,17,4,22,1,24,13,27,3,37,1,45,1,51,2,56,1,57,1,62,3,64,3,73,1,76,2,77,3,80,2,82,1,84,1,87,7,88,1,89,3,90,1,91,8,92,3,96,1,99,7,100,1,104,1,114,3,115,3,116,1,119,1,121,1,127,1,130,1,149,1,156,4,157,6,158,2,163,1,167,5,171,1,173,1,185,1,187,1,193,2,200,1,201,2,204,3,207,1,209,1,213,1,216,3,219,1,226,1,243,1,246,1,248,1,261,1,264,1,274,1,311,3,329,2,330,2,332,2,336,31,338,12,339,2,340,1,341,3,343,13,344,1,345,10,346,12,347,3,348,3,349,5,350,5,351,5,355,3,356,1,359,3,361,4,362,4,365,6,366,6,368,3,369,8,370,8,372,14,377,4,383,1,392,5,393,5,394,5,397,4,403,4,408,1,409,4,410,1,411,1,413,2,414,8,415,4,420,1,434,1,438,3,439,3,445,1,446,2,447,1,450,1,454,1,469,1,470,5,482,5,484,1,489,5,492,1,495,1,498,5,500,1,511,1,544,2,547,2,548,1,558,1,597,2,611,2,619,1,642,1]
,"information":[0,4,2,1,3,1,6,1,8,1,10,1,12,1,13,3,16,1,19,1,22,1,23,1,24,1,25,1,26,1,27,1,28,1,29,1,33,1,34,1,38,1,46,1,47,1,53,2,54,1,55,1,56,2,57,1,58,1,73,2,74,1,76,1,85,1,88,4,97,1,98,1,102,1,109,2,110,1,118,1,120,1,123,2,128,1,129,1,132,1,135,1,140,1,147,1,154,2,157,1,159,1,196,1,199,1,200,1,201,1,202,1,207,1,211,1,212,1,222,2,225,2,230,1,232,1,237,1,243,2,244,1,245,1,246,1,247,1,248,1,249,1,252,1,254,2,256,1,257,1,265,1,274,1,276,1,277,1,282,1,284,1,289,2,290,1,291,1,294,1,295,1,308,1,309,1,316,2,318,1,320,2,327,1,328,1,332,1,339,1,340,1,351,1,352,1,353,1,356,1,358,1,367,7,368,9,369,13,370,6,371,2,375,1,378,2,382,2,384,1,394,4,395,1,400,2,402,54,403,2,405,2,410,3,413,1,414,4,415,1,416,2,426,2,427,1,434,3,437,2,439,2,451,4,454,2,456,1,457,1,461,1,462,3,471,1,472,2,473,1,478,1,481,3,482,1,483,1,484,1,489,3,492,2,495,5,498,3,500,7,501,3,504,6,516,1,518,1,524,1,526,3,529,4,530,1,531,1,533,2,534,1,536,1,537,1,538,1,539,4,540,1,541,4,542,1,543,2,545,2,547,1,548,1,552,1,553,1,556,2,557,2,558,1,575,3,576,5,577,3,580,1,582,1,583,1,584,2,586,1,590,4,592,1,595,1,598,1,600,1,606,1,619,1,633,1,635,1,636,2,637,1,644,1]
,"handled":[0,1,15,1,77,1,372,1,386,1,504,2,584,1]
,"without":[0,1,51,1,57,1,58,1,77,1,95,1,110,1,120,1,156,1,157,2,246,1,247,1,258,1,283,2,289,1,316,1,334,1,354,1,414,1,418,2,439,1,440,2,453,1,458,1,459,1,462,1,479,1,480,1,481,2,482,1,484,1,485,3,487,1,489,2,490,1,503,1,504,1,505,1,515,1,534,1]
,"having":[0,1,24,1,27,1,42,1,77,1,105,1,116,1,117,1,127,1,153,1,156,6,157,2,172,1,202,1,248,1,283,1,284,1,309,1,316,1,354,1,369,1,492,1,533,1,577,1,597,1,614,1,624,1]
,"account":[0,1,28,1,59,1,77,1,157,1,248,1,263,1,402,2,454,1,466,1,479,2,482,2,486,1,491,1,492,1,496,1,498,1,505,1,507,2,508,2,509,1,510,1,517,1,536,1,569,1,595,1,612,1]
,"actual":[0,1,27,1,56,2,100,2,289,1,304,1,305,1,372,1,624,1]
,"type":[0,1,4,2,10,1,14,3,15,1,24,3,29,1,35,1,36,2,37,2,40,1,45,1,48,2,52,2,57,2,72,3,73,1,77,3,78,1,79,2,80,3,81,2,82,14,84,6,87,1,88,1,100,3,105,2,121,6,124,1,126,1,127,2,129,1,130,1,135,2,144,1,146,2,154,1,156,8,157,1,158,6,169,1,171,1,177,1,183,3,187,2,189,1,193,4,195,4,198,1,201,4,202,1,209,1,210,2,218,1,222,3,223,2,224,3,225,2,226,1,228,1,236,1,237,1,238,1,240,2,243,1,246,2,247,1,250,2,253,1,257,1,258,2,261,1,263,1,265,2,271,1,273,3,274,2,275,3,276,1,280,1,282,5,284,1,288,2,289,3,298,4,299,1,300,1,306,5,309,1,316,6,321,1,323,1,327,2,328,6,329,2,336,22,338,2,339,1,340,15,342,1,345,3,348,3,349,4,355,1,360,1,361,2,362,1,363,1,368,4,369,2,372,6,377,2,383,1,384,1,385,1,394,1,395,4,396,1,397,1,398,2,399,1,409,3,410,4,411,1,412,4,413,2,422,8,425,8,433,1,435,1,438,1,443,1,446,1,450,2,458,1,459,1,461,2,474,1,476,3,481,3,482,2,487,1,489,2,490,1,492,2,493,1,495,1,499,1,516,2,526,1,531,1,536,2,537,1,538,1,544,1,547,3,550,1,553,2,558,1,560,1,561,1,564,1,575,2,576,3,580,1,585,1,597,2,598,1,600,1,610,1]
,"until":[0,1,28,1,51,1,64,1,112,2,122,2,133,1,175,1,237,1,266,1,288,1,289,1,291,1,372,1,534,2,553,1]
,"run":[0,1,10,1,47,1,211,1,227,1,229,2,284,1,294,1,303,1,308,1,472,1,473,2,536,1,537,1,608,1,634,1]
,"time":[0,1,4,2,10,1,14,1,21,1,24,1,27,4,31,1,37,1,39,1,51,2,52,3,57,2,63,1,65,1,82,1,87,1,91,1,95,1,110,3,112,1,113,1,115,1,116,3,117,3,120,1,121,1,122,2,125,1,135,3,136,1,156,3,157,4,158,1,161,2,183,1,195,6,199,1,201,5,205,3,207,1,208,2,209,2,218,3,222,2,227,1,238,2,243,1,257,1,282,2,284,1,289,1,291,1,312,3,316,1,320,1,325,1,343,2,346,1,347,4,348,3,372,1,373,1,374,4,375,3,376,4,402,1,411,2,432,1,435,1,436,1,440,10,454,2,458,2,459,3,462,1,463,1,464,7,469,2,477,1,478,1,481,5,485,3,486,4,487,5,489,7,492,6,500,4,501,1,504,1,517,3,520,1,549,1,550,1,552,3,553,1,560,4,568,1,586,1,592,1,596,1,597,2,631,1,637,1,645,1]
,"feature":[0,1,28,1,56,1,97,1,117,1,211,1,257,1,288,1,289,1,295,2,296,2,302,1,332,1,353,1,357,1,461,2,481,2,486,1,489,1,507,1,517,1,540,4,541,8,542,3,543,4,544,3,545,3,547,6,548,2,550,1,551,3,552,9,553,7,557,1,560,13,576,3,577,3,580,2,583,1,585,2,595,2,596,3,597,8,598,2,599,1,600,3,618,1,639,1]
,"implemented":[0,1,14,1,20,1,21,1,76,1,323,1,374,1,376,1,377,1,394,1,513,1,516,2,572,2,580,1,590,1,618,2,632,2,635,1,639,1]
,"ilivalue":[0,1,14,2,17,1,27,3,36,1,43,1,45,2,51,3,52,1,53,1,56,1,76,3,77,6,78,3,79,5,80,3,81,2,82,15,83,6,84,12,119,1,121,1,135,2,197,1,199,2,200,1]
,"hints":[0,2,1,1,28,1,85,2,128,1]
,"tips":[0,2,1,1,28,1,85,2,189,1,486,1]
,"using":[0,3,1,1,3,2,8,1,10,2,17,2,20,1,22,1,27,2,28,1,39,1,47,1,51,3,52,1,53,1,54,2,56,1,58,2,64,1,73,1,75,2,79,1,81,1,82,2,83,1,85,4,87,2,88,4,89,1,91,4,92,1,93,2,94,1,104,1,105,1,109,1,110,1,112,1,116,2,118,1,120,2,122,1,124,2,127,1,128,1,130,1,133,3,134,2,135,3,138,1,142,1,149,1,161,1,191,1,200,2,201,1,212,3,216,2,218,4,222,1,223,1,224,4,225,1,226,2,227,1,230,1,233,1,237,2,241,2,243,4,244,1,245,1,246,1,247,1,248,1,254,1,258,2,259,2,261,2,263,1,266,1,275,2,276,2,277,1,279,1,281,1,282,3,283,2,284,2,285,1,287,1,288,2,289,2,291,1,292,1,293,1,294,1,295,2,298,1,302,1,304,1,305,1,306,10,308,1,314,1,315,1,318,4,319,2,320,3,324,1,334,1,335,1,336,1,340,5,341,2,342,1,343,1,345,1,348,1,351,3,352,4,353,1,354,1,359,2,360,3,362,1,364,2,369,5,370,2,372,11,373,1,375,7,376,3,377,1,380,2,382,2,383,2,384,2,385,1,386,1,387,1,388,1,389,1,390,1,391,1,392,1,393,1,394,6,395,5,397,1,398,6,399,2,400,2,401,2,403,2,405,2,408,1,409,1,410,3,411,1,414,1,415,1,424,2,426,1,427,4,437,2,439,2,440,5,445,1,446,1,450,2,451,6,453,1,454,5,456,1,459,3,461,2,462,5,463,1,466,2,467,4,468,4,469,2,470,1,471,2,472,2,473,1,476,2,478,3,480,1,481,1,482,1,485,1,486,1,488,1,489,3,491,1,492,4,494,1,495,3,496,1,497,1,498,4,499,7,500,2,501,2,502,1,503,1,504,3,505,6,506,2,507,2,508,1,510,2,512,1,513,1,515,1,516,3,517,3,518,1,520,1,522,2,526,1,527,3,533,1,534,3,535,2,537,2,538,1,540,2,541,1,543,1,545,2,548,3,549,3,551,1,553,1,554,1,557,3,558,2,559,1,563,1,564,1,565,1,566,1,571,1,576,1,577,2,580,1,583,1,596,2,597,2,598,1,607,1,608,1,618,3,619,3,623,2,626,2,627,2,628,1,630,1,631,1,634,1,636,1,641,2,643,1]
,"examples":[0,1,35,1,121,1,203,1,204,1,205,1,206,1,215,1,216,1,310,1,311,1,312,1,313,1,314,2,318,1,322,1,331,1,335,1,343,1,351,1,363,2,366,1,367,1,372,1,373,2,383,2,400,1,402,1,422,1,425,1,438,1,450,1,453,1,482,2,486,1,522,2,523,2,587,1,604,2]
,"types":[0,1,4,1,11,1,12,4,14,1,15,4,16,1,20,2,21,2,26,1,44,1,47,1,52,4,57,1,76,2,77,2,80,10,82,5,84,8,87,1,98,1,100,1,102,1,121,3,157,1,193,1,201,1,202,1,207,1,217,1,222,1,223,1,244,1,274,1,309,1,318,1,324,1,328,1,332,1,353,1,354,1,356,1,372,2,375,4,376,1,377,6,385,2,386,2,387,2,388,2,389,2,390,2,391,2,392,2,393,2,394,1,395,1,396,2,397,2,398,2,399,2,410,2,415,1,451,1,453,1,460,1,476,3,479,1,482,1,487,1,490,1,492,1,493,1,495,1,496,1,498,2,544,1,547,1,568,1,576,2,602,1]
,"situations":[0,1,10,1,51,1,79,1,87,3,98,1,113,1,130,2,469,1,486,1,549,1]
,"may":[0,1,3,1,4,1,10,1,24,1,27,4,29,2,39,5,40,1,42,3,44,3,52,1,88,1,122,3,130,1,156,2,157,1,201,1,222,1,225,1,238,1,247,1,262,1,311,1,312,1,321,1,336,3,340,1,343,1,345,2,348,1,372,1,380,1,457,3,458,4,459,1,460,1,462,2,464,1,465,2,467,2,468,2,469,2,470,2,474,1,479,5,482,3,484,2,486,2,487,1,489,5,492,2,493,2,494,1,495,2,498,2,500,1,501,2,504,1,506,2,515,1,516,2,517,8,524,2,531,2,540,1,558,2,560,1,595,1,596,1,597,1,606,1]
,"encounter":[0,1]
,"(and":[0,1,15,2,208,1,257,1,459,1,486,1,579,1]
,"studio)":[0,1,24,1,58,1]
,"provides":[0,3,1,1,11,2,14,1,15,1,16,1,20,1,21,1,24,1,26,1,28,1,33,1,36,1,47,2,48,1,51,1,52,1,53,1,54,1,57,1,87,1,123,1,201,1,209,1,211,2,212,1,213,2,223,1,227,1,230,1,232,1,234,1,246,1,250,1,259,1,282,1,303,1,315,1,318,1,352,1,363,1,371,1,378,1,382,1,396,1,397,1,398,1,399,1,405,1,416,2,422,1,425,1,426,2,437,1,451,4,453,2,454,3,457,1,460,1,463,1,471,1,472,1,478,1,479,1,487,1,492,1,496,1,501,1,503,1,504,1,505,3,517,1,518,3,519,1,533,1,540,1,541,2,547,2,551,1,554,1,557,2,558,1,576,1,577,1,579,2,592,2,598,1,607,1,612,1,620,1,624,1,625,1,645,1]
,"useful":[0,2,15,1,20,1,85,1,88,1,91,1,97,1,100,1,113,1,118,1,120,2,130,1,135,1,227,1,376,1,439,1,440,1,450,1,460,1,478,1,481,1,482,1,486,1,489,1,494,1,548,1,560,2,564,1,576,1]
,"handle":[0,1,3,1,10,1,121,1,122,1,226,1,227,1,265,2,327,1,328,1,362,1,372,1,381,1,436,1,462,1,473,1,476,1,513,1,520,1,560,1,590,1,595,1,596,2,597,2]
,"sql":[0,5,3,2,4,4,12,1,15,2,28,1,34,2,35,1,51,1,52,1,90,1,94,1,95,2,101,3,102,6,104,6,105,6,106,2,108,8,110,5,111,1,112,2,113,1,114,2,115,2,116,6,118,1,119,4,120,6,121,4,122,5,123,5,124,12,125,1,126,2,127,10,128,2,129,1,130,3,131,2,132,1,133,5,135,5,136,1,138,1,139,1,141,3,142,3,144,8,151,1,154,3,155,6,156,7,157,23,211,2,212,1,213,2,216,14,217,1,218,34,219,1,223,21,233,3,234,1,235,1,237,13,241,2,242,2,243,18,244,10,247,2,248,4,250,1,252,4,253,11,255,4,257,1,258,10,270,1,271,10,273,7,274,1,275,2,276,12,279,1,280,9,281,4,282,6,293,2,295,1,297,2,298,1,299,6,300,9,303,1,305,1,314,3,315,3,316,8,317,2,595,1,596,1,597,1]
,"detailed":[0,1,13,1,218,1,230,1,345,1,351,1,371,1,378,1,382,1,405,1,426,1,437,1,442,1,462,1,541,1,551,1,579,1]
,"subclasses":[0,1,15,1,19,2,20,3,21,1,24,1,31,1,33,2,48,3,89,1,361,3,362,3,363,1,368,3,372,5,377,2,395,1,398,2,399,1,402,1,404,1,411,1,415,3,427,3,461,6,462,2,463,2,469,1,498,1,500,1,547,1,556,1,597,1]
,"ilisqltable":[0,1,15,3,20,2,21,1,22,2,27,1,28,2,33,1,34,4,48,1,51,1,89,1,103,3,104,2,105,8,106,4,107,6,108,3,109,2,110,1,111,1,112,2,113,1,117,1,118,3,119,2,120,7,121,2,122,1,124,2,133,1]
,"used":[0,4,3,4,5,1,10,2,11,2,14,2,16,1,17,4,20,3,22,2,24,6,25,3,26,1,27,1,28,5,29,3,31,2,34,1,35,3,36,1,37,1,40,1,41,1,42,2,45,2,47,1,51,6,52,7,53,1,54,2,56,7,57,7,61,1,68,1,71,1,74,1,75,6,77,1,79,1,80,1,83,1,84,1,87,11,88,4,89,4,92,1,99,1,102,1,103,1,104,1,105,2,110,1,116,1,120,1,121,3,122,2,124,1,125,1,126,2,127,4,129,1,133,1,135,1,136,1,137,1,138,1,146,1,148,1,152,1,156,18,157,8,158,8,160,1,161,6,162,1,163,2,164,1,166,1,168,1,170,1,171,1,172,1,175,1,176,1,178,1,179,4,181,3,182,1,184,1,186,1,187,3,188,1,190,1,191,5,192,1,193,5,194,1,195,3,197,1,198,2,199,1,200,4,201,2,204,3,207,2,208,1,209,1,216,3,218,4,225,2,227,2,232,2,235,1,237,1,243,2,247,1,248,5,250,1,257,1,260,1,264,3,273,1,276,1,282,2,283,3,289,1,293,1,294,3,300,1,311,3,314,1,316,1,324,1,328,3,329,2,330,1,332,2,336,8,339,3,340,3,343,1,349,2,356,1,360,1,361,1,362,4,363,1,364,3,365,3,367,2,368,11,369,7,370,2,372,4,374,1,375,1,376,4,377,3,379,1,381,1,383,4,384,2,385,2,386,2,387,2,388,2,389,2,390,2,391,2,392,4,393,2,394,3,395,4,396,2,397,4,398,3,399,3,400,2,402,4,403,7,406,1,408,1,410,9,411,3,412,7,413,4,417,1,418,1,420,1,421,3,422,10,423,1,424,3,425,10,427,3,428,1,430,1,432,3,435,1,436,5,439,3,440,3,448,1,449,1,450,2,454,1,455,1,457,3,459,2,461,2,462,1,463,2,465,1,469,3,476,1,479,1,481,4,482,1,486,1,489,4,492,3,495,3,498,3,500,2,504,2,505,1,508,1,509,1,510,1,511,3,512,2,513,2,514,2,515,1,523,1,526,1,528,1,537,2,540,2,541,2,544,1,547,3,551,1,552,1,553,2,554,1,556,1,566,1,568,1,571,1,575,4,576,5,577,4,586,4,591,1,594,1,596,5,597,8,606,1,610,1,612,2,618,1,619,1,622,2,623,1,627,1,628,1,631,2,632,2,635,1,638,1,640,4,641,1,642,1,643,4,644,1]
,"connect":[0,1,7,1,47,1,49,1,54,2,55,1,56,2,72,1,101,1,127,1,132,1,133,4,134,2,136,1,137,1,144,1,154,1,157,12,181,1,189,2,218,7,219,1,220,1,223,1,237,4,241,1,243,2,244,1,245,2,251,1,253,3,254,1,256,2,272,2,275,1,282,2,301,3,316,5,335,1,339,1,342,3,364,1,537,2]
,"relational":[0,1,15,1,20,1,22,1,28,1,34,1,103,1,132,1,133,1,536,2,595,4,596,7,597,1]
,"database":[0,3,3,3,4,1,7,2,13,1,14,4,15,4,16,1,20,4,21,4,22,1,28,1,30,1,34,2,35,1,39,1,52,2,64,2,84,1,101,2,102,1,103,1,104,4,105,13,106,1,107,2,108,2,110,3,112,2,113,3,114,1,115,1,116,2,117,4,118,3,120,4,121,6,122,6,127,2,129,8,130,2,131,2,132,3,133,6,134,3,135,2,136,6,139,1,142,1,144,1,152,1,154,4,156,12,157,31,175,1,201,3,211,4,212,1,213,5,214,1,215,4,216,12,217,1,218,7,219,5,220,1,223,5,231,2,232,6,233,4,237,2,241,1,243,7,244,6,245,5,246,1,248,2,250,4,253,2,254,1,257,2,274,3,293,1,295,2,297,1,298,3,308,4,314,3,315,2,316,9,317,8,455,1,479,1,487,1,490,1,522,1,535,2,536,14,537,8,538,1,551,1,552,1,559,1,572,1,595,4,596,9,597,14]
,"management":[0,1,3,1,26,1,28,1,33,1,43,1,51,4,84,1,103,1,135,1,213,1,248,1,316,1,457,1,460,3,497,1,560,1,612,1,618,1]
,"system":[0,1,7,2,8,1,14,1,15,1,16,1,20,2,21,1,28,7,34,2,52,1,84,2,103,1,104,1,118,1,121,1,122,1,132,1,134,3,149,1,156,5,157,1,158,2,163,2,165,2,167,2,189,1,201,2,212,1,213,1,222,1,225,5,226,1,228,1,233,1,237,1,243,1,248,1,261,1,264,1,266,1,282,5,298,1,305,5,307,2,308,2,315,1,316,3,328,3,345,2,350,1,354,2,355,2,359,2,362,3,365,1,367,1,368,3,374,1,413,1,469,1,495,1,517,1,526,1,541,1,547,2,548,2,552,1,554,1,556,1,557,4,575,1,576,1,590,3,597,2,601,1,602,1,625,1,631,1,632,1,635,2,636,1]
,"tells":[0,1,349,1,352,1,461,3,462,1,472,1]
,"define":[0,1,10,1,12,1,15,2,17,1,36,1,48,1,52,1,57,2,75,2,87,1,89,1,105,1,107,1,123,1,127,1,136,2,138,1,149,1,156,2,158,2,191,1,201,1,209,1,216,2,219,1,226,2,227,1,228,1,233,1,235,1,237,2,243,1,248,1,250,1,253,1,256,3,261,1,264,1,271,2,280,1,281,1,282,4,283,1,284,1,299,2,300,1,307,3,308,1,316,3,324,1,327,1,328,1,329,2,330,1,331,3,332,3,335,2,336,7,337,1,338,2,339,3,340,9,341,2,345,1,348,1,354,1,361,1,364,1,369,2,372,2,377,3,383,1,394,3,395,1,398,2,399,1,402,2,409,2,411,1,415,2,417,1,427,1,439,4,445,1,448,1,466,1,504,1,553,1,554,1,560,1,629,1,640,2,643,1]
,"parameters":[0,1,75,1,80,1,99,1,102,1,105,2,108,1,119,3,120,1,123,2,125,4,126,3,133,1,137,2,156,3,157,1,218,1,237,3,241,1,243,1,244,1,258,4,300,2,316,1,323,1,326,1,328,2,330,4,332,2,334,1,377,2,400,1,454,3,456,1,461,1,462,4,463,12,470,4,472,2,477,6,478,4,479,1,481,16,482,7,483,3,484,10,486,1,488,1,489,25,491,1,492,20,495,14,496,1,498,24,500,1,516,1,517,1,524,2,526,6,528,3,529,1,531,1,534,2,536,1,537,3,549,1,553,1,559,1,563,1,570,5,572,1,581,1,586,2,597,1,601,2,617,3,619,6,624,1,632,2,638,3,643,3,644,2]
,"connecting":[0,1,14,1,17,1,47,1,49,1,56,1,132,1,134,1,152,1,157,3,189,1,218,1,220,1,241,3,245,1,250,1,251,1,254,1,257,1,270,1,272,2,279,1,282,2,340,1,342,1,492,2]
,"implement":[0,1,3,1,20,2,42,1,97,1,118,1,377,1,458,1,461,2,501,3,506,1,516,1,541,1,546,1,547,1,549,1,551,1,552,1,553,2,559,1,569,1,572,1,600,2,638,1,639,2,641,1,642,1,643,3]
,"connection":[0,1,3,1,13,1,14,1,56,1,108,3,133,1,137,2,144,1,157,4,181,2,217,2,218,8,237,4,243,2,244,2,289,1,478,1,492,1,522,1,536,3,537,4,568,1]
,"iii":[0,1,139,1]
,"studio":[0,1,2,1,3,6,5,4,8,1,9,2,10,6,11,1,12,1,16,1,17,1,22,2,24,1,34,1,35,1,42,1,47,3,48,1,75,5,85,1,87,2,88,1,89,2,90,1,93,1,104,1,105,2,108,1,119,1,120,1,125,1,133,2,138,1,140,1,141,1,209,1,213,1,215,1,216,1,225,1,226,2,227,3,229,1,234,1,284,1,316,1,318,3,319,2,320,3,321,1,336,1,340,2,345,1,348,1,471,1,473,1,474,4,540,1]
,"introduces":[0,1,2,1,140,1,211,1,212,1,216,1,231,1,452,1,518,1,519,1,540,2,546,1,559,3,573,1,601,2]
,"found":[0,1,12,1,25,1,35,1,50,1,52,1,54,4,89,1,91,2,140,1,282,1,364,1,365,1,366,1,369,1,377,2,394,1,398,1,402,1,436,1,439,1,440,2,450,1,473,1,522,1,547,1,548,1,550,1,551,1,553,2,554,1,571,1,590,2,600,1,607,1,633,1]
,"palettes":[0,2,11,1,42,1,47,1,140,2,141,5,142,1,143,1,144,1,151,2,159,1,215,1,216,11,218,1,221,1,223,12,226,1,234,2,244,1,250,2,275,1,283,3,288,1,289,1,299,1,300,1,320,1,322,4,323,2,364,1,392,2,393,2,399,2,403,1,409,1,421,1,474,1]
,"panel":[0,2,5,1,10,7,11,1,12,1,42,1,47,3,48,1,49,2,50,1,56,2,75,1,88,2,97,1,121,1,127,4,133,2,140,2,141,3,142,1,143,1,144,1,148,1,149,1,150,1,151,2,153,2,154,2,155,2,156,5,157,10,158,10,159,1,161,1,163,1,165,1,167,1,169,1,171,1,173,1,175,1,177,1,179,1,181,1,183,1,185,1,187,1,189,1,191,1,193,1,195,1,209,1,216,15,218,20,220,2,221,1,222,2,223,11,224,2,225,7,226,9,227,18,228,11,229,2,230,18,234,2,237,8,243,11,244,2,247,1,250,3,251,1,253,6,255,1,256,2,257,2,258,3,261,4,262,2,263,3,264,11,265,2,267,17,271,1,272,1,273,4,274,4,275,1,280,1,281,1,282,5,283,1,284,2,288,5,289,6,291,1,293,5,294,1,299,2,300,7,307,5,316,5,320,1,322,3,323,2,339,6,340,4,341,3,474,1,527,1,531,1,536,2,537,2]
,"reference":[0,2,3,1,12,1,13,1,25,3,27,2,28,1,50,1,54,1,56,1,133,1,135,1,139,3,146,1,151,1,159,1,161,1,167,1,179,1,181,1,189,1,193,1,195,7,217,1,224,1,283,1,374,1,422,1,425,1,489,1,492,1,495,1,498,1,512,3,513,4,514,8,515,12,537,1,538,1,549,1,554,1,560,1,575,1,600,1,619,1,631,1,632,2]
,"two":[0,1,15,1,17,1,20,2,24,2,36,1,37,1,39,3,43,2,48,2,50,1,52,2,54,1,72,1,78,1,79,1,80,1,82,3,84,1,87,3,88,1,89,2,95,2,97,1,104,1,111,1,112,1,121,2,122,2,130,1,131,1,139,1,141,1,146,1,151,1,154,1,156,1,157,1,158,1,170,1,175,2,177,1,205,1,207,1,208,2,214,1,216,1,218,1,221,1,222,2,223,2,232,1,233,2,243,1,256,1,263,1,270,1,273,3,274,3,280,1,282,1,283,2,288,1,294,1,312,1,318,1,323,1,334,1,335,1,336,7,339,4,340,4,342,1,343,1,345,4,346,2,347,2,348,2,351,1,354,1,355,1,359,1,360,10,361,3,362,2,363,1,364,9,365,1,367,5,368,2,372,4,373,3,376,4,377,1,380,1,383,4,392,2,393,1,397,5,398,1,399,1,402,7,411,1,412,2,417,1,422,1,423,1,425,1,432,1,436,1,439,1,443,1,453,1,457,1,480,1,484,4,486,5,489,1,491,1,492,2,498,1,507,2,509,1,517,2,537,1,540,1,544,1,558,2,572,1,577,1,586,1,595,2,606,1,611,2,614,1,619,1,624,1,631,1,635,1]
,"creation":[0,1,9,2,18,1,24,1,151,1,394,1,422,1,425,1,439,1,440,2,504,1]
,"ilisqldatasource":[0,1,34,1,48,1,103,2,105,1,108,1,121,2,142,1,151,2,152,2,153,1,154,1,157,1,223,1]
,"ilimemorydatasource":[0,1,35,1,48,1,142,1,151,2,158,4,223,1]
,"display":[0,2,8,4,24,3,47,1,52,1,56,2,57,1,64,5,72,1,87,3,88,3,90,2,91,9,92,2,99,2,100,1,127,2,131,1,139,1,156,5,157,1,158,6,159,2,163,3,167,3,171,2,173,2,175,10,184,1,185,2,186,1,187,2,188,1,190,1,192,1,195,3,201,1,202,1,207,1,208,1,209,2,213,2,214,1,216,2,217,1,220,2,222,2,223,2,226,1,232,6,241,2,243,3,245,1,246,1,247,3,250,2,252,2,255,2,256,1,257,2,267,1,273,2,275,1,276,1,281,1,282,1,289,3,299,1,301,2,309,1,318,4,322,4,323,1,327,2,330,2,331,9,332,9,336,14,337,1,338,3,339,2,340,3,345,1,347,1,348,1,349,3,352,5,353,1,354,3,356,1,358,1,360,5,362,4,363,2,364,7,365,3,366,2,367,10,368,10,369,5,370,6,372,1,373,1,374,2,375,1,376,1,379,9,380,13,382,3,383,7,386,10,394,7,397,1,400,4,401,5,402,5,403,4,404,4,405,1,407,3,409,7,410,6,411,1,415,1,416,1,418,1,422,1,423,2,425,2,427,3,428,1,432,1,433,3,434,1,435,2,437,3,438,6,439,5,440,1,453,2,457,1,458,1,472,1,497,1,503,1,506,1,510,1,511,1,512,2,514,1,524,1,527,2,528,1,529,1,531,3,534,3,535,3,537,1,540,1,548,2,559,3,564,1,566,1,582,1,598,1,612,1,635,2,637,2]
,"listed":[0,1,146,1,158,1,159,1,161,1,167,1,169,1,179,1,181,1,187,1,189,1,193,1,195,1,204,1,258,1,311,1,336,2,348,1,364,1,474,1,623,1,627,1]
,"menu":[0,1,11,1,24,1,29,1,60,2,69,4,87,9,88,2,91,2,93,1,99,1,105,1,121,1,141,1,142,2,145,6,146,1,154,4,156,35,157,38,158,26,161,28,163,18,165,7,166,1,167,16,169,7,171,12,173,8,175,11,177,2,179,13,181,5,183,5,185,7,187,13,189,27,191,2,193,26,195,61,216,1,218,4,222,10,223,3,224,3,225,3,226,4,227,2,228,2,229,3,230,1,236,3,237,2,238,1,239,1,240,3,243,7,245,1,246,7,247,1,249,1,251,1,253,2,256,2,257,1,258,1,260,1,261,1,263,3,264,1,265,1,267,3,271,3,273,2,277,1,280,2,281,2,282,9,283,2,287,5,288,20,289,21,290,20,291,21,292,5,293,1,294,3,299,2,300,3,302,1,316,1,322,1,323,1,332,1,336,1,526,1,528,1,529,2,530,1,531,3,532,1,534,4,536,3,537,2,539,3]
,"utility":[0,1,17,1,196,2,229,1,577,1]
,"classes":[0,2,3,1,5,1,6,1,8,1,11,1,12,2,14,2,16,1,17,2,21,1,22,1,25,3,36,1,38,1,42,1,48,2,55,1,56,2,89,1,120,2,124,1,132,1,196,2,205,1,225,1,227,3,228,1,229,1,230,1,353,1,361,1,362,1,363,2,368,7,369,1,402,1,411,1,415,1,423,3,424,1,448,1,449,1,458,3,460,1,476,2,500,6,504,1,506,3,520,4,540,2,541,4,543,2,544,1,546,1,553,1,556,1,559,1,560,3,574,2,576,2,577,3,578,2,580,1,582,1,583,1,584,1,589,1,595,1,596,4,597,4,598,1,599,1,609,2]
,"few":[0,1,262,1,401,1,482,1,492,2,569,1,622,1]
,"additional":[0,1,3,2,10,1,11,1,12,1,27,1,43,1,120,1,130,1,146,1,157,1,211,1,243,1,244,1,245,1,246,1,248,1,254,1,256,1,257,1,274,2,276,1,282,1,284,1,291,1,316,1,364,1,365,2,366,5,440,1,465,1,478,1,482,1,483,1,484,1,485,3,491,1,543,1,596,2,597,1,619,1,638,1,643,3]
,"ilistring":[0,1,74,1,83,2,196,2,197,4]
,"ilidate":[0,1,82,2,135,1,196,2,199,3]
,"iliformat":[0,1,17,3,24,1,30,2,83,2,196,2,200,12,201,1,205,3,312,3]
,"iliinputmask":[0,1,17,1,24,1,196,2,201,3]
,"format":[0,3,17,8,24,2,45,2,133,1,152,1,156,2,158,3,163,3,165,3,167,3,189,2,200,7,201,1,202,4,203,5,204,4,205,4,206,2,207,4,208,4,209,4,211,1,282,28,309,3,310,5,311,4,312,4,313,2,346,2,365,4,369,2,383,1,409,2,410,1,411,1,446,1,450,1,526,1,532,2,533,2,534,1,540,1,541,2,551,2,553,3,555,1,556,3,557,15,559,1,560,1,564,1,572,1,574,3,575,6,576,3,578,3,579,3,580,2,582,4,583,2,590,6,598,2,599,1]
,"syntax":[0,4,17,2,200,2,201,1,202,2,207,2,211,1,282,3,298,1,309,1,486,3,600,2]
,"specify":[0,2,17,2,52,1,54,1,56,1,62,1,65,1,73,3,74,3,88,1,89,1,90,2,92,1,99,2,105,8,106,6,117,1,127,1,129,2,130,1,138,1,195,1,200,2,203,1,204,1,205,1,216,1,224,1,225,3,226,1,227,3,240,1,264,1,265,3,273,1,274,2,276,1,289,2,310,1,311,1,312,1,330,7,332,5,336,9,338,2,340,5,341,2,342,1,345,1,346,1,349,3,350,1,364,1,365,1,368,1,376,2,395,2,396,4,400,2,407,1,409,2,413,2,421,1,424,1,428,1,432,1,433,1,435,1,438,1,440,1,450,1,462,1,464,1,465,1,466,4,467,1,468,1,469,1,481,1,482,2,483,1,484,1,486,5,488,2,489,8,490,2,492,4,495,2,498,10,505,2,507,1,508,1,514,1,515,2,517,4,526,5,531,1,538,1,547,1,549,1,557,1,598,1,600,1,619,2,623,1,632,1,643,1]
,"mask":[0,2,17,1,24,2,45,2,156,1,158,1,163,1,165,1,167,1,201,9,207,4,208,1,209,4]
,"error":[0,2,26,2,29,15,30,5,34,1,39,2,47,1,52,2,53,15,131,1,134,1,135,3,210,5,222,1,480,1,488,1,491,1,494,1,497,1,500,1,517,1,597,2,612,4,618,5,631,1,636,1,638,1,639,1,641,4,642,1,643,13,644,1]
,"messages":[0,2,26,1,29,2,30,5,37,1,53,2,210,2,222,2,288,1,377,1,612,2]
,"version":[0,1,4,1,17,1,211,1,212,1,304,7,318,1,443,1,451,1,518,1,571,1,595,1,600,1,638,1,643,1]
,"6.2.1":[0,1,211,1,318,1,451,1,518,1]
,"features":[1,1,18,1,85,1,211,3,213,2,215,1,241,1,259,1,268,3,284,1,314,1,317,1,352,2,353,1,354,1,355,1,356,1,405,1,413,4,451,2,452,1,454,3,458,1,460,3,479,1,487,1,490,1,493,1,496,1,499,3,502,1,503,1,505,1,506,1,507,1,520,1,522,2,526,1,540,4,541,4,542,1,543,2,545,1,552,3,553,3,573,1,583,1,595,2,596,5,597,5,598,4,599,1,600,2,618,1,639,2]
,"including":[1,1,123,1,204,1,246,1,311,1,355,2,384,1,395,1,410,1,492,1,512,1,520,1,607,1,609,1]
,"package":[2,1,234,1,295,1,305,4,318,4,323,1,332,1,366,1,451,4,452,3,453,4,454,4,455,2,456,1,457,1,460,3,471,1,472,2,475,1,476,1,477,1,479,1,487,1,490,1,493,1,496,1,499,1,503,1,512,1,517,1,519,2,520,3,540,1,541,2,543,3,544,1,545,1,547,1,550,1,551,1,554,2,556,1,557,1,589,1,595,1,598,1,601,1,606,1,621,1,622,2,624,1,625,1]
,"find":[2,1,5,1,6,1,12,1,13,2,17,1,19,1,23,1,26,1,33,1,38,1,46,1,47,1,55,1,76,1,85,1,98,1,102,1,109,1,123,1,128,1,131,1,132,1,140,1,147,1,159,1,196,1,202,1,207,1,210,1,212,1,215,1,223,1,295,1,305,1,309,1,314,1,320,2,336,1,351,1,353,1,358,1,371,1,378,1,382,1,384,2,395,2,405,1,410,2,416,1,426,1,427,2,437,1,442,1,444,1,461,1,517,1,531,1,553,1,554,1,576,2,584,1,598,1,614,1,618,1,621,1]
,"following":[2,1,4,1,5,1,6,1,8,1,9,1,13,1,18,1,19,1,23,1,24,1,25,1,26,1,27,3,28,1,29,2,30,1,31,1,33,1,36,1,37,1,38,1,39,6,41,1,42,2,45,4,46,1,47,1,48,2,49,1,51,2,52,10,53,2,54,1,55,1,56,4,57,1,64,2,71,1,72,2,75,4,76,2,79,1,81,1,82,2,83,2,84,3,85,1,87,2,90,1,91,1,98,1,102,1,104,2,105,1,106,4,108,2,109,1,110,1,113,1,114,1,115,1,120,2,121,4,122,1,123,1,127,5,128,1,132,1,133,2,134,2,135,7,136,2,137,1,138,2,139,1,140,1,142,1,143,1,144,1,146,1,147,1,148,1,150,1,157,2,159,1,196,2,197,1,198,1,200,1,201,3,202,1,203,3,204,1,205,3,206,1,207,1,208,1,209,2,210,1,212,1,216,1,217,1,218,2,220,1,221,1,222,4,223,3,224,1,225,2,226,1,227,1,230,2,231,1,232,1,233,2,234,1,236,1,237,2,238,1,243,2,244,1,245,3,248,2,251,2,254,2,257,1,259,1,260,1,263,2,265,2,266,3,267,1,268,1,270,1,271,1,273,2,274,1,275,3,277,2,279,1,280,2,281,2,282,1,283,1,284,2,285,2,287,1,288,2,289,1,290,1,292,1,297,1,298,2,299,1,300,1,303,1,304,1,307,1,308,1,309,1,310,2,311,1,312,2,314,1,316,3,318,2,319,1,320,1,321,1,322,1,323,1,324,2,327,1,328,1,331,1,332,1,333,1,334,3,336,8,338,4,339,2,340,5,341,5,342,3,343,1,345,4,346,1,347,2,350,1,352,1,353,1,354,1,355,1,356,4,358,1,360,1,362,1,363,1,364,2,365,1,366,4,367,2,369,8,370,1,371,1,372,10,373,3,375,5,376,1,377,4,378,1,380,1,382,1,383,1,384,3,385,3,386,4,387,2,388,2,389,2,390,3,391,3,392,3,393,2,394,7,395,2,396,4,397,4,398,8,399,2,400,3,402,4,403,1,405,1,407,4,409,7,410,6,412,6,413,3,414,4,415,4,416,1,418,1,420,1,421,1,422,5,424,1,425,5,426,1,427,2,428,1,429,1,430,1,431,1,432,1,433,1,434,1,435,1,436,3,437,1,439,8,440,2,443,1,444,1,446,1,451,1,452,1,453,2,454,3,455,1,456,1,459,1,462,2,463,1,464,2,465,2,466,2,467,1,468,1,469,1,471,1,472,1,473,3,474,1,475,1,481,6,482,12,483,2,484,4,485,1,486,5,489,27,492,6,495,4,498,5,499,1,500,3,501,1,504,5,506,1,507,2,508,1,514,1,515,2,516,3,518,1,520,1,521,1,523,2,524,1,525,1,527,1,531,1,534,3,540,2,541,1,542,1,544,2,545,2,546,1,547,1,548,1,550,1,551,1,552,1,553,2,554,1,555,1,557,4,558,2,559,2,560,2,561,1,562,1,563,1,564,3,565,1,567,2,568,4,571,6,572,2,574,1,576,5,577,2,578,1,580,1,583,3,584,1,587,1,590,1,595,1,596,5,597,8,599,1,600,1,601,1,603,1,607,2,608,2,612,1,613,1,617,1,618,1,619,1,621,1,624,4,625,1,626,1,627,1,628,1,629,1,630,1,631,1,633,2,635,1,639,1,641,1,643,1]
,"topics":[2,1,6,1,13,1,19,1,23,1,26,1,33,1,38,1,46,1,47,1,53,1,55,1,76,1,85,1,98,1,102,1,109,1,123,1,128,1,132,1,140,1,147,1,159,1,196,1,202,1,207,1,212,1,303,1,314,1,320,1,353,1,358,1,371,1,378,1,382,1,405,1,416,1,426,1,437,1,452,1,456,1,471,1,475,1,499,1,540,1,546,1,551,1,555,1,557,1,559,1,561,1,565,1,574,1,578,1,596,1,597,1,601,1,617,1,621,1,626,1,631,1]
,"supported":[2,1,4,2,12,1,40,2,80,1,122,4,136,1,248,1,296,1,308,1,454,2,463,2,464,1,465,1,466,1,467,1,468,1,469,1,477,3,533,1,584,1,596,2,597,2]
,"databases":[2,1,4,2,133,1,541,1]
,"distribution":[2,1,5,1,474,1]
,"structure":[2,1,3,1,5,1,15,1,20,1,135,1,188,1,216,1,232,1,283,1,291,1,293,1,315,1,453,1,457,2,476,1,478,1,489,1,504,7,506,1,507,1,533,1,534,2,559,1,561,2,562,1,569,1,582,1,600,1]
,"visual":[3,1,428,1,600,1]
,"environment":[3,1,75,1,110,1,211,1,213,1,214,1,215,2,307,1,308,2,524,1,595,1,600,1,612,2]
,"graphic-intensive":[3,1]
,"applications":[3,1,7,3,9,1,10,1,20,1,122,1,211,1,212,1,213,2,215,1,216,2,223,1,224,1,288,1,295,2,451,1,452,1,453,1,455,3,457,6,458,1,459,1,460,1,486,1,502,2,503,1,507,2,514,1,518,1,519,2,520,1,540,1,556,1,568,1,596,1,597,1,601,1,606,2,610,1,622,1,624,1,644,1]
,"lets":[3,1,12,2,17,1,57,2,58,1,64,1,65,1,73,3,74,3,88,3,117,1,154,1,195,1,201,1,276,1,327,1,328,1,329,1,330,1,331,1,332,1,333,1,341,1,428,1,429,1,430,1,432,1,520,1,541,1,549,1,559,1]
,"create":[3,2,6,1,8,1,10,4,38,1,49,1,73,2,84,1,87,2,88,4,93,1,105,1,106,1,121,3,130,1,133,1,138,1,144,1,156,1,157,1,158,1,179,3,201,1,202,1,207,1,211,5,212,1,213,1,216,2,218,3,223,2,224,4,225,1,226,3,228,2,230,2,231,1,232,5,233,4,236,2,242,1,243,1,244,2,250,2,253,1,264,1,268,1,269,1,278,1,282,4,283,1,286,1,287,1,289,1,291,3,295,2,297,1,298,4,309,1,314,2,316,4,320,1,322,1,323,2,335,1,336,11,337,1,338,2,339,7,340,6,342,1,345,2,348,2,349,1,362,2,363,6,364,6,365,6,368,9,369,9,372,9,373,1,377,1,381,1,385,1,386,1,387,1,388,1,389,1,390,1,391,1,392,1,393,1,394,5,396,1,397,1,398,3,399,3,400,2,402,2,410,2,419,1,422,4,425,4,436,3,438,2,449,1,450,1,451,1,461,1,463,1,465,1,472,2,474,1,489,1,498,2,517,1,518,1,524,1,531,1,533,2,535,1,536,6,537,2,538,1,540,1,541,1,554,1,558,1,564,1,583,1,597,1,598,1,600,2,601,1,607,1,610,1,611,1,623,1,627,1,635,4,638,1,640,1,641,1,643,2]
,"graphical":[3,6,7,1,11,2,20,1,45,1,87,1,129,1,213,1,328,1,331,4,332,4,334,5,339,1,354,2,355,2,360,5,362,1,363,1,364,1,365,2,367,2,368,2,370,3,372,1,379,5,382,1,383,4,398,3,399,1,400,2,402,3,403,5,404,1,407,4,417,1,420,1,421,3,423,1,424,3,432,1,440,3,457,1,540,1,544,1,554,1,578,1,581,1,612,1]
,"business":[3,1,16,1,453,2,455,1,479,1,487,1,490,1]
,"link":[3,1,14,1,30,2,88,1,142,1,189,1,193,8,223,1,234,1,241,1,258,2,274,1,294,1,303,4,304,3,305,2,306,1,307,1,308,3,454,1,455,6,457,1,458,3,467,4,473,1,475,1,476,2,477,1,478,4,479,3,480,4,481,5,482,34,483,1,484,2,486,19,487,6,488,4,489,65,490,8,491,11,492,23,495,5,498,5,501,1,503,1,504,10,506,1,507,5,508,1,509,1,517,2,521,2,535,1,595,6,630,2,645,6]
,"provide":[3,3,5,5,14,1,15,2,20,1,29,1,52,2,53,1,56,1,57,1,71,1,94,1,207,1,213,1,224,1,248,1,457,1,458,2,460,1,476,1,484,1,491,1,504,2,543,1,553,1,557,1,576,2,577,1,585,1,586,1,624,1,629,1,631,1,633,1,643,1,644,1]
,"intuitive":[3,1]
,"organized":[3,1,483,2,582,1]
,"libraries":[3,6,5,4,29,1,215,1,306,1,473,1,595,1]
,"conjunction":[3,1,77,1,80,1,161,1,440,1,592,1]
,"accompanied":[3,1,5,1]
,"schema":[3,6,15,3,20,2,22,4,23,2,24,8,25,6,36,2,37,1,43,1,72,1,84,3,89,1,97,1,105,2,107,1,135,3,141,1,144,2,156,5,157,1,158,1,211,2,215,1,216,8,223,3,232,2,233,4,244,2,250,1,298,1,314,5,315,8,316,10]
,"editor":[3,11,57,6,138,1,141,1,144,1,146,1,161,3,211,2,212,1,213,1,215,2,216,7,222,1,223,2,226,1,227,1,233,2,244,1,261,3,282,1,284,5,288,2,314,5,315,5,316,4,333,1,340,8,520,1]
,"(sql":[3,1]
,"editor)":[3,1,216,1]
,"needed":[3,1,14,1,15,1,27,1,43,1,73,2,75,1,157,5,161,2,187,8,189,8,218,1,226,1,234,2,304,1,316,2,369,1,376,1,383,1,394,1,446,1,472,2,480,1,481,1,482,1,485,1,488,1,489,1,491,1,492,1,494,2,497,1,504,1,507,1,516,1,553,1,560,1,569,1,586,1]
,"handles":[3,1,34,1,76,1,108,1,243,1,298,1,323,1,368,1,377,1,577,2,588,1,593,1,619,1]
,"drawing":[3,1,8,1,161,2,331,10,334,1,360,1,370,1,379,12,380,12,382,1,383,3,386,3,405,1,406,1,407,5,421,3,424,4,440,3,453,4,454,1,457,4,458,2,460,2,466,5,476,1,480,1,481,4,482,9,484,6,485,3,486,1,487,1,489,9,490,2,491,2,492,2,493,2,494,1,495,2,496,1,498,2,511,1,512,1,513,1,515,2,531,1,534,1,543,1,553,1]
,"graphics":[3,1,13,1,18,2,216,1,222,2,322,1,323,1,336,1,460,2,519,2,521,2,540,1,582,1,600,1,635,1]
,"functionality":[3,1,8,1,211,1,215,1,216,2,223,1,519,1,533,4,534,3,538,1,543,1]
,"required":[3,1,6,1,10,2,25,1,28,1,35,1,58,1,75,2,87,2,90,1,108,1,111,1,112,1,117,1,119,2,127,2,132,1,133,1,197,2,200,1,224,1,227,1,228,1,229,1,246,1,274,1,304,1,316,4,336,1,348,1,364,1,369,1,394,1,436,1,439,3,440,3,443,2,458,1,487,1,553,1,559,1,592,1,639,1]
,"external":[3,3,7,4,20,1,28,6,215,1,541,1]
,"refer":[3,1,8,1,10,1,16,1,20,1,24,1,27,1,28,1,158,1,161,1,163,2,165,2,167,1,169,1,171,2,173,2,175,2,177,1,179,1,181,1,183,2,185,2,187,1,189,1,191,3,193,1,195,1,205,1,215,1,258,1,304,1,308,1,310,1,311,1,312,1,481,1,489,1,492,1,495,1,498,1,536,1,537,1,538,1,595,1,606,1,619,1]
,"appropriate":[3,1,10,2,22,1,28,1,39,1,40,1,52,1,58,1,75,1,87,1,89,1,90,1,92,1,95,1,105,1,109,1,127,1,129,1,274,1,282,3,315,1,457,2,459,1,460,1,462,1,475,1,476,4,482,3,487,1,489,4,492,2,493,2,495,1,498,1,500,1,501,1,504,1,516,1,517,1,524,1,552,1,557,3,572,1,582,1,600,1,618,1,623,1,641,2,642,1]
,"editors":[3,1,5,1,57,2,644,1]
,"provided":[3,3,5,1,6,1,7,1,27,1,48,1,64,1,116,1,139,1,200,1,216,1,222,1,236,1,246,1,274,1,283,1,289,1,314,1,316,3,322,1,361,2,362,1,372,2,394,1,397,1,406,1,411,1,415,1,451,1,453,2,454,2,463,1,464,1,465,1,466,1,467,1,468,1,469,1,472,2,473,1,479,1,482,1,487,1,495,1,498,2,500,1,502,1,504,2,505,1,506,1,512,1,516,1,517,2,550,1,553,1,557,3,571,2,577,4,598,1,610,1,624,4]
,"called":[3,1,21,1,27,1,28,1,39,18,46,1,51,3,52,14,53,1,54,1,56,1,64,1,65,1,73,2,74,2,80,1,82,1,84,1,119,1,120,2,121,2,124,1,133,1,135,3,146,5,147,1,148,1,149,1,150,3,157,5,177,2,207,1,217,1,222,1,236,1,273,1,298,1,339,1,360,1,361,1,364,1,370,1,372,1,376,3,377,10,379,1,383,1,394,1,402,2,406,2,409,1,411,1,420,1,436,1,439,2,440,5,453,2,457,1,462,2,466,5,480,5,486,2,498,1,504,2,516,2,552,1,553,1,560,3,568,4,571,4,597,1,600,1,605,1,610,1,618,1,619,1,640,1,641,2,643,1]
,"powerful":[3,1,213,1,457,1,460,1]
,"enables":[3,1,15,1,18,1,57,1,77,1,87,2,91,1,99,1,127,1,216,1,274,1,320,1,323,1,398,1,411,1,521,1,595,1]
,"portable":[3,1,612,1]
,"interface":[3,4,6,1,7,2,8,1,11,1,14,1,15,2,17,1,20,5,25,1,29,4,34,1,36,2,51,3,55,1,56,2,131,1,157,1,213,1,216,1,319,1,320,1,322,1,452,1,455,2,474,1,501,1,541,3,551,2,553,1,554,1,571,2,583,1,635,2]
,"allows":[3,2,24,2,54,1,79,1,94,1,105,1,107,1,127,1,135,1,145,1,155,1,157,1,169,1,187,1,189,1,201,2,213,1,216,2,223,1,224,1,225,1,228,1,232,1,255,1,265,1,273,1,289,2,291,2,325,1,326,1,332,1,333,1,337,1,354,1,361,1,369,1,372,1,400,1,402,4,410,2,411,4,415,1,427,6,431,1,432,1,433,2,435,2,436,1,440,2,453,1,454,7,460,1,462,1,464,1,465,1,466,1,467,1,468,1,479,1,486,2,489,3,490,2,496,1,498,2,502,1,505,2,508,1,516,1,520,1,527,1,537,3,538,2,540,1,547,1,548,1,551,1,552,1,560,3,563,1,566,1,568,1,576,2,577,1,582,1,583,2,584,1,586,1,590,2,595,1,596,2,597,3,598,1,600,1,614,1]
,"construct":[3,1,78,1,241,1,321,1,369,1,586,1]
,"predefined":[3,2,17,1,75,2,80,1,127,1,149,1,156,3,158,3,163,2,165,2,167,2,189,1,200,2,207,2,208,1,209,3,215,1,218,1,222,1,223,2,261,1,264,1,279,1,282,11,283,6,284,1,289,3,291,1,294,1,322,1,324,1,355,1,384,1,395,1,402,1,403,1,410,1,411,1,427,2,438,2,460,1,462,1,491,1,500,1,518,2,520,2,522,1,524,1,540,2,541,6,543,1,544,1,545,1,547,1,551,2,552,1,553,2,554,1,557,7,559,2,560,3,572,3,573,1,576,1,598,2,601,1,621,2,623,2,625,5,626,1,627,2,630,6]
,"buttons":[3,1,10,1,11,1,64,4,124,1,142,2,144,1,156,2,157,1,158,2,172,1,174,1,175,8,189,1,216,1,222,4,223,3,227,2,244,1,246,2,256,1,257,3,274,1,275,1,276,1,283,1,289,1,291,1]
,"scroll":[3,1,97,1,161,9,169,6,187,11,189,12,243,1,247,1,324,1,332,5,339,1,354,1,356,3,427,3,429,3,430,2,436,2,437,3,438,15,439,23,440,8]
,"bars":[3,1,11,1,243,1,339,8,355,4,359,1,360,3,364,2,367,1,383,4,390,4,391,4,399,1,403,1]
,"menus":[3,1,154,2,222,2,232,1,282,1,286,1,288,1,289,1,291,2]
,"simple":[3,3,215,1,227,1,250,1,314,1,315,1,346,1,353,1,363,2,364,2,365,1,367,1,369,3,377,1,458,1,501,1,502,1,513,1,516,1,518,1,535,1,537,1,540,1,543,1,548,1,553,1,555,1,557,1,569,1,600,1,607,1,639,1,642,1]
,"drag-and-drop":[3,1,159,1,223,3]
,"operations":[3,1,17,1,27,1,29,1,105,1,122,1,156,3,157,2,213,2,232,1,241,2,268,1,279,1,281,3,297,1,376,2,428,1,440,1,456,1,460,1,461,1,462,2,465,1,481,1,503,1,553,1,564,1,569,1,596,2,597,2,607,1,639,1,640,1]
,"generating":[3,1,105,1,142,1,223,1,294,2,540,1]
,"code":[3,1,8,2,9,1,10,4,17,1,25,1,27,3,29,3,30,1,45,2,48,1,49,1,51,1,52,1,54,1,64,1,79,1,83,1,84,3,106,1,119,2,120,1,121,3,122,1,133,1,134,1,135,3,136,2,137,2,138,2,146,1,198,1,200,2,201,2,210,2,213,1,225,2,227,10,229,1,230,2,283,1,284,4,294,2,332,1,333,1,354,1,364,2,365,2,366,4,369,6,372,5,373,1,377,4,385,1,386,1,387,1,388,1,389,1,390,1,391,1,392,1,393,1,394,6,396,1,397,1,398,6,400,2,402,4,407,3,409,2,410,2,413,2,414,1,415,2,436,3,439,5,440,3,460,1,472,1,473,3,480,3,488,3,489,1,491,3,494,3,497,3,498,2,500,3,516,3,544,1,545,2,547,1,548,1,550,1,552,1,553,4,558,2,559,1,560,4,562,2,564,1,571,1,577,2,587,1,596,1,597,1,598,1,599,1,600,2,607,2,608,2,611,1,612,1,618,2,627,1,629,1,633,3,639,2,640,1,641,2,642,1,643,12,644,1]
,"program":[3,1,14,1,24,1,25,1,75,1,229,1,294,2,457,1,606,1,608,1,610,1,628,1]
,"fully":[3,1,520,1,572,1,597,1]
,"documented":[3,1,27,1]
,"user\u2019s":[3,1,51,1,157,1,191,1,216,1,230,1,265,1,366,1,460,1,545,1,560,1,567,1,595,1,608,1,634,1]
,"based":[3,1,42,1,51,1,54,1,88,1,99,1,121,2,124,1,142,1,213,2,223,1,233,1,244,1,253,1,276,1,298,1,336,1,340,2,341,1,345,1,346,1,352,1,360,1,376,2,411,1,458,1,469,1,491,1,512,1,586,1,595,2,597,1,598,2,600,2,607,1,632,2,633,1]
,"adapted":[3,1,87,2,582,1]
,"referred":[3,1,10,1,11,1,15,1,21,1,24,1,110,1,163,1,167,1,171,1,173,1,185,1,187,1,372,1,457,2,520,1,598,1]
,"palette":[3,3,42,1,47,1,141,3,144,1,161,4,163,2,222,2,223,13,227,4,228,1,230,3,243,1,244,4,245,2,250,2,251,1,253,1,254,1,267,6,275,1,280,1,283,1,288,1,289,1,316,3,322,8,323,2,332,9,336,1,339,2,341,1,342,1,345,2,348,2,369,4,383,7,384,2,385,1,386,6,387,1,388,1,389,1,390,1,392,6,394,7,396,8,397,4,401,2,402,6,403,13,409,1,410,4,418,1,421,4,424,3]
,"interact":[3,1,10,1,21,1,354,1,356,1,426,1,436,2,503,1,512,1]
,"special":[3,1,26,1,47,1,57,1,79,1,94,1,202,1,206,1,309,1,313,1,377,1,453,1,481,2,486,4,498,1,500,1,504,1,510,1,511,1,517,1,539,1,595,1,596,1,597,1]
,"included":[3,1,75,1,121,1,136,3,158,2,208,4,303,1,529,2]
,"need":[3,1,10,1,22,1,24,1,29,1,36,1,45,2,82,1,104,1,113,1,126,1,127,2,212,1,222,1,227,1,243,1,250,2,252,2,255,2,258,2,265,2,266,1,271,1,282,2,288,1,290,1,291,1,294,1,295,1,307,2,308,2,314,1,321,1,336,8,338,2,339,1,340,4,345,1,346,1,348,2,349,3,350,1,358,1,362,1,369,1,377,1,383,1,402,2,403,1,440,1,450,4,453,1,457,1,460,1,461,2,462,2,465,1,467,1,468,1,476,1,486,2,489,2,500,4,504,3,507,1,512,1,515,1,521,2,524,1,534,1,535,1,537,2,538,2,539,1,548,1,554,1,595,2,597,1,600,1,611,1]
,"table-form":[3,1]
,"stored":[3,1,20,1,28,1,35,1,52,1,57,1,64,2,110,1,157,2,216,2,227,1,232,2,250,1,315,1,361,1,364,1,370,3,372,6,375,2,383,1,394,1,402,7,403,2,414,1,415,1,427,1,500,2,509,1,534,1,537,1,544,1,550,1,568,1,569,1,571,1,576,3,580,1,582,1,585,1,613,1,635,2]
,"therefore":[3,1,8,1,24,1,25,2,27,1,28,2,35,1,52,1,83,1,97,1,100,1,135,1,197,1,227,1,243,1,336,3,338,1,343,1,345,1,351,1,370,1,376,1,419,1,455,1,476,1,480,1,485,1,486,1,487,3,489,2,495,1,504,2,510,1,512,1,545,1,568,1,606,1,611,1,622,1,642,1]
,"edit":[3,1,25,1,57,1,64,1,87,2,121,2,124,2,142,1,144,2,154,3,158,1,175,3,187,2,189,3,191,2,208,1,211,1,214,1,216,2,222,3,223,3,224,1,225,1,226,3,227,1,228,3,230,3,243,1,244,2,245,1,246,1,254,1,257,2,262,1,263,2,267,1,271,1,273,1,274,3,276,2,282,1,284,1,288,2,299,1,300,2,314,1,315,1,316,1,317,6,524,1,530,1]
,"definitions":[3,1,227,4,315,1]
,"drop":[3,1,72,1,105,1,121,1,141,1,144,2,151,1,187,1,189,1,223,3,243,1,244,1,288,1,317,2,322,1]
,"located":[3,1,15,5,21,1,28,1,30,2,34,1,50,1,54,1,90,1,146,1,156,1,226,1,242,1,293,3,294,1,307,1,308,2,364,1,365,2,366,1,369,3,377,1,394,2,398,1,402,2,411,2,415,1,423,1,439,1,440,2,560,1,562,1,600,1,638,1]
,"oracle":[4,1,84,1,107,1,108,1,117,1,118,1,121,2,133,1,136,1,137,1,295,2,296,1,298,1,308,1,520,1,521,1,522,2,523,1,535,7,536,5,537,7,538,2,539,1,543,1,560,1,573,1,595,16,596,23,597,21]
,"informix":[4,1,84,1,121,1,133,1,136,1,308,1]
,"sybase":[4,1,117,1,133,1,308,2]
,"ole":[4,1,136,1]
,"(only":[4,2]
,"windows)":[4,2]
,"odbc":[4,5,133,1,136,1,157,1,316,1]
,"note":[4,2,8,1,10,2,12,1,20,1,22,1,24,2,25,1,27,1,29,1,32,2,39,3,40,1,44,1,45,1,48,1,51,1,52,1,53,1,57,4,59,1,62,1,64,1,83,1,84,1,87,1,91,1,95,1,105,2,110,1,112,1,117,1,118,1,120,1,121,2,122,1,126,1,127,3,130,1,135,2,136,1,150,1,156,2,157,1,204,1,212,1,219,1,222,2,223,1,225,1,237,1,240,1,243,2,245,1,247,1,255,1,257,1,258,1,260,2,262,1,263,1,264,1,265,1,271,2,273,1,280,2,283,3,288,4,289,1,290,1,291,1,292,1,293,1,296,1,307,1,311,1,316,1,321,1,328,1,332,1,336,1,340,1,364,2,365,1,366,1,373,1,375,3,377,1,380,1,383,1,385,1,386,1,387,1,388,1,389,1,390,1,391,1,392,1,393,1,394,1,395,2,400,1,402,1,407,1,409,1,412,1,419,1,427,2,440,2,449,1,450,1,460,1,462,1,466,1,467,1,468,1,469,1,481,1,482,3,484,1,486,2,489,6,492,3,495,1,498,1,503,1,504,3,505,1,506,1,507,3,510,1,515,2,516,1,517,1,520,1,524,2,526,2,530,1,533,1,535,1,537,1,543,1,545,1,548,1,553,2,557,1,560,1,563,1,583,1,596,3,597,4,600,1,623,1,636,1]
,"fetching":[4,1,112,1,117,1,122,1]
,"column":[4,1,15,2,24,35,27,4,36,1,37,2,43,1,44,3,45,1,47,2,49,2,52,4,56,4,57,18,58,1,60,1,68,1,69,1,70,1,71,1,86,2,87,18,88,5,89,5,90,15,91,12,92,3,93,3,94,3,95,15,96,4,97,2,99,11,100,6,105,13,106,1,121,6,124,1,125,2,126,1,127,10,128,1,129,9,130,14,131,2,135,5,154,7,156,53,157,6,158,37,161,6,163,15,165,3,167,18,169,3,171,13,173,13,179,3,182,1,183,4,185,13,187,16,189,15,193,24,195,70,209,4,210,6,216,1,219,2,243,13,245,1,246,17,247,5,248,2,250,2,251,1,252,12,253,2,255,7,257,2,258,5,273,2,274,3,275,4,276,1,280,4,281,3,282,5,298,1,300,1,316,10,476,1,537,1,538,1,562,3,567,2,577,2,586,3,587,1,597,13]
,"fail":[4,1,29,1,110,1,130,1,131,1,479,1,642,1]
,"connected":[4,1,20,1,22,1,24,1,45,1,46,1,47,1,49,2,51,2,56,2,57,3,58,1,59,1,68,1,69,1,70,1,86,1,87,1,88,1,89,1,91,2,93,1,94,1,95,4,96,1,101,1,102,1,120,2,124,2,127,5,130,1,134,2,139,1,141,2,143,2,152,1,154,2,156,1,157,7,158,1,161,1,163,2,165,2,167,2,169,2,171,2,173,2,175,1,181,1,183,2,185,2,187,2,189,1,193,2,194,1,195,7,216,1,220,1,223,5,244,1,251,1,252,1,255,1,256,2,257,1,274,1,276,3,282,1,283,3,293,1,317,2,322,1,332,1,342,1,364,2,453,2,457,1,479,3,480,1,481,2,487,1,489,2,490,3,493,1,496,1,517,8,536,2]
,"server":[4,2,15,2,108,2,110,1,116,1,117,2,120,3,122,6,136,2,244,1,308,1,524,1,535,1,543,1,551,1,552,1,553,1,568,1,595,1]
,"versions":[4,1,227,1,304,1,402,2,595,1]
,"driver":[4,2,133,2,136,4,536,2]
,"return":[4,1,31,1,40,8,42,1,51,1,73,2,82,2,84,2,120,2,122,1,135,1,175,2,201,3,246,3,289,3,340,1,397,1,409,1,454,1,464,1,465,1,466,1,467,1,468,1,469,1,470,1,500,1,504,1,505,1,509,3,517,1,544,1,548,4,550,3,552,2,553,9,557,2,560,2,562,1,568,4,571,1,572,1,577,10,585,4,587,1,588,1,591,3,592,1,594,2,596,1,597,1,616,1,618,2,635,2,641,5,642,3,643,2,644,2]
,"sql_ss_time2":[4,1]
,"mapping":[4,1,7,2,24,3,25,1,56,4,57,1,60,1,69,1,70,1,87,1,88,2,105,1,127,1,156,3,158,3,163,2,167,2,171,2,173,2,185,2,187,2,217,1,219,1,241,2,250,1,252,3,255,2,346,1,370,2,518,1,548,1,554,1,579,1,582,1,601,1,622,1,624,1,631,1,632,1]
,"non-standard":[4,2]
,"db2":[4,1,308,1]
,"check":[4,1,7,1,12,1,17,1,28,1,52,1,56,1,72,1,79,1,88,1,122,1,134,1,145,4,146,2,157,1,165,2,167,3,169,2,171,2,187,9,189,11,222,1,243,3,257,1,271,1,273,1,289,3,315,1,321,2,327,1,328,1,333,1,336,1,337,1,338,1,339,1,340,1,341,1,463,1,474,1,485,2,508,1,511,1,517,2,528,1,529,3,530,1,534,1,536,1]
,"compatibility":[4,1,5,1,305,1]
,"particular":[4,1,5,1,16,1,21,1,27,1,29,1,47,1,52,1,63,1,89,1,90,2,91,1,125,1,127,1,129,1,141,1,202,1,207,1,215,1,222,2,246,1,248,1,257,1,309,1,321,1,322,1,324,1,330,1,436,1,454,1,459,1,462,2,463,1,476,5,481,1,489,1,492,1,495,2,498,2,500,2,505,1,561,1,577,1,588,1,593,1,595,2,600,2,602,1,642,1]
,"directly":[4,1,22,1,51,1,75,3,84,1,87,2,89,1,129,1,223,1,224,1,226,1,293,1,305,1,346,1,364,1,372,1,373,2,380,1,383,2,394,2,396,2,397,1,398,2,399,1,403,1,414,1,422,1,424,1,425,1,427,1,440,2,461,2,479,1,481,2,482,2,486,3,502,1,503,1,504,3,505,1,506,1,576,2,577,1,583,1,619,1,626,1,627,1]
,"support":[4,1,45,1,116,1,117,1,121,1,122,2,124,1,201,1,295,1,453,1,454,1,460,1,469,1,477,1,481,1,489,1,492,1,495,1,498,1,507,1,560,1,561,1,618,1,638,2,639,2,640,1,641,1,642,1,643,2,644,2]
,"installed":[5,1,223,1,303,1,304,2,307,1,308,1,535,2,595,2]
,"machine":[5,1,535,2]
,"several":[5,1,71,1,72,1,94,1,108,1,218,1,237,1,257,1,289,1,318,1,322,1,330,1,332,3,335,1,336,4,340,3,341,1,350,1,360,2,361,1,366,1,367,3,372,1,374,2,375,1,376,1,383,2,398,2,400,2,402,1,403,1,406,1,411,2,412,2,413,1,415,1,427,1,428,1,436,1,440,2,443,1,454,1,458,1,464,1,469,1,479,2,480,1,481,1,485,1,487,3,488,1,496,1,504,1,515,1,517,1,533,1,534,1,557,1,560,1,569,1]
,"directories":[5,3,225,3,227,2,304,3,523,1,533,1]
,"created":[5,2,8,3,19,1,25,2,27,2,29,1,41,1,42,1,48,1,49,2,58,1,73,1,87,1,89,1,96,1,103,2,120,1,121,2,127,1,133,3,134,1,135,2,137,1,156,1,157,2,193,2,199,1,200,1,216,1,224,1,226,1,228,1,230,1,236,2,238,1,243,4,250,1,262,1,273,2,274,1,290,1,291,1,294,2,322,1,323,2,332,1,336,9,337,1,339,1,340,2,341,1,342,1,346,2,348,1,349,1,354,1,362,6,363,4,364,4,365,2,367,1,368,20,369,8,372,7,373,2,375,1,377,3,381,1,394,2,395,9,397,1,398,4,399,3,400,1,412,6,418,1,422,1,425,1,428,1,432,1,436,1,439,1,488,1,489,1,504,1,505,1,508,1,516,2,519,1,520,1,537,3,538,3,548,1,549,2,553,2,557,1,571,1,576,2,583,1,631,1]
,"dedicated":[5,1,7,1,16,1,20,1,28,1,33,1,213,1,318,1,323,1,353,1,360,1,364,1,368,1,372,1,376,1,377,1,379,1,383,1,394,2,402,2,406,1,409,1,411,1,420,1,436,1]
,"readme":[5,1,304,2,305,1,307,1]
,"file":[5,1,10,2,28,1,42,3,57,2,75,1,136,3,147,1,150,9,154,2,157,3,179,8,181,1,182,1,183,2,189,1,193,2,195,1,218,1,222,2,224,3,225,15,226,5,227,4,229,6,230,6,232,1,235,1,236,6,238,4,239,1,240,4,243,2,249,3,258,2,264,1,267,3,269,1,271,2,273,2,277,2,280,1,283,3,284,5,287,3,288,3,289,5,290,9,291,1,292,3,294,2,299,1,300,1,302,1,303,1,304,2,305,1,306,2,307,3,308,3,316,2,322,1,323,1,332,1,336,1,364,1,365,1,366,2,369,1,372,1,377,1,394,1,398,2,402,1,411,2,415,1,436,1,439,1,440,2,443,3,449,1,473,2,474,1,481,1,520,1,523,2,524,2,525,1,526,17,528,5,529,6,530,4,532,8,533,7,534,13,536,3,537,2,539,7,540,2,541,1,542,1,545,1,548,1,550,1,552,1,553,13,554,5,557,23,558,1,560,4,570,1,571,1,572,1,573,3,575,9,576,7,577,14,578,1,579,2,580,2,582,2,583,1,584,2,585,2,586,5,587,1,588,2,590,6,591,1,592,2,593,2,594,2,598,5,599,1,600,6,607,1,608,1,609,3,633,2,635,2,639,3,640,1,643,2]
,"advised":[5,1]
,"read":[5,1,24,1,87,1,110,2,156,1,157,1,158,2,161,3,163,1,169,1,173,1,187,1,193,1,195,1,227,1,248,1,258,1,284,1,338,1,340,1,446,2,467,1,468,1,469,1,472,1,500,5,501,2,506,1,507,1,510,1,540,2,541,3,542,2,545,1,549,1,551,2,552,7,553,15,554,1,556,1,557,2,560,2,572,1,574,1,576,5,577,1,578,1,582,1,583,4,586,1,588,1,589,1,590,1,593,1,599,1,631,1,632,1,635,1,643,3]
,"bin":[5,1,284,1]
,"subdirectories":[5,7,582,1]
,"tools":[5,1,12,1,141,1,156,1,216,1,222,1,223,1,233,1,234,1,263,1,264,1,288,1,298,1,315,2,455,1,474,1,487,1,490,1]
,"(rogue":[5,1,58,1]
,"static":[5,2,37,1,52,1,54,2,73,3,74,2,83,1,136,1,200,1,439,1,440,2,459,1,553,3,560,1,568,1,611,1,615,1,623,2,625,1,627,2,630,1,636,1,639,1,640,1,643,9,644,3]
,"prototype":[5,1,332,1]
,"tools)":[5,1]
,"directory":[5,1,38,1,40,1,41,3,225,5,226,1,227,2,229,1,234,1,249,1,258,1,277,1,283,1,284,1,292,1,304,1,305,1,306,1,307,4,308,3,316,1,321,1,336,1,340,1,345,1,348,1,364,1,365,1,366,1,369,1,372,1,377,1,394,1,398,1,402,1,411,2,415,1,436,1,439,1,440,2,450,1,473,1,474,1,520,2,525,1,530,1,532,1,534,1,535,1,582,4,598,3,600,2,608,2,634,2,638,1]
,"tool":[5,1,20,1,142,1,156,1,174,1,189,1,215,1,239,1,240,1,577,1,635,1]
,"<systems>":[5,1]
,"<database>":[5,1]
,"specific":[5,1,12,1,15,1,16,1,20,1,28,2,33,1,45,1,48,1,53,1,72,2,130,1,158,2,161,2,165,2,167,2,171,2,177,2,187,2,189,2,191,2,200,1,202,1,207,1,216,1,218,5,243,1,283,1,309,1,316,1,323,1,324,1,332,5,334,7,340,1,342,1,367,1,368,1,375,1,377,7,383,1,385,1,386,1,390,1,391,1,392,1,394,3,398,1,401,1,402,7,443,1,450,2,477,1,481,4,486,2,489,4,492,4,495,4,498,4,500,1,503,1,545,1,549,1,551,1,554,1,557,1,569,1,570,1,571,1,572,1,575,1,577,1,580,1,590,1,595,2,596,1,597,1,601,1,619,1,623,1,638,2,640,1,643,4,644,1]
,"target":[5,1,82,1,524,1,526,2,540,1,541,2,542,1,547,3,548,2,552,1,554,2,557,2,632,1]
,"systems":[5,1,28,1,40,2,116,1,121,2,122,2,248,1,367,1,525,2,543,1,548,1,575,1,622,1,631,2]
,"description":[5,2,17,1,25,1,29,1,80,1,119,1,145,1,146,1,154,2,155,1,156,7,157,6,158,7,161,3,163,4,165,4,167,5,169,3,171,5,173,4,175,3,177,2,179,4,181,2,183,3,185,4,187,5,189,5,191,4,193,5,195,11,216,1,218,1,223,3,230,1,256,1,310,1,311,1,312,1,394,1,417,1,442,1,462,1,480,1,481,1,486,1,488,1,489,1,491,1,492,1,494,1,495,1,497,1,498,1,551,1,584,1,597,1]
,"files":[5,3,30,1,40,1,224,1,225,3,227,3,230,5,236,1,294,1,366,1,523,2,524,5,526,4,532,1,533,2,534,2,551,1,552,1,554,1,556,1,557,6,560,2,574,1,575,1,576,9,577,3,578,1,579,1,582,3,589,1,598,5,635,1,638,3,639,1,643,1,644,1]
,"(suffixed":[5,1]
,".ilv":[5,1,10,2,226,1,227,1,284,3,532,2,540,1,545,1,554,2,556,2,558,1,560,3,577,2,588,2,593,2,633,1,635,2]
,"delivered":[5,1,233,1,304,2,305,1,473,1,501,1,520,1]
,"samples":[5,2,201,1,479,1,487,1,490,1,590,1,608,1,634,1]
,"message":[5,1,29,1,30,1,31,1,52,2,131,1,189,1,210,2,288,1,377,4,612,2]
,"avoid":[5,1,98,1,130,1,369,1,454,1,464,1,482,2,484,2,489,1,504,1,517,1,552,1]
,"modifying":[5,1,118,1,371,1,375,1,439,1,470,1,568,1,576,1]
,"include":[5,1,40,5,42,1,57,1,75,1,94,1,121,2,131,1,136,3,156,2,195,1,200,3,201,2,206,1,225,2,274,1,313,1,336,2,351,1,377,2,453,1,479,1,487,1,490,1,496,1,553,5,554,1,557,3,576,1,609,1,616,1,628,1,638,1,639,2,640,1]
,"header":[5,1,42,2,57,1,156,2,158,2,161,5,225,5,227,2,230,1,243,2,255,3,273,1,280,1,520,1,553,1,557,1,609,3]
,"inform30":[5,1]
,"inform":[5,1,501,1,568,1]
,"3.0":[5,1,447,1]
,"lib":[5,1]
,"contain":[5,2,7,1,9,1,10,1,44,2,68,1,84,1,87,1,88,1,97,1,99,1,114,1,115,1,116,1,119,1,124,3,181,1,276,2,315,2,316,1,364,1,418,1,484,1,526,1,553,1,556,2,557,1,560,1,569,1,575,1,579,1,584,1,586,1,598,1,600,1]
,"sample":[5,1,8,2,9,1,27,3,28,1,48,1,49,1,51,1,64,1,79,1,84,1,120,1,189,1,372,1,436,2,453,1,471,1,472,3,473,6,479,4,480,2,482,3,484,1,487,2,488,2,490,1,491,2,493,2,494,2,496,2,497,2,498,1,516,1,526,1,535,1,536,8,537,3,538,2,544,1,545,1,547,1,560,4,562,2,576,1,610,1,633,1,635,2,636,1,638,1]
,"coding":[5,1,10,3,22,2,75,1,106,1,120,1,213,1,289,1,540,1,600,1]
,"aspects":[5,1,8,1,34,1,56,1]
,"briefly":[6,1,8,1,320,2]
,"continues":[6,1,211,1]
,"concepts":[6,2,13,2,217,1,352,1,358,1,370,1,451,2,456,2]
,"library":[7,1,14,1,24,1,29,1,33,1,39,1,40,1,80,1,117,1,213,2,306,1,318,3,351,1,352,8,353,4,354,4,356,1,358,1,360,3,361,2,368,3,372,4,374,1,379,1,383,3,384,1,395,1,396,1,397,1,398,1,399,1,402,1,406,3,410,1,411,1,415,1,416,1,420,3,422,1,423,3,425,1,426,1,427,3,437,1,460,1,479,1,487,1,490,1,493,1,496,1,519,1,520,5,546,1,547,2,553,1,571,1,574,1,578,1,582,1,595,4,597,1,601,1,609,2,610,2,611,1,619,1,630,2,638,2]
,"primarily":[7,1,85,1,479,1]
,"development":[7,1]
,"client-server":[7,1,110,1,213,1]
,"generally":[7,1,11,1,12,1,16,1,479,1,487,1,512,1,547,1,548,1,566,1,582,2,606,1,624,1,644,1]
,"consist":[7,1,286,1,415,1,548,1]
,"forms":[7,1,11,1,58,1,86,1,87,1,88,8,89,1,93,2,94,2,96,1,203,13,206,2,256,4,257,5,310,13,313,2,355,1,359,1,453,1,488,1]
,"fields":[7,6,11,1,20,2,22,1,88,3,145,1,146,1,157,1,216,1,218,2,222,1,226,1,227,1,242,1,243,1,256,2,257,2,260,2,261,2,262,1,276,1,340,1,455,2,497,1,537,1,541,1,600,1,633,1,635,1]
,"(text":[7,1,11,1,88,1]
,"boxes":[7,1,22,1,140,1,145,1,147,2,157,2,265,2,281,1,512,1]
,"on)":[7,1,8,1,10,2,11,1,14,1,22,1,84,1,88,1,137,1,142,1,223,1,228,1,276,1,284,1,293,1,323,1,332,2,336,1,359,1,360,1,366,1,367,1,403,1,411,1,487,1,498,2,507,1,526,1,541,1,551,1,557,1,560,1,606,1]
,"shown":[7,1,18,1,24,1,64,1,75,1,82,1,83,2,84,1,88,1,104,1,121,2,122,1,127,3,133,1,134,1,135,5,138,1,156,1,161,2,189,3,223,1,224,2,243,1,245,1,250,1,254,1,255,1,258,1,260,1,263,1,265,1,271,1,274,2,275,1,293,2,294,1,300,1,316,3,336,1,346,1,360,1,364,1,369,1,372,1,377,1,379,1,386,1,402,1,462,1,481,1,486,1,500,1,548,1,553,2,556,1,557,1,567,1,628,1]
,"result":[7,1,10,1,24,1,28,2,51,1,83,3,99,1,100,1,104,1,105,1,117,1,129,1,135,8,156,1,175,2,203,1,204,3,205,2,206,1,216,1,300,1,310,1,311,3,312,2,313,1,453,1,459,1,469,1,480,1,481,1,482,3,484,3,485,4,489,1,503,1,553,1,557,2,572,1,596,2,597,3,602,1,607,1,612,1,613,3,616,2]
,"bidirectional":[7,1]
,"retrieved":[7,1,28,4,52,1,54,1,75,1,108,1,156,4,157,7,372,1,440,1,504,1,505,1,577,1,596,1,597,4]
,"displayed":[7,1,17,2,24,8,37,1,45,2,51,1,87,1,88,1,90,1,91,2,97,1,99,1,100,1,108,1,125,1,131,1,137,1,142,1,145,1,152,1,156,5,158,3,161,12,163,1,167,3,171,1,173,1,185,1,187,2,193,1,195,4,199,1,200,1,204,4,205,1,207,1,208,2,209,2,213,1,216,2,222,2,223,2,224,1,225,1,230,1,232,1,247,1,250,1,252,1,256,1,257,2,258,3,263,1,267,2,273,2,274,4,275,1,289,3,294,1,311,2,312,1,316,2,320,1,322,1,328,2,331,2,332,2,334,2,336,8,339,1,340,1,342,1,345,1,348,1,349,1,350,1,351,1,352,2,354,1,355,5,356,4,359,5,360,5,361,2,362,2,363,1,364,4,365,8,366,5,367,3,368,2,369,9,370,2,372,5,373,2,375,1,379,2,383,5,384,1,385,1,386,4,387,2,388,1,389,2,390,2,391,2,392,1,393,2,394,5,395,1,396,7,397,1,398,1,399,1,400,5,401,1,402,5,403,2,406,1,407,8,409,5,410,8,411,1,413,1,414,3,417,1,418,3,420,1,421,2,424,3,427,2,428,1,429,1,430,2,434,2,438,8,439,7,440,1,515,1,526,2,529,4,531,1,534,3,557,1,560,1,563,2,564,1,566,1,572,1,592,1,633,1,636,1]
,"modified":[7,2,27,1,51,1,82,1,96,1,113,1,115,2,135,1,157,1,195,1,375,1,380,2,407,1,411,2,418,1,432,2,441,1,454,1,459,1,460,1,462,1,467,1,468,1,625,2]
,"updated":[7,1,51,1,52,2,64,1,105,1,110,1,113,2,120,1,129,1,130,1,157,3,193,1,195,2,216,1,225,1,239,1,271,3,273,1,336,3,348,1,360,1,375,2,376,3,380,2,439,3,440,1,597,2,643,1]
,"long":[7,1,43,1,87,1,122,1,156,2,292,1,373,1,464,1,487,1,489,3,501,1,567,1]
,"term":[7,1,16,2,20,3,235,1,330,3,520,1]
,"storage":[7,1,20,1,362,1,371,1,372,2,559,1]
,"enable":[7,2,51,1,75,1,144,1,179,1,181,1,189,12,193,2,223,1,227,1,244,1,308,1,492,1,506,1]
,"whereas":[7,1,45,1,84,1,121,1,311,1,548,1,619,1]
,"others":[7,1,57,1,195,1,222,2,324,1,339,1,345,1,459,1,476,1,489,1,602,1,606,1]
,"slightly":[7,1,450,1,485,1,622,1,632,1,641,1]
,"programmed":[7,1]
,"either":[7,1,22,1,24,1,34,1,35,1,39,1,50,1,56,1,62,1,79,1,87,1,88,1,112,1,113,1,119,1,120,1,121,1,129,1,233,1,250,1,282,1,331,1,336,7,338,1,340,4,346,1,348,1,349,1,354,1,362,1,372,1,383,1,402,1,407,1,411,1,427,1,438,1,447,1,481,1,490,1,517,1,536,1,540,1,557,1,604,1,612,1,623,1,627,1,641,2]
,"script":[7,1,12,1,29,1,75,6,121,1,146,3,222,1,225,2,284,12,294,1,333,3,335,1,340,18,342,2,355,1,361,1,372,17]
,"implementation":[7,1,15,1,20,1,27,1,42,2,372,1,377,1,462,1,464,1,465,1,466,1,467,1,468,1,469,2,500,1,504,2,505,2,506,3,508,1,509,1,516,1,551,1,560,1,571,3,580,1,583,1,595,4,596,1,597,1,598,1,640,1,642,1,643,1]
,"javascript":[7,1,372,2]
,"language":[7,1,14,1,17,4,20,1,35,1,201,1,205,7,250,1,283,1,284,1,294,1,312,7,340,1,372,4,595,1]
,"user\u0027s":[7,1,283,1,294,1]
,"shows":[7,1,8,1,25,2,27,3,45,1,48,1,49,2,51,1,52,2,53,2,56,1,64,1,75,3,84,1,104,1,106,1,114,1,115,1,119,1,120,1,121,2,127,2,146,1,157,3,189,1,198,1,200,1,209,4,211,2,215,1,216,1,222,2,232,1,237,1,246,1,259,1,268,1,281,1,282,1,293,5,294,1,320,2,327,1,328,1,336,3,338,1,339,3,340,4,342,1,343,2,345,1,346,2,347,1,348,1,360,1,364,1,365,2,367,1,369,1,372,3,376,1,377,1,379,2,383,1,386,2,394,1,402,3,406,1,408,1,409,1,410,2,412,2,413,1,417,1,418,1,420,1,421,1,422,1,423,1,424,1,425,1,439,3,451,1,481,2,483,1,484,2,488,1,489,4,492,2,500,1,501,1,503,1,516,2,518,1,522,1,533,1,535,1,540,1,547,1,548,1,550,1,551,1,553,1,555,1,557,3,560,1,564,1,565,1,597,1,599,1,601,2,607,1,631,1,633,1,634,1,638,1,643,1]
,"things":[7,1,457,1,502,1]
,"done":[7,1,28,1,29,2,75,1,91,1,106,1,108,1,119,1,120,1,127,3,129,1,134,1,135,4,136,1,156,1,157,1,200,1,336,2,338,1,345,1,348,1,364,1,369,2,375,6,376,2,380,2,400,1,407,2,409,1,411,2,440,1,460,1,464,1,473,1,480,1,481,1,488,1,489,1,491,1,494,1,497,1,500,3,501,1,554,1,597,1,640,1]
,"add-on":[8,1]
,"complete":[8,1,18,1,27,3,57,1,64,1,119,1,211,1,226,1,246,1,349,1,364,1,365,1,366,1,369,1,377,1,394,1,398,1,402,1,439,1,440,2,504,1,548,1,550,1,553,1,568,1,571,1,572,1,583,1,607,3,608,1,616,1,633,2,639,1,643,2,644,1]
,"users":[8,1,24,1,110,1,118,1,243,1,295,1,296,1,304,2,462,1,556,1]
,"essential":[8,1,77,1]
,"described":[8,1,11,1,12,1,16,1,17,3,26,2,39,1,53,1,84,1,85,1,106,1,127,1,129,1,139,1,147,1,156,1,158,1,161,2,167,2,169,1,179,2,181,2,187,1,189,2,193,2,195,2,201,1,216,1,245,1,277,5,280,1,282,2,285,6,292,4,307,1,314,1,324,1,336,1,340,1,345,1,346,1,348,1,355,1,369,1,372,1,462,1,481,1,482,1,489,2,492,1,495,1,498,1,523,1,541,1,549,1,553,1,554,1,557,1,559,1,560,1,572,1,575,1,583,1]
,"section":[8,1,13,2,16,1,17,1,23,1,25,2,28,1,38,1,50,1,53,1,55,1,80,1,86,1,98,1,106,1,108,1,109,1,121,1,128,1,137,1,147,1,154,7,156,6,157,4,158,2,161,3,163,2,165,2,167,3,169,2,171,2,173,2,175,2,177,1,179,3,181,3,183,2,185,2,187,2,189,3,191,3,193,3,195,3,209,1,216,9,217,2,218,1,219,5,224,1,228,1,230,1,232,1,234,1,235,1,243,12,245,1,249,1,253,5,254,1,255,2,256,1,265,1,270,1,271,3,273,2,274,1,277,6,279,1,280,3,281,1,282,1,283,1,285,6,287,1,289,1,291,1,292,6,299,2,300,2,304,1,324,1,336,4,339,2,340,6,341,1,345,2,346,1,348,1,363,1,365,1,366,1,367,1,394,1,409,1,422,1,425,1,436,1,439,2,457,1,462,1,472,1,479,1,481,1,483,1,487,1,489,2,490,1,493,1,495,1,496,1,498,1,506,1,507,1,510,1,524,1,526,1,528,2,529,1,530,1,533,1,534,1,536,1,537,3,538,3,541,2,542,1,544,1,545,2,546,1,548,1,549,1,550,2,551,1,552,2,553,3,554,1,555,1,557,6,561,1,563,1,565,1,566,1,569,1,571,2,574,1,576,2,578,1,582,1,583,1,584,1,589,1,595,1,596,2,597,2,607,2,608,1,617,1,619,2,621,2,623,2,626,1,627,2,631,2,633,1,638,2,645,1]
,"documentation":[8,1,129,1,215,1,308,1,315,1,463,1,517,2,536,1,600,1]
,"ilvdisplay":[8,3,9,1,205,5,312,5,635,2]
,"constructed":[8,1,78,1,79,1,364,1,383,3]
,"anything":[8,1,135,1,227,1,439,1]
,"else":[8,1,40,1,52,1,57,1,84,2,120,1,121,1,134,1,135,5,200,3,201,1,208,1,409,2,439,1,440,2,500,1,516,2,544,3,547,1,548,1,549,2,552,1,553,3,554,2,562,1,637,1]
,"manages":[8,1,9,1,15,2,17,1,20,1,40,1,47,1,48,1,62,1,67,2,84,3,103,1,120,1,161,2,180,2,197,1,360,1,361,1,367,1,372,1,481,1]
,"communication":[8,1,14,1,21,1,34,1,67,1,133,2,134,1,142,1,180,1,217,1,218,3,223,1,237,1]
,"(such":[8,1,10,2,22,1,24,1,29,3,52,2,122,1,222,1,276,1,284,1,293,1,332,2,403,1,560,1,592,1]
,"primitives":[8,1]
,"event":[8,1,39,1,52,2,57,1,157,1,195,4,289,3,332,1,451,1,461,2,499,1,501,5,504,3,516,1,568,4,637,1]
,"\u002F\u002F---display":[8,1]
,"---int":[8,1]
,"(int":[8,1,9,1,52,2,53,1,75,1,136,1,548,1,562,1,571,3,577,3,583,1,616,1,635,1]
,"argc":[8,2,9,2,52,2,53,1,75,1,136,1]
,"char*argv":[8,1,9,1,75,1,136,1]
,"[])":[8,1,9,1,75,1,136,1]
,"ilvdisplay*display":[8,1,25,1,48,1,106,1,107,1,439,1,440,2,599,1]
,"=new":[8,1,9,1,25,1,31,1,36,1,37,1,40,2,41,1,48,2,49,2,53,1,57,2,60,1,69,1,70,1,106,1,107,2,108,1,133,1,137,1,138,1,364,6,365,1,369,6,372,7,373,3,377,1,385,1,386,1,387,1,388,1,389,1,390,1,391,1,392,1,393,1,394,2,396,1,397,1,398,5,399,1,402,1,403,1,410,6,415,1,436,2,462,2,469,1,473,1,480,3,488,2,489,1,491,2,494,2,497,3,501,2,547,2,548,1,550,2,553,5,554,3,557,8,558,2,560,2,564,2,568,1,572,2,576,1,577,11,583,1,585,4,587,3,588,3,591,3,592,2,593,2,594,1,596,4,597,16,623,1,624,3,625,1,635,5,636,1]
,"argv)":[8,1,9,1]
,"generates":[8,1,10,1,66,1,106,1,210,1,227,1,316,1,549,1,572,1,640,1,643,1]
,"ilvapplication":[8,1,9,3,225,1,236,1]
,"instead":[8,1,15,1,17,1,20,1,24,1,27,1,36,1,39,3,43,1,51,1,52,2,57,1,84,1,88,1,105,1,116,1,120,1,121,3,122,1,124,2,157,1,161,1,201,1,218,1,243,2,255,2,276,2,282,1,284,3,336,1,338,1,343,1,362,1,365,1,366,1,369,3,376,1,394,1,395,1,440,2,450,1,481,3,482,5,484,2,489,1,492,1,503,1,504,1,512,1,553,1,628,1,643,2]
,"creating":[8,1,10,1,11,1,20,1,47,1,48,1,88,1,104,2,105,1,106,1,108,1,119,1,133,1,137,1,142,1,152,1,218,7,223,1,224,4,225,3,231,1,232,2,235,2,236,1,238,2,246,1,249,1,250,1,266,1,268,3,269,1,278,1,283,1,286,1,287,2,289,2,291,1,292,1,295,1,297,1,301,1,314,1,316,2,317,1,319,1,320,1,323,1,336,6,338,3,339,3,340,3,345,2,347,1,348,1,351,2,358,1,363,6,364,5,365,8,367,2,369,17,377,2,394,3,398,2,402,1,436,1,486,1,500,1,504,1,520,1,522,4,523,3,524,1,533,1,536,2,537,1,540,1,541,1,544,1,546,1,548,1,553,1,601,1,602,1,607,1,611,1,638,1]
,"creates":[8,1,57,3,156,1,157,1,158,1,167,1,213,1,227,1,244,1,316,1,325,2,339,1,369,2,489,1,500,1,528,1,553,1,557,2,564,1,571,1,596,1,597,1,635,5]
,"built":[9,1,213,1,264,1,449,1,507,1,519,1]
,"instance":[9,1,15,1,17,2,20,2,22,1,25,1,28,1,29,1,39,1,53,1,75,1,80,1,87,2,115,1,120,1,133,1,201,1,224,1,225,1,228,6,230,3,267,4,322,1,361,3,363,1,368,7,369,3,372,7,377,1,394,2,395,4,396,2,397,2,402,2,412,2,413,2,427,2,428,1,436,4,440,1,457,1,462,3,466,1,472,4,473,4,481,2,482,5,486,3,488,2,489,4,491,1,495,1,498,2,500,5,501,1,504,2,505,2,511,1,516,2,517,2,547,1,552,1,553,1,568,1,571,1,583,2,595,1,596,1,597,1,610,1,611,1,612,1,635,3,637,1,640,1]
,"subclass":[9,1,10,1,11,1,20,1,28,2,38,1,39,1,48,1,56,2,201,1,225,1,230,2,361,2,368,4,372,2,377,2,379,1,394,1,395,2,398,2,399,1,402,1,406,1,411,1,412,1,427,1,434,1,435,1,461,1,462,4,463,2,464,3,465,2,466,2,467,2,468,2,469,2,472,2,481,1,484,1,489,1,492,1,495,2,498,2,500,1,501,1,503,2,504,4,505,1,506,1,509,1,510,1,516,1,540,1,560,1,572,1,576,2,580,1,585,1,586,1,596,5,597,5,599,1,632,1,641,1]
,"along":[9,1,85,1,282,1,294,1,329,2,336,2,343,2,344,1,346,2,348,2,349,2,355,2,359,3,364,2,365,4,366,4,369,2,415,1,438,1,439,1,488,1,489,1,524,1,545,1,552,1,635,1]
,"panels":[9,2,10,2,20,1,50,2,75,2,138,1,212,1,216,1,222,2,223,1,224,5,226,3,227,1,228,2,229,1,230,1,268,1,284,1,287,1,288,3,291,2,293,2,294,2]
,"(that":[9,1,20,1,52,1,122,2,239,1,257,1,327,1,328,2,331,3,356,1,364,2,379,2,400,1,412,1,453,1,458,2,463,1,467,1,468,1,482,2,483,1,484,2,485,1,487,1,489,1,490,2,492,2,504,3,506,1,515,1,517,1,547,1,548,1]
,"containers)":[9,1]
,"assuming":[9,1,115,1,443,1]
,"name":[9,1,15,1,16,1,24,11,25,1,27,1,43,4,44,2,45,6,48,1,49,2,51,2,52,1,53,1,54,5,56,5,60,1,69,1,70,2,72,1,73,1,75,4,88,1,97,1,104,2,105,3,106,3,108,1,110,6,114,1,115,1,116,1,119,3,120,5,121,2,126,4,127,2,128,1,129,5,130,11,133,1,135,1,137,1,144,1,145,2,146,2,148,1,149,2,150,1,154,1,155,2,156,13,157,10,158,4,161,1,163,1,165,1,167,2,169,1,171,1,173,1,175,1,177,2,179,3,181,4,182,1,183,3,185,4,187,2,189,2,191,4,193,17,195,48,209,2,210,7,218,5,219,1,222,4,223,2,225,4,226,1,227,1,229,1,233,2,236,2,237,6,238,2,239,1,240,1,242,1,243,10,244,2,247,4,248,2,249,1,250,2,252,3,253,4,255,4,256,4,258,1,262,5,267,1,269,1,271,4,273,3,277,1,278,1,280,4,282,6,283,3,284,1,286,1,289,1,291,1,292,1,294,1,299,2,300,2,301,1,302,1,305,3,316,6,322,1,325,2,327,2,333,2,336,7,340,5,342,5,348,2,372,3,383,2,407,1,427,2,428,1,429,1,430,1,431,1,432,1,433,1,434,2,435,1,443,1,449,3,450,1,504,1,509,1,520,1,529,2,531,1,532,2,536,3,537,3,538,3,541,1,544,10,548,1,550,1,553,2,560,1,564,1,572,1,576,1,577,6,580,1,583,2,585,1,586,2,591,1,597,12,600,2,625,2,629,1,630,2,633,1,637,3,640,4]
,"myapp":[9,5]
,"generate":[9,1,10,2,106,1,119,1,178,1,224,1,225,4,227,2,229,5,230,7,294,1,568,1,577,4]
,"public":[9,1,29,1,31,1,40,1,42,1,53,1,57,1,120,1,200,1,201,1,377,1,398,1,501,1,509,1,516,2,560,1,639,1,641,1,643,1]
,"virtual":[9,1,10,1,26,1,29,3,31,1,39,2,42,2,52,2,53,1,74,1,200,2,201,4,227,3,377,1,383,4,394,2,398,2,400,1,409,1,412,3,449,2,486,1,553,5,571,5,572,3,639,4,643,6]
,"void":[9,2,25,2,29,2,31,1,40,2,42,2,45,1,52,5,53,1,57,2,73,1,74,2,75,3,84,1,120,3,122,1,197,1,200,1,377,2,412,4,433,1,435,1,436,2,439,1,440,2,462,2,464,1,465,1,466,4,467,3,468,3,469,2,470,1,481,2,482,11,483,1,484,7,485,3,486,2,489,14,492,7,495,1,498,9,501,1,504,6,507,1,508,1,514,1,515,1,516,2,544,1,549,1,553,1,562,1,564,2,568,5,571,10,572,2,610,1,616,1,635,4,636,2,637,2,643,5,644,2]
,"makepanels":[9,1]
,":makepanels":[9,1]
,"{\u002F\u002Fcreate":[9,1]
,"defined":[9,1,12,1,15,2,17,2,20,2,22,4,23,1,24,4,25,3,28,1,34,1,35,2,36,1,37,1,40,1,47,1,51,1,52,2,56,2,57,1,71,1,75,1,103,1,104,1,105,4,106,2,108,2,119,1,121,3,125,2,126,3,127,1,136,1,142,1,156,7,158,1,201,1,207,1,222,1,223,1,243,1,248,1,250,1,253,1,282,2,284,1,289,1,306,2,327,1,328,1,330,4,331,2,332,4,335,1,336,12,338,1,340,7,341,1,342,3,345,1,348,1,349,2,361,3,362,2,364,1,369,2,370,2,372,8,377,7,379,2,380,4,383,6,384,1,385,1,386,1,387,1,388,1,389,1,390,1,392,2,393,1,394,2,395,4,396,1,397,1,400,1,401,1,402,4,403,6,406,1,407,2,409,4,411,1,412,4,413,1,414,3,415,3,418,2,419,1,420,1,421,3,423,1,424,4,427,1,438,1,439,2,448,1,450,1,453,1,454,1,477,1,481,2,489,1,492,1,495,1,498,1,501,1,504,1,534,1,543,2,544,1,562,1,563,1,600,1,609,1,618,1,619,2,624,1,640,2,641,1,643,1]
,"int":[9,1,14,1,31,1,42,2,52,2,53,1,57,2,73,4,74,2,75,3,200,1,500,1,548,1,553,3,557,1,562,1,571,1,577,3,616,1,635,1,642,1]
,"myapp*appli":[9,1]
,"containers":[10,3,11,1]
,"end":[10,2,17,2,22,1,24,1,27,2,29,2,51,2,52,4,56,1,57,2,64,2,73,2,74,2,80,1,99,1,118,2,122,1,134,1,137,1,157,1,179,1,187,2,189,2,195,5,201,2,260,1,324,1,330,2,339,1,341,1,346,2,366,8,408,1,409,1,412,1,457,1,459,3,467,1,482,1,489,4,495,1,498,1,500,1,501,2,507,1,553,1,556,1,568,1,571,1]
,"windows":[10,1,57,2,87,1,136,1,150,1,211,2,212,2,222,3,231,1,232,4,234,3,236,1,238,6,249,1,259,1,277,2,289,2,291,1,294,2,303,3,304,2,305,2,307,2,308,4,322,1,473,1,525,1,608,1,612,1,634,1]
,"appear":[10,1,40,1,42,1,124,2,131,1,142,1,143,1,144,1,145,1,151,1,156,4,158,3,159,1,167,1,179,1,218,1,223,2,234,1,237,2,243,1,261,1,262,1,265,2,266,1,271,1,273,1,276,2,281,1,282,2,283,1,289,1,291,1,294,1,316,1,332,2,336,1,339,2,342,1,346,1,351,1,364,3,365,1,366,2,369,2,379,1,386,3,399,3,404,1,407,4,414,1,419,1,476,1,524,1,528,2,529,1,564,2,581,1]
,"computer":[10,1,457,1,517,4,602,1]
,"screen":[10,1,157,1,212,1,213,1,256,1,322,1,329,1,362,2,364,1,365,2,367,2,368,2,369,1,370,14,380,1,386,2,407,2,413,3,419,1,427,1,474,1,544,1,602,1]
,"container":[10,7,54,9,75,1,364,2,372,4,419,2]
,"window":[10,1,12,1,88,1,141,2,144,1,151,1,153,1,157,1,158,1,159,1,211,4,212,1,216,3,220,1,221,4,222,7,223,5,224,4,225,1,226,9,227,5,228,3,229,1,230,4,232,12,234,2,236,2,238,6,239,4,240,9,241,1,242,3,243,8,244,1,245,5,247,2,249,4,250,2,251,4,252,5,253,2,254,4,255,4,256,3,257,4,258,4,259,5,260,2,261,3,262,4,263,11,264,6,265,8,266,8,267,13,268,4,269,4,270,3,271,2,272,2,273,3,275,4,277,12,278,5,279,4,280,3,282,4,283,13,284,2,285,12,286,5,287,3,288,9,289,4,290,2,291,1,292,13,293,2,294,9,297,3,299,2,301,4,302,3,308,1,317,1,320,1,321,1,322,6,323,8,324,2,332,3,333,1,336,8,339,1,340,5,341,1,342,2,434,1,474,2,525,2,526,4,528,1,529,3,531,3,534,3,537,4,558,1,560,1,633,1,635,1]
,"hold":[10,1,77,1,80,2,198,1,199,1,325,1,447,1,553,1,556,1]
,"given":[10,1,24,1,27,2,28,1,37,1,39,2,43,2,44,8,45,2,52,2,54,2,56,3,57,3,102,1,107,1,118,1,120,1,122,1,135,2,136,1,156,3,201,1,224,1,255,1,327,4,328,3,331,1,332,2,334,2,336,1,337,1,338,1,342,2,345,1,356,2,359,2,360,2,364,2,370,3,372,2,373,3,375,6,376,4,377,5,383,3,394,3,395,3,398,1,401,2,402,9,403,1,407,1,409,4,411,2,412,6,414,1,415,3,417,1,421,1,422,3,423,2,424,1,425,4,427,2,436,2,438,1,439,1,440,2,449,1,457,1,463,1,466,4,479,2,480,1,482,1,484,2,489,1,491,2,493,1,510,2,512,1,541,1,547,1,552,1,558,1,559,1,560,1,569,1,577,3,582,2,586,2,592,2,596,1,597,2,641,1]
,"number":[10,1,11,1,25,1,27,1,28,4,31,1,39,1,43,1,64,2,82,1,95,1,97,3,104,1,105,1,117,1,120,1,122,1,124,1,127,1,130,1,142,1,156,1,157,2,158,1,161,1,163,1,165,1,167,1,172,1,175,3,202,2,204,4,208,1,210,1,223,1,232,1,247,2,248,4,250,1,255,3,256,1,257,1,260,1,265,1,273,1,275,8,276,2,281,1,282,6,292,1,301,1,309,1,311,4,316,2,323,1,324,1,330,1,336,3,338,3,340,2,348,1,350,3,364,5,372,9,384,1,385,1,386,1,387,1,388,1,389,1,390,1,391,1,392,1,393,1,394,1,395,1,396,2,397,2,398,3,399,3,403,1,409,2,411,3,428,2,436,1,438,2,458,4,463,1,479,1,482,1,487,16,488,1,489,2,490,1,491,2,492,7,495,1,497,1,498,2,541,3,543,1,544,1,554,1,562,3,569,2,570,1,571,2,576,1,590,1,596,1,597,3,623,1,632,1,636,1]
,"graphic":[10,6,11,3,18,1,20,1,56,2,72,1,73,1,141,2,143,1,187,1,189,1,190,1,223,2,322,2,324,1,326,1,332,1,334,3,356,1,362,2,364,2,369,3,394,6,402,5,417,3,418,3,419,1,435,1,440,2,453,1,454,1,460,2,474,1,493,1,499,1,505,1,507,1,509,1,510,3,511,5,512,2,513,3,520,1,526,1,537,1,538,1,540,4,541,4,545,3,547,2,548,3,549,2,552,1,553,1,556,1,560,3,569,1,572,2,575,1,599,1,601,2,612,1,633,2,635,1]
,"charts":[10,1,141,1,143,2,191,1,223,6,305,3,318,15,319,8,320,4,321,3,322,9,323,3,324,1,334,1,335,3,336,7,340,2,342,3,343,2,345,4,346,2,348,4,351,4,352,13,353,6,354,14,355,1,358,4,359,3,360,13,364,1,366,8,367,1,368,3,371,3,372,1,374,3,375,4,376,3,379,3,382,1,383,3,384,1,394,1,395,1,396,1,397,1,398,7,399,1,402,6,405,1,406,3,410,8,411,1,413,7,415,1,416,1,420,3,422,2,423,3,425,2,426,2,427,3,437,3,439,1,441,1,453,1,455,5]
,"gauges":[10,1]
,"interaction":[10,1,29,1,195,1,214,2,427,1]
,"takes":[10,1,44,1,51,2,56,1,115,1,157,1,216,1,263,1,289,1,331,1,340,1,377,1,379,1,479,2,486,1,487,1,492,1,496,1,558,1,572,1,591,1,596,1,597,1,610,1,640,1]
,"place":[10,1,24,1,56,1,90,1,91,1,115,1,144,1,216,1,223,1,239,1,243,1,246,1,251,1,283,1,289,2,454,2,484,1,487,2,489,3,553,1,569,1,577,1,612,1,635,1,643,1]
,"typically":[10,1,56,1,204,1,311,1]
,"uses":[10,1,14,1,36,1,42,1,84,1,91,1,108,1,118,1,127,2,156,1,157,1,158,3,161,2,163,1,165,1,167,2,169,2,171,1,173,1,179,1,181,1,185,1,187,2,189,1,193,1,195,1,200,1,207,1,212,1,216,1,232,2,233,1,293,1,294,1,298,1,314,1,315,1,354,1,367,3,370,2,376,1,383,1,386,2,394,2,412,1,422,2,425,2,438,1,443,1,463,1,469,1,473,1,479,2,481,3,484,2,486,1,487,2,488,1,489,3,492,1,495,3,498,2,501,1,504,1,505,1,506,2,517,1,523,1,524,1,536,1,551,1,560,1,576,1,589,1,595,2,598,1,619,1,628,1,636,1]
,"ilvgadgetcontainer":[10,2,57,1,120,2,635,2]
,"base":[10,1,48,2,154,1,198,2,225,2,236,1,341,2,361,1,362,1,369,1,372,1,379,1,383,1,384,1,395,1,398,1,399,1,406,1,408,1,411,2,415,6,417,1,420,1,423,1,427,1,436,1,455,1,456,1,461,2,477,1,500,3,516,1,517,1,519,1,533,1,534,2,541,1,554,1,619,1,639,1]
,"three":[10,1,17,1,25,1,36,1,53,1,62,1,80,1,104,1,121,1,142,1,157,1,158,1,170,1,171,1,175,1,183,1,202,1,211,2,216,1,217,1,223,1,242,2,246,1,253,1,261,1,262,1,268,1,274,1,291,1,305,1,313,1,316,1,322,1,331,1,332,1,336,4,345,3,354,1,367,1,379,1,398,1,402,1,417,1,438,1,439,2,440,2,443,1,466,1,469,1,482,1,486,1,489,2,492,1,495,1,498,1,528,1,541,1,549,1,552,1,576,1,596,1,602,1,638,1,640,1]
,"different":[10,1,11,1,14,1,15,1,16,1,17,1,20,2,21,1,31,1,43,2,44,1,45,2,57,2,58,2,86,2,87,1,91,1,95,2,97,1,104,1,121,1,124,1,136,1,157,1,207,1,208,1,217,1,218,1,223,1,232,1,246,1,248,1,260,1,268,1,273,1,274,3,276,1,288,1,305,1,323,1,331,1,332,1,336,2,339,1,342,1,354,1,355,1,359,1,360,2,361,1,367,2,372,1,374,1,375,1,379,1,394,3,402,2,408,1,413,1,415,1,439,1,450,1,453,1,454,1,457,1,458,1,464,1,466,1,469,3,476,1,478,2,479,1,482,12,485,1,489,6,490,1,491,1,492,1,495,1,511,3,516,1,517,6,522,1,524,2,534,3,544,1,548,2,554,1,557,2,560,1,564,1,565,1,568,1,595,1,596,1,598,1,600,1,601,1,602,1,613,1,631,7,632,1,638,1]
,"techniques":[10,2,26,3,27,1,28,1,104,2]
,"completely":[10,1,77,1,91,1,336,1,459,1,478,2,481,1,489,1,512,2,541,1,568,1]
,"put":[10,2,49,2,64,1,122,1,208,1,260,1,363,1,364,1,365,1,383,1,402,1,534,1]
,"positions":[10,1,39,1,135,1,187,1,189,1,288,1,409,2,420,2,453,2,457,1,462,1,478,1,479,3,480,2,481,1,482,1,486,1,489,4,494,1,495,1,498,1,517,1,554,2]
,"properties":[10,1,15,1,19,1,23,3,24,5,43,9,44,4,45,4,57,1,89,1,94,2,95,2,105,1,127,1,154,2,157,8,181,7,189,2,191,5,193,2,195,7,200,1,205,1,209,1,218,5,222,2,225,1,226,1,228,1,237,4,258,4,271,1,282,4,300,3,312,1,336,3,341,1,350,1,378,1,380,4,383,3,384,1,385,1,392,1,394,4,396,7,397,6,407,4,409,8,413,1,418,4,421,2,424,2,448,2,449,1,460,1,504,4,509,1,530,1,544,1,545,5,570,1,602,1,606,1,612,1,640,1]
,"(font":[10,1]
,"color":[10,1,45,3,57,2,72,2,147,1,149,12,161,6,163,4,179,2,193,11,195,22,211,1,222,1,261,9,264,13,292,1,330,3,332,2,339,7,384,2,385,1,386,1,387,2,388,1,389,2,390,2,391,3,392,1,393,2,394,4,402,2,403,2,417,1,528,3,530,5,544,1,547,1,548,3,549,4,553,1,564,1,581,2,600,3]
,"technique":[10,4,53,1,57,1,110,2,632,1]
,"requires":[10,1,308,1,482,1,487,1,488,1,489,2,492,1,576,1,597,2,631,1,642,1]
,"seldom":[10,1]
,"except":[10,1,17,1,28,2,201,1,307,1,346,1,372,1,459,1,480,1,482,1,486,1,502,1,582,1,597,1]
,"great":[10,1,562,1]
,"deal":[10,1,14,1,15,1,17,1,25,1,77,1,110,1,227,1,458,1,510,2,512,1,517,2]
,"flexibility":[10,1,58,2,87,1]
,"depend":[10,1,28,1,52,1,122,1,204,2,205,1,209,1,237,1,311,2,312,1,316,1,380,1,510,1]
,"run-time":[10,1,102,1,109,1,644,1]
,"information)":[10,1]
,"design":[10,3,47,1,75,1,234,1,315,1,455,2,487,1,490,1]
,"save":[10,1,222,1,225,3,226,2,227,1,229,2,232,2,236,3,237,1,238,7,239,3,249,2,252,2,255,2,258,3,266,2,267,1,269,1,277,2,278,1,283,2,284,1,285,2,286,1,289,2,292,2,302,1,316,2,336,2,340,2,345,2,348,2,498,1,520,1,524,1,530,1,532,5,536,2,539,2,545,1,549,3,570,1,577,2,588,1,593,1,597,1,643,2]
,"initialize":[10,1,516,1,557,1,596,1,597,1,635,2,640,1,643,1]
,"reading":[10,1,32,1,157,1,305,1,500,1,526,1,554,1,574,1,576,2,578,1,580,2,583,1,596,2,597,2,598,1,599,2]
,"although":[10,1,15,1,16,1,120,1,222,1,346,1,439,1,440,1,463,1,479,1,532,1,641,1]
,"convenient":[10,1,75,2,481,1]
,"previous":[10,2,17,1,27,1,45,1,51,1,52,1,64,1,84,1,106,1,243,1,257,2,260,1,336,2,339,1,340,1,341,1,365,1,439,1,440,2,459,1,470,1,481,1,484,1,486,1,489,12,498,3,528,1,537,1,538,2,549,1,552,1,564,1,570,1,643,1]
,"shortcoming":[10,1]
,"order":[10,1,40,1,44,1,52,1,53,1,57,5,62,1,104,1,105,2,106,1,136,1,156,4,161,1,193,1,222,1,223,1,224,2,226,2,246,1,247,6,253,1,262,4,281,2,282,1,303,1,332,3,336,1,339,2,345,1,360,1,364,1,370,1,372,1,386,1,392,2,393,2,400,2,403,1,406,1,407,3,412,1,415,1,421,2,424,2,436,1,466,1,467,1,468,1,469,2,478,1,479,5,482,1,486,17,488,1,489,2,491,1,492,2,496,2,498,7,517,1,521,1,560,2,596,4,597,2]
,"manipulate":[10,1,15,1,82,1,230,1,481,1,502,1,504,2,506,1,534,1]
,"call":[10,1,39,3,40,1,45,1,52,2,83,1,122,8,135,4,157,2,289,1,374,4,376,4,413,1,421,1,440,5,449,1,455,1,460,1,462,1,464,1,467,1,468,1,469,1,472,1,479,1,481,4,484,1,486,2,487,1,489,1,501,1,504,1,507,1,512,1,515,6,517,1,553,1,554,1,560,1,568,2,597,1,610,1,612,1,614,1,618,1,628,1,635,1,642,1,643,2]
,"ilvcontainer":[10,1,54,1,75,1]
,":getobject":[10,1,54,1]
,"member":[10,3,17,1,22,1,25,4,26,1,27,7,28,11,29,5,31,1,32,2,37,1,39,15,40,1,42,2,45,1,50,1,51,16,52,11,53,4,54,4,56,6,57,6,58,1,73,2,74,2,75,1,77,1,83,3,84,4,106,1,107,2,109,1,112,2,117,1,118,4,119,1,120,1,122,2,124,2,133,1,134,3,135,17,137,1,138,2,197,1,200,1,225,1,227,5,612,1,614,1,623,1,627,2]
,"function":[10,1,12,2,27,3,28,7,29,5,32,2,37,1,39,13,42,1,45,1,51,12,52,11,53,3,54,4,56,6,57,4,58,1,73,2,74,2,75,10,77,1,83,3,84,2,106,1,107,2,112,3,117,1,118,4,119,1,122,2,124,2,133,1,134,3,135,14,136,1,137,1,138,2,146,1,197,1,217,1,222,3,225,2,226,1,227,5,246,1,265,1,289,3,333,1,335,1,340,38,342,1,361,3,372,24,394,1,491,2,492,1,501,1,560,1,586,1,607,1,610,6,611,1,612,5,614,1,615,1,618,3,619,4,630,1,633,1,635,3,636,1,639,1,640,3,641,16,642,14,643,2,644,1]
,"cast":[10,1,82,4]
,"corresponding":[10,1,15,1,48,1,51,1,52,2,74,1,87,1,120,3,136,2,141,1,156,2,157,2,158,2,195,2,203,1,204,1,225,1,227,1,250,1,252,1,255,1,310,1,311,1,322,1,323,1,325,1,327,2,328,2,336,2,338,1,340,2,345,1,364,4,365,2,366,1,368,1,369,3,377,6,379,1,380,3,386,1,392,2,400,1,402,3,409,1,412,1,415,1,418,1,419,1,422,1,423,1,425,1,427,1,435,1,482,1,489,1,500,1,504,1,526,1,560,2,567,1,577,2,580,2,581,1,582,2,586,2,597,1,635,1,638,1]
,"combines":[10,1,635,1]
,"benefits":[10,1,460,1,516,1]
,"gained":[10,1]
,"fact":[10,1,138,1,385,1,386,1,387,1,388,1,389,1,390,1,391,1,392,1,393,1,396,1,397,1,398,1,399,1,461,1,486,1,596,1,597,2]
,"custom":[10,1,29,3,36,1,38,1,42,4,52,2,53,1,57,2,108,2,448,1,506,1,507,1,509,1]
,"corresponds":[10,1,28,1,63,1,90,2,91,1,288,1,364,2,365,1,368,1,369,1,377,2,394,1,400,1,402,2,438,1,481,2,557,1,560,3,582,1,583,1,596,1,597,1]
,"generated":[10,2,110,1,115,1,179,1,225,1,227,12,229,2,550,1,556,1,576,1]
,"functions":[10,2,14,1,17,1,22,1,25,4,26,1,27,4,28,5,31,1,39,3,40,3,42,1,45,1,50,1,51,7,52,1,53,1,54,1,56,3,57,2,84,2,105,1,109,1,120,1,132,1,135,3,200,1,227,3,335,1,339,1,340,7,341,1,342,3,355,1,610,1,612,1,617,1,618,4,638,2,639,2,641,3,643,4]
,"retrieve":[10,1,28,3,54,1,56,1,135,2,138,1,156,1,214,1,248,1,372,1,402,1,481,2,482,2,486,1,489,3,504,2,548,1,553,1,554,1,577,3,590,1,592,1,595,1,596,1,597,2,623,1,632,1]
,"contained":[10,1,44,1,45,2,51,1,58,1,73,1,74,1,84,1,87,4,91,1,92,1,121,1,210,1,293,1,315,1,322,1,379,1,489,1,535,1,554,1,590,2]
,"callbacks":[10,1,12,3,29,6,47,1,52,7,55,1,57,1,73,1,74,1,75,13,145,1,146,6,156,5,158,5,161,5,163,3,165,3,167,5,169,5,171,3,173,3,175,3,177,3,179,5,181,4,183,3,185,3,187,5,189,6,191,3,193,5,195,5,227,6,279,1,283,11,284,3,289,1,294,2,324,1,333,5,334,2]
,"combined":[10,1,105,2,124,2,157,1,276,2,507,1]
,"example":[10,1,14,1,25,2,27,2,28,2,29,2,31,1,36,1,37,1,38,2,40,4,41,2,42,1,45,3,49,1,51,3,52,8,53,2,56,5,57,4,59,1,60,1,61,1,62,2,63,1,64,1,65,1,66,1,67,1,68,1,69,1,70,1,71,1,72,2,73,4,74,3,75,3,80,1,82,3,83,2,84,1,97,1,104,2,105,1,106,1,107,1,110,1,111,1,112,2,113,1,114,2,115,1,116,1,119,2,121,2,127,5,133,1,134,1,135,5,146,2,157,1,177,1,195,2,199,1,201,1,205,1,211,1,218,1,222,1,224,1,248,1,250,1,255,1,260,1,265,1,282,1,283,1,288,2,291,1,305,1,312,1,315,1,316,2,325,1,329,2,335,2,336,7,338,1,339,6,340,6,341,5,342,3,343,2,344,2,345,3,346,5,347,1,348,1,349,1,350,1,360,1,364,5,365,6,366,4,367,2,369,3,372,5,373,2,376,1,377,4,379,2,380,1,383,3,385,1,386,1,387,1,388,1,389,1,390,1,391,1,392,1,393,1,394,3,395,1,396,1,397,2,398,1,399,1,400,2,402,3,403,1,407,1,409,2,410,2,411,2,413,2,414,1,415,1,417,2,419,1,424,1,436,2,439,7,440,4,443,1,447,1,448,1,449,1,450,1,458,1,462,3,466,1,469,2,472,1,476,3,481,1,482,1,484,2,486,4,489,3,492,2,495,1,498,2,500,1,501,3,509,2,513,1,516,3,517,2,520,1,524,3,526,1,528,3,529,1,530,2,531,2,533,3,534,3,535,4,536,2,537,1,538,3,539,1,541,1,543,1,544,1,545,1,547,3,548,2,549,2,550,1,551,2,552,2,553,5,554,2,556,1,557,3,558,3,559,1,560,3,563,1,564,2,567,1,568,1,569,1,571,2,572,2,576,2,577,3,580,1,583,3,594,1,595,1,596,5,597,8,598,2,600,2,601,2,603,1,606,2,607,7,608,4,609,1,610,2,612,1,613,1,614,2,616,1,618,2,619,1,624,3,625,1,628,1,630,1,633,5,634,2,638,2,640,5,641,1,643,2]
,"possible":[10,1,16,1,17,2,24,1,29,1,45,1,62,1,72,1,80,1,82,1,91,2,99,1,100,1,118,1,127,1,129,2,135,1,157,1,163,1,200,1,201,1,219,1,224,1,226,1,248,1,257,1,354,1,366,1,369,1,374,1,379,1,394,1,399,1,400,1,403,1,404,1,409,2,413,1,445,1,446,1,450,1,459,1,481,1,485,2,486,2,489,1,500,1,512,1,516,1,517,4,536,1,576,1,586,1,600,2,624,1,643,2]
,"regarding":[10,1,87,1,560,1]
,"-user\u2019s":[10,1]
,"among":[11,1,24,1,43,1,108,1,122,1,142,1,172,1,216,1,223,1,371,1,374,2,402,2,479,1,480,1,481,1,489,1,492,1,495,1,498,1,569,1]
,"category":[11,1,385,1,386,1,387,1,388,1,389,1,390,1,391,1,392,1,393,1,394,1,396,1,397,1,398,1,399,1,410,2,486,1]
,"especially":[11,1,120,1,216,1,376,1,440,1,467,1,468,1,490,1,501,1,533,1,548,1,553,1,559,1,622,1,623,1]
,"relevant":[11,1,305,1]
,"namely":[11,1,560,1]
,"gadget":[11,1,12,6,16,3,17,5,22,2,24,3,29,2,45,4,47,3,48,3,49,4,51,5,54,8,56,22,57,26,58,2,59,3,60,2,61,3,62,2,63,4,64,3,65,2,66,2,67,2,68,3,69,4,70,3,71,7,72,1,73,2,74,4,75,3,77,1,86,2,87,2,88,7,89,3,90,1,91,1,95,11,96,1,97,4,99,6,100,2,108,1,124,1,127,7,130,3,141,3,142,3,144,1,145,8,146,8,151,2,152,1,155,1,156,7,158,5,159,1,161,32,162,2,163,14,164,1,165,12,166,1,167,10,168,1,169,5,170,1,171,8,172,2,173,5,174,1,175,3,176,1,177,2,178,1,179,2,180,1,181,1,182,1,183,5,184,1,185,2,186,1,187,9,188,1,189,8,192,1,194,1,199,2,216,1,218,1,220,6,222,2,223,6,226,1,232,5,241,3,242,4,243,3,245,16,246,8,247,4,250,5,251,9,252,5,253,3,254,10,255,5,256,2,257,4,258,1,260,4,265,10,270,1,272,5,273,3,275,8,276,4,277,3,279,1,280,2,282,10,283,8,284,1,288,7,289,8,291,4,292,1,299,2,300,1,301,10,305,1,317,1,322,1]
,"inherit":[11,1,55,1,427,2,500,1,554,1,610,1]
,"ilvgadget":[11,1,17,1,55,1]
,"ilvgraphic":[11,1,52,2,460,1,504,1,510,2,513,2,540,1,545,2,547,1,560,3]
,"specially":[11,1,545,1,581,1,612,1]
,"designed":[11,2,20,2,39,1,52,1,61,1,68,1,87,7,211,1,216,1,223,1,340,1,354,1,360,1,372,1,453,1,464,1,469,1,476,2,479,1,502,1,517,2,554,1,556,1,561,1,581,1,582,1,602,1]
,"entry":[11,1,20,1,22,1,47,1,49,3,51,1,86,1,87,2,142,1,156,1,158,1,165,8,223,1,257,2,597,1]
,"variety":[11,1,29,1,459,1,540,1]
,"accessed":[11,1,12,1,24,1,50,3,56,1,216,1,224,1,243,1,263,1,381,1,395,1,414,1,427,1]
,"getting":[11,1,127,2,129,1,130,1,211,1,268,1,378,1,381,1,451,1,453,1,471,1,518,1,520,1,522,1,595,1,633,1,636,1]
,"started":[11,1,127,2,129,1,130,1,211,1,215,1,216,1,315,1,320,1,351,1,451,2,453,1,471,2,472,1,516,1,518,1,520,1,522,1]
,"certain":[11,1,12,1,39,2,40,1,64,1,130,2,222,1,291,1,308,1,377,1,413,1,454,2,457,1,478,1,481,1,485,3,486,1,508,1,517,2,531,3,549,1,558,1,566,1,595,1,602,1,612,1]
,"facilitate":[11,1,394,1,575,1]
,"seamless":[11,1]
,"integration":[11,1,18,1,460,1]
,"interfaces":[11,1,20,1,457,1,460,1]
,"data-source-aware":[11,3,13,1,16,2,17,6,22,1,24,1,45,1,46,2,47,4,49,2,55,2,56,9,77,2,88,1,89,1,162,1,164,1,166,1,168,1,172,1,199,1,213,2,223,9,241,1]
,"detail":[11,1,102,1,481,1,489,1,492,1,495,1,498,1,524,1,541,1]
,"later":[11,1,13,1,32,1,47,1,120,1,121,1,127,1,216,1,229,1,238,1,243,1,295,1,296,1,481,1,553,1]
,"behavior":[12,1,16,1,45,1,52,1,75,1,127,1,130,1,222,1,226,1,266,1,289,2,332,1,354,1,411,2,427,1,454,1,462,1,472,1,477,1,478,2,489,2,495,1,500,1,515,1,576,1,596,1]
,"customized":[12,1,17,1,18,1,52,1,57,1,73,1,74,1,75,1,322,4,339,1,354,3,395,1,396,1,397,1,411,1,451,1,470,1,558,1,559,1,571,1]
,"defining":[12,1,23,1,25,1,56,1,73,2,75,3,108,1,126,2,127,2,128,1,129,1,141,1,142,1,143,2,152,2,156,4,157,1,158,3,194,1,218,1,223,3,227,1,237,3,241,5,243,3,246,1,248,1,250,1,253,2,256,1,270,1,271,2,279,1,280,2,281,1,283,1,297,2,299,1,300,1,336,8,337,1,338,3,339,1,340,6,341,1,345,4,347,2,348,1,349,1,377,2,403,1,407,2,409,7,413,2,414,1,415,1,439,2,451,1,461,2,499,1,516,2,596,2,600,1,621,1,623,1,624,2,626,1,627,1,629,1,633,1,635,1,639,1,640,1,643,4,644,1]
,"callback":[12,8,16,1,29,2,52,27,53,1,57,4,65,1,73,9,74,3,75,27,122,1,127,3,142,1,146,4,176,1,177,2,181,1,222,5,223,1,226,2,227,11,228,1,283,5,284,4,289,3,291,2,333,3,355,1,361,1,372,4,409,9,439,1,440,2,635,1,637,2]
,"attaching":[12,1,287,2,290,1,291,1,436,1,462,2,472,1,515,1,545,1,552,1]
,"able":[12,1,52,1,105,1,127,1,130,1,131,1,237,1,295,1,336,1,351,1,353,1,454,1,504,1,526,1,534,1,553,1,554,1,557,1,572,2,583,1,592,1,609,1]
,"trigger":[12,1,376,1,427,2,428,1,431,1,433,2,435,1]
,"bottom":[12,1,88,2,148,1,156,1,158,1,169,1,187,1,189,1,222,2,224,1,226,2,227,1,230,1,260,3,262,1,267,1,284,1,288,1,291,1,331,1,340,1,342,1,364,2,398,1,413,1,479,1,481,2,482,7,483,5,486,3,487,1,488,2,489,8,490,1,531,2,633,1]
,"field":[12,1,49,3,59,1,60,1,69,1,70,1,72,10,86,1,87,6,88,1,93,2,97,2,129,2,130,1,142,3,146,1,148,2,149,1,150,1,155,1,157,7,162,1,163,7,164,1,165,11,167,6,168,1,169,7,171,4,173,3,179,1,185,3,187,10,189,8,202,1,207,1,218,4,223,3,225,3,232,1,236,2,237,3,243,2,245,2,250,1,251,1,253,1,256,2,257,4,258,2,260,5,261,1,262,3,263,1,265,1,271,1,280,1,282,2,283,5,284,1,288,1,289,8,291,2,299,1,300,1,301,2,309,1,316,6,325,1,336,12,338,6,339,2,340,7,341,1,342,2,345,2,346,1,348,1,349,2,350,2,351,2,457,1,500,2,529,3,530,1,536,1,635,3,643,2]
,"primary":[12,1,22,1,24,4,43,1,45,1,110,1,121,1,128,1,131,4,233,2,298,1]
,"selected":[12,1,52,2,87,4,108,1,113,1,129,1,144,5,146,1,148,1,149,2,150,1,154,8,156,3,157,8,158,2,161,4,163,3,165,1,166,1,167,3,169,1,171,3,173,3,175,1,179,1,181,1,185,3,187,5,189,7,193,12,195,42,222,4,223,5,225,1,226,1,227,1,230,3,237,1,243,4,244,5,246,2,248,1,257,1,258,1,260,1,261,1,262,1,264,3,273,1,274,1,283,1,288,3,289,3,291,5,300,1,301,1,316,2,317,2,321,1,322,1,325,12,327,1,328,1,329,1,330,2,331,3,333,1,336,27,337,1,338,3,339,2,340,12,341,5,345,2,346,2,348,2,349,4,350,3,351,1,427,1,435,8,454,2,474,2,489,4,495,1,498,1,529,1,537,3,538,1,598,2,606,1,612,1,624,1,641,1]
,"however":[12,1,13,1,16,1,21,1,22,1,24,1,28,3,29,1,47,1,48,1,52,1,56,1,75,1,82,2,84,1,87,4,91,1,95,1,96,1,112,1,120,1,122,1,126,1,130,1,133,1,145,1,146,1,203,1,224,1,234,1,250,2,255,1,273,1,310,1,336,1,338,1,339,2,343,1,345,1,346,1,360,1,365,1,368,3,369,1,372,1,376,1,380,1,394,2,395,1,396,1,398,1,399,1,401,1,403,1,404,1,407,2,409,3,411,1,414,1,421,1,424,2,428,1,430,1,432,1,435,1,439,1,457,2,458,1,465,1,481,2,482,2,484,2,486,1,489,4,502,1,504,1,506,2,510,1,513,1,517,1,537,1,543,1,549,1,557,1,558,1,567,1,569,1,572,1,576,1,579,1,596,1,600,1,622,2,623,1,631,1,643,1]
,"last":[12,1,64,1,110,1,135,3,161,3,246,3,257,1,286,1,324,1,336,2,351,1,365,1,372,1,376,1,402,1,403,1,411,2,462,1,466,5,482,1,498,1,500,1,504,1,515,1,517,1,552,1,553,1,600,1,611,1,637,1,640,2]
,"page":[12,1,72,6,88,6,94,1,105,1,126,2,127,1,130,2,145,3,146,1,156,29,158,24,161,11,163,12,165,12,167,13,169,11,171,14,173,12,175,11,177,6,179,21,181,15,183,10,185,12,187,15,189,15,191,22,193,15,195,17,218,1,223,1,225,3,227,2,228,1,236,1,237,1,247,2,248,2,250,2,252,2,253,1,255,3,258,4,271,1,281,2,282,8,283,1,288,3,289,5,291,1,300,1,320,1,324,9,325,5,326,3,327,4,328,5,329,4,330,4,331,5,332,6,333,5,334,5,336,25,337,2,338,5,339,5,340,5,341,8,342,2,345,8,346,5,348,3,349,3,350,3,351,2,370,1,526,7,528,2,529,3,530,2,534,4,537,8,538,4,563,1,566,1,569,1]
,"various":[12,1,88,2,141,3,143,2,147,1,157,2,194,1,195,2,213,1,222,1,223,2,232,1,241,1,259,1,282,1,283,1,304,1,322,1,324,1,330,1,354,1,367,1,453,1,458,1,459,1,474,1,476,1,478,3,479,2,481,1,520,1,524,1,537,1,538,1,540,1,541,1,556,1,559,1,606,1]
,"inspectors":[12,1,22,1,94,1,140,2,145,3,146,2,147,2,150,1,323,1]
,"(the":[12,1,39,1,43,1,47,1,105,1,156,1,158,1,216,1,227,1,230,2,234,1,245,1,289,1,322,1,364,2,367,1,379,1,462,1,466,2,467,2,468,2,478,1,480,1,482,4,483,1,487,2,489,8,490,1,498,1,517,1,534,1,557,1,562,1,568,1,583,1,597,1,619,1,641,2,642,1]
,"exception":[12,1,612,1,614,1,616,2]
,"inspector":[12,1,22,1,75,1,87,5,89,2,90,1,92,1,95,3,96,1,97,2,100,1,105,5,108,1,119,1,121,2,126,2,127,3,129,2,130,1,131,1,144,1,145,1,148,1,149,1,150,1,153,1,154,2,155,1,156,4,157,8,158,9,161,3,163,2,165,2,167,3,169,3,171,2,173,2,175,2,177,2,179,3,181,3,183,2,185,2,187,3,189,3,191,3,193,3,195,3,216,5,218,4,219,1,220,2,222,1,223,1,225,6,226,3,227,5,228,2,236,4,243,5,244,1,245,3,246,4,247,3,248,1,250,5,251,2,252,2,253,5,254,2,255,5,257,1,258,6,260,1,263,1,264,1,265,5,267,4,271,7,272,1,273,5,274,2,275,3,280,4,281,3,282,6,283,6,284,1,288,3,289,15,290,1,291,3,299,3,300,6,301,2,320,4,323,4,324,7,325,3,326,1,327,1,328,1,329,1,330,1,331,1,332,2,333,1,334,5,336,10,337,1,339,3,340,7,341,3,342,3,345,5,346,3,348,4,349,2,350,1,351,1,372,2,455,1,474,2,487,1,490,1]
,"item":[12,1,71,1,142,2,146,2,156,2,157,16,158,2,163,2,166,1,167,2,187,7,189,18,222,3,223,2,244,1,246,4,255,1,260,1,283,1,287,1,288,12,289,17,290,5,291,17,325,6,334,3,339,1,375,7,377,6,392,3,393,1,397,1,417,4,418,1,438,8,541,1]
,"menu.)":[12,1,474,1]
,"box":[12,1,24,1,57,1,60,1,73,1,88,5,91,3,93,1,99,4,108,1,121,1,127,2,132,1,137,2,144,1,145,6,146,3,147,3,148,4,149,6,150,5,154,9,156,3,157,39,158,3,161,4,163,2,165,2,167,17,169,2,171,4,175,1,179,3,183,1,187,9,189,13,193,5,195,6,223,1,225,2,226,1,229,1,236,2,237,2,238,2,240,1,243,4,245,2,246,3,247,1,251,1,253,2,254,1,255,1,256,1,257,1,261,1,264,4,265,2,271,1,281,2,282,6,288,2,289,5,300,1,316,4,331,7,333,2,336,5,338,1,339,3,340,1,364,1,365,1,367,1,368,1,369,1,379,9,380,2,394,1,428,2,511,1,513,3,528,1,529,1,530,2,531,1,534,1,536,2,553,3]
,"choose":[12,1,39,2,88,2,108,1,141,1,148,1,149,1,218,3,220,1,222,2,224,1,225,4,226,3,227,1,228,1,229,3,236,3,237,1,238,1,239,1,240,1,243,4,247,1,253,2,256,1,257,1,258,1,260,1,261,2,263,1,264,3,267,2,271,2,273,2,280,2,281,3,282,5,283,1,288,1,289,1,294,3,299,1,316,2,332,1,336,1,340,1,341,1,346,2,411,1,459,1,460,1,469,1,479,1,480,1,488,1,524,1,526,2,528,3,529,1,530,3,532,1,534,3,536,2,537,1,539,3,602,1]
,"whether":[12,1,24,6,56,2,87,1,122,3,134,1,135,1,157,1,187,4,189,3,193,1,222,1,225,1,227,1,282,1,283,1,316,2,328,1,330,5,332,1,334,2,363,1,365,2,369,2,375,1,376,2,377,1,384,1,395,2,403,1,409,2,410,2,413,1,414,1,418,2,454,1,462,4,463,3,464,2,465,1,466,1,467,1,468,1,469,1,476,1,481,1,483,1,489,1,502,1,504,1,507,1,508,1,511,1,517,1,526,1,529,1,544,1,549,1,557,2,570,1,619,2,640,2,641,1,642,1]
,"coded":[12,1,20,1,52,1,459,1,584,1]
,"manuals":[12,1,460,1]
,"rest":[12,1,108,1,411,1,459,1]
,"summarizes":[13,1]
,"fundamental":[13,1,20,1]
,"formats":[13,1,17,2,156,2,158,2,163,2,165,2,167,2,189,1,195,1,200,2,202,10,203,2,204,3,205,2,207,2,209,1,211,1,225,1,282,9,309,7,310,2,311,3,312,2,446,1,520,1,524,1,540,2,557,5,560,1,572,2,580,1,584,2,599,1]
,"masks":[13,1,17,4,156,2,158,2,201,2,207,8,208,1,209,4]
,"integrating":[13,1,18,1,631,1,635,1]
,"advanced":[13,1,18,2,405,1,413,3,451,1,461,2,499,2,502,1,600,2]
,"represent":[14,3,73,1,77,1,116,1,200,1,204,1,242,2,257,1,311,1,328,1,332,1,336,10,338,5,339,1,340,5,341,1,342,2,343,5,344,1,345,1,346,3,347,2,348,1,349,1,350,1,359,2,360,1,361,2,362,4,365,3,367,1,369,1,372,3,379,1,383,1,384,1,395,1,398,1,399,1,406,2,408,1,410,1,411,1,420,1,436,1,498,1,540,5,544,1,576,1,598,1,600,2,602,1,606,1,613,1,622,1]
,"(for":[14,1,45,1,51,2,105,1,113,1,121,1,127,1,133,1,157,1,177,1,316,1,368,1,370,1,380,1,394,1,396,1,397,2,424,1,462,1,481,3,482,1,486,1,489,3,492,2,495,5,498,4,501,1,511,1,516,1,517,2,528,1,539,1,597,1,606,1]
,"double":[14,1,73,1,156,2,158,1,198,1,204,1,206,1,246,1,311,1,403,1,443,4,446,2,450,1,553,1,611,2,616,1,628,2,636,1]
,"char*":[14,1]
,"uniform":[14,1,453,1,481,1,551,1]
,"independently":[14,1,24,1,161,2,356,1,364,2,417,1,419,1,481,1,483,1,489,1,515,1]
,"whose":[14,1,24,1,27,1,29,1,84,1,104,1,110,1,130,1,142,1,154,1,157,1,162,1,179,1,223,1,232,1,247,3,248,6,274,1,275,12,282,1,334,1,343,1,346,2,493,1,520,1,547,3,548,1,550,1,553,2,557,3,563,1,569,1,572,1,596,1,597,1,632,1,633,1]
,"real":[14,1,108,1,227,1,233,1,383,7,384,1,385,1,386,1,387,1,388,1,389,1,390,1,391,1,392,1,393,1,394,2,395,1,396,1,397,1,398,2,399,2,481,1,486,1,613,1]
,"known":[14,1,15,1,17,1,54,2,110,1,457,3,458,1,548,1,553,1,557,1,560,1,572,1,584,1,585,2,591,1]
,"compile":[14,1,136,1,229,1,234,1,294,1,472,1,473,2,536,1,608,4,634,3]
,"ilidatatype":[14,1,77,1,80,2,84,3]
,"defines":[14,1,15,1,17,1,20,3,24,1,25,1,34,1,35,1,36,1,37,1,40,1,47,1,52,1,59,1,60,1,61,1,62,1,63,1,68,1,69,1,70,1,71,2,72,1,103,1,107,1,126,1,156,2,197,1,209,1,216,1,362,1,398,1,399,1,445,1,447,1,463,3,466,1,502,1,507,1,544,1,571,1,572,1,580,1,623,1,624,4,627,1,629,1,640,1]
,"dynamic":[14,1,57,1,77,1,157,2,179,1,181,2,216,1,308,1,424,1,473,1,595,2]
,"remote":[14,1,15,2,21,3,28,2,34,1,39,1,52,1,103,1,133,2,157,2]
,"ilisqlsession":[14,1,30,1,107,1,108,1,122,1,133,8,134,3,135,3,136,1,137,2,138,5]
,"ilisqlcurso":[14,1]
,"high-level":[14,1,453,2,540,1]
,"themselves":[14,1,291,1,336,1,340,1,453,1,460,1,480,1,549,1]
,"ilitable":[15,3,16,1,19,2,20,9,21,1,23,1,24,4,25,2,26,1,27,10,28,12,29,1,32,2,33,1,38,2,39,5,40,2,42,4,43,5,47,2,48,2,51,2,52,1,53,1,84,5,89,2,112,2,119,1,120,6,124,1]
,"abstract":[15,2,20,1,25,1,461,1,462,2,504,1,505,1,506,1,513,1,516,1,541,3,546,1,547,1,549,1,551,1,552,1,553,2,557,1,571,2,572,1,585,1,591,1,596,1,610,1,639,1]
,"resembles":[15,1,104,1,350,1]
,"ordered":[15,3,24,1,104,1,135,1,489,1]
,"collection":[15,3,20,1,24,1,104,1,121,1,135,1,402,7]
,"columns":[15,3,20,1,23,1,24,7,25,2,27,1,37,1,44,1,45,1,51,2,52,3,57,6,71,1,72,1,84,1,85,1,87,1,88,5,91,2,94,1,95,5,97,10,99,1,105,6,106,1,115,1,121,2,124,2,128,1,129,4,130,4,131,2,135,1,154,3,156,15,157,6,158,5,161,5,163,1,167,5,171,1,173,1,185,1,187,1,191,1,195,1,216,1,219,2,243,5,244,2,245,1,246,4,248,2,250,1,251,1,253,1,254,1,255,2,256,1,265,2,271,2,273,6,274,7,275,2,276,2,280,2,299,1,300,1,316,2,537,1,538,1,577,3,596,1]
,"once":[15,1,17,1,22,1,29,1,39,6,51,1,75,1,105,1,112,2,121,1,134,1,135,2,157,1,200,1,218,1,220,1,230,1,246,1,251,1,289,1,324,1,329,1,334,1,336,4,337,1,339,1,340,2,365,1,376,1,395,1,400,1,402,1,440,1,449,1,524,1,526,1,530,1,536,1,548,1,553,1,560,1,587,1,597,4,636,1]
,"manage":[15,1,21,4,22,3,26,1,36,1,43,2,48,2,51,1,84,2,87,1,191,1,197,1,360,1,367,1,368,1,373,2,374,1,436,2,559,1,643,1]
,"rows":[15,4,19,1,20,3,21,4,22,3,24,2,25,2,26,2,27,1,28,16,29,1,31,1,34,1,35,1,36,1,37,1,39,4,44,1,45,2,47,1,51,3,52,4,57,2,64,2,84,1,103,1,104,7,105,4,110,3,111,1,112,12,113,1,117,4,122,3,131,2,135,3,142,1,155,1,156,4,157,6,158,3,161,2,163,1,167,1,174,1,216,1,223,1,246,6,247,1,248,5,256,1,273,1,274,7,300,1,325,1,348,1,577,3,597,1]
,"row":[15,2,21,1,24,1,26,1,27,23,28,12,31,1,32,2,33,1,39,13,43,1,44,4,45,3,47,2,51,20,52,18,56,3,57,4,63,1,64,3,71,1,73,2,84,2,88,1,91,5,99,3,105,13,110,2,112,1,113,4,114,2,115,1,117,2,118,4,120,4,121,4,124,1,131,4,135,6,155,1,156,22,157,5,158,5,161,20,163,1,167,1,171,1,173,1,175,13,185,1,187,1,191,1,210,1,218,1,237,1,246,19,247,1,248,5,256,1,257,2,258,1,264,1,273,1,276,1,281,4,300,2,301,1,316,2,325,4,348,3,498,2,562,5,567,2,577,3,586,3,587,1,597,1]
,"conform":[15,1,20,1,443,1]
,"sense":[15,1,467,1,468,1]
,"itself":[15,1,43,1,53,1,57,1,216,1,288,1,486,1,501,1,504,1,560,1,582,1,597,1,612,1]
,"specialized":[15,1,19,1,20,1,29,2,33,1,576,2]
,"implementations":[15,1,507,1,559,1,595,1]
,"stores":[15,2,20,1,21,1,27,1,28,1,361,1,364,1,368,2,372,1,402,4,472,1,473,1,500,1,545,1,577,1,583,1,635,1]
,"ilimemorytable":[15,1,20,1,21,1,22,2,25,4,33,1,35,2,36,1,37,1,48,2,84,1,89,1,120,1,121,5]
,"process":[15,2,21,3,25,1,28,1,53,1,105,1,120,1,135,1,319,1,367,1,424,1,455,2,487,3,492,1,506,1,540,1,541,2,553,3,575,2,636,1]
,"memory":[15,1,21,1,25,3,27,1,35,4,48,1,90,1,94,1,110,1,121,2,124,9,127,14,142,1,158,10,197,1,216,1,223,1,241,2,242,1,250,17,251,5,252,3,263,1,275,3,276,9,361,1,372,2,486,1,526,1,552,2,559,1,560,2,564,3,566,1,567,1,568,2,569,1]
,"space":[15,2,21,1,25,1,120,1,141,1,155,1,161,2,208,1,216,2,220,2,222,6,223,3,226,2,227,1,230,1,240,2,242,1,243,1,256,2,258,1,261,1,262,3,264,2,267,2,282,1,288,2,322,1,323,1,331,1,332,1,334,2,336,1,370,1,379,1,418,2,482,1,484,3,491,1,497,1,498,1,517,1,559,1]
,"new":[15,1,24,1,27,2,39,2,51,2,52,1,56,5,64,3,73,2,80,1,91,2,95,1,99,1,105,4,121,2,127,1,130,1,155,1,157,1,158,2,191,1,193,1,197,1,222,2,224,3,225,2,226,2,227,1,228,3,230,2,237,1,243,5,244,1,246,1,248,1,256,1,257,1,267,2,269,1,271,2,280,2,283,2,288,3,291,4,297,1,299,2,307,1,316,1,317,2,322,1,323,2,325,7,332,7,336,5,339,2,354,1,366,1,372,1,375,5,376,4,377,9,394,5,398,2,402,1,412,1,418,2,438,8,439,2,440,8,450,2,451,1,454,1,461,3,462,1,469,2,474,1,482,1,486,1,489,2,495,2,498,2,499,1,500,1,504,2,516,8,517,2,528,1,537,2,543,1,546,1,548,1,551,1,552,1,553,4,557,3,559,4,560,3,564,1,568,1,569,3,571,2,572,2,576,1,597,1,600,1,601,2,621,1,623,1,624,1,625,1,636,1,638,1,639,2,640,2,643,14,644,1]
,"feeds":[15,1]
,"instances)":[15,1]
,"confused":[15,1,16,1]
,"entities":[15,1,457,1]
,"respectively":[15,1,226,1,242,1,329,1,339,1,346,1,359,1,372,2,411,1,493,1,577,1]
,"represents":[15,1,121,1,156,1,198,1,218,2,331,1,336,1,339,1,343,1,345,1,359,1,364,5,366,1,368,1,369,2,379,1,383,2,406,1,410,1,457,1,497,1,498,6,541,1,542,1]
,"address":[15,1,114,1,115,3,119,1]
,"serve":[15,1,24,1,533,1]
,"bridge":[15,1,16,1,28,3,503,1]
,"(or":[15,1,16,1,17,1,20,1,74,1,84,1,97,1,157,1,208,2,247,1,250,1,360,1,377,2,461,1,462,1,465,1,466,1,469,1,474,1,482,1,492,2,535,1,619,1]
,"queries)":[15,1]
,"executed)":[15,1]
,"remotely":[15,1]
,"speaking":[16,1,457,1,486,1,511,1,512,1]
,"indicates":[16,1,24,9,87,1,157,1,193,1,222,1,274,1,340,1,360,1,365,4,376,1,413,1,423,2,428,1,477,1,481,1,558,1,579,1,640,1]
,"feed":[16,1]
,"ilidatasource":[16,3,47,2,48,3,51,1,52,2,118,1,124,4]
,"serves":[16,1,20,1,25,1,28,2,139,1]
,"input":[16,1,17,1,24,1,87,2,122,1,127,7,156,1,158,1,163,2,165,2,167,2,201,5,207,6,571,1,628,1,635,1,637,2,639,1,640,1]
,"displaying":[16,1,99,1,142,8,143,1,156,1,160,1,162,1,164,1,166,2,168,1,182,1,193,1,201,1,211,1,213,1,216,1,223,9,330,3,336,1,345,1,354,2,370,1,383,1,385,1,386,1,387,1,388,1,389,1,390,1,391,1,392,1,393,1,396,1,397,5,398,2,402,4,403,1,405,1,410,2,416,4,417,1,420,1,423,4,424,1,501,1,526,1,529,1,531,1,534,1,537,1,538,1,540,1,558,1,559,1,564,1,581,1]
,"styles":[16,1,58,2,86,1,87,3,163,1,459,1,482,1,489,5,492,1,553,1,598,3,600,3]
,"next":[16,1,25,1,49,1,52,1,64,1,82,2,135,3,156,1,158,1,163,1,165,1,167,1,171,2,173,1,201,1,208,1,223,1,224,1,237,1,245,1,246,2,254,1,257,1,258,1,264,1,284,1,289,1,295,1,305,1,316,1,324,1,330,1,336,5,338,1,339,1,340,2,345,2,348,1,349,1,365,2,369,1,394,1,397,1,399,2,402,3,408,1,436,1,439,1,444,1,486,2,489,2,498,1,531,1,534,1,549,1,550,1,560,4]
,"instances":[16,2,25,1,34,1,39,1,230,1,293,1,322,1,332,1,361,2,363,1,368,4,372,2,377,2,394,1,404,1,415,1,417,1,427,4,460,4,482,1,495,1,498,1,504,1,553,1,583,2]
,"general":[16,1,72,2,75,1,145,3,155,1,158,3,161,3,163,3,165,3,167,3,169,3,171,3,173,3,175,3,179,3,181,3,183,3,185,3,187,3,189,3,191,3,193,3,195,3,212,2,222,1,224,2,225,1,227,1,228,1,230,1,236,1,250,1,289,2,316,1,324,3,326,3,330,1,332,1,334,3,336,8,338,1,339,2,342,1,345,1,350,1,351,1,358,1,360,2,378,1,380,1,383,1,384,1,394,1,396,1,402,1,407,1,409,1,418,2,421,1,424,1,457,1,458,1,476,1,481,1,483,2,484,2,489,1,492,1,495,1,498,1,558,1,582,1]
,"meaning":[16,1,202,1,207,1,309,1,385,1,386,1,388,1,392,1,481,1,553,1,575,1,612,1]
,"visible":[16,2,24,1,47,2,72,3,95,2,156,2,158,2,161,1,187,5,189,6,230,1,247,2,258,2,267,1,292,1,294,1,339,1,380,1,407,2,526,1,528,1,531,7,533,2,534,3,558,5,560,6,564,3,566,4,586,1,592,1,600,1]
,"edited":[16,1,24,1,57,1,64,1,99,1,108,1,115,1,121,1,131,1,156,2,157,2,158,4,161,2,163,2,165,2,167,2,169,2,173,2,187,2,193,2,195,2,222,2,224,1,230,1,239,2,246,1,316,1]
,"supports":[16,1,37,1,43,1,54,1,57,1,75,1,77,1,112,1,122,1,193,1,201,1,463,2,464,1,465,1,466,1,467,1,468,1,469,1,481,1,486,1,487,1,489,2,490,3,492,1,495,1,498,1,517,1,575,1,595,1,640,4]
,"customize":[16,1,52,3,64,1,87,1,244,1,319,1,320,1,323,1,324,1,334,2,335,1,336,4,337,2,338,1,339,3,341,10,349,2,350,1,364,1,365,6,366,4,369,2,401,1,402,1,463,1,477,1,547,2,600,1]
,"needs":[16,1,17,1,22,2,45,1,52,1,57,1,64,1,74,2,122,1,135,1,177,1,201,1,243,1,271,1,324,1,336,1,367,1,370,2,383,1,400,1,449,1,458,1,460,1,476,1,477,1,481,1,488,1,504,1,507,2,512,1,516,1,520,2,550,1,560,1]
,"rules":[16,1,17,1,50,1,54,1,200,1,360,3,374,1,459,1,509,1,515,1,557,1]
,"seamlessly":[17,1,20,1]
,"integrated":[17,1,42,1,215,1,216,1,283,1]
,"inherits":[17,1,20,1,24,1,29,1,47,1,56,1,95,1,387,1,389,1,391,1,393,1,397,1,417,1,427,1,432,1,433,1,434,1,435,1,545,1,610,1]
,"multiple":[17,1,87,1,105,3,110,1,187,1,248,1,273,1,460,2,487,2,490,1,492,2,526,1,560,1]
,"inheritance":[17,1]
,"paths":[17,1,224,1]
,"ilifielditf":[17,3,55,1,56,6,89,1]
,"querying":[17,1,64,1,245,1,257,1]
,"changing":[17,1,26,1,30,1,45,1,51,3,87,2,264,1,271,1,301,1,339,4,377,1,413,4,478,2,479,1,531,1,534,1]
,"value":[17,1,24,10,27,3,28,1,43,1,44,2,45,4,47,1,51,2,52,3,56,11,57,6,62,1,72,5,77,3,78,5,79,9,81,1,82,9,83,2,84,3,86,1,87,9,88,3,90,7,91,13,92,1,99,3,100,6,105,1,116,1,119,1,121,1,124,2,125,1,127,6,135,4,146,3,149,1,156,11,157,1,158,7,163,12,165,3,167,10,169,2,171,6,173,6,177,2,179,1,185,6,187,7,189,3,195,15,197,2,200,1,201,2,202,1,203,4,204,4,205,2,206,2,207,1,208,4,209,2,252,4,257,1,261,1,274,3,276,3,282,1,309,1,310,4,311,4,312,2,313,2,316,2,330,1,333,2,336,8,338,4,339,7,340,2,345,11,346,2,348,2,349,2,351,2,364,4,365,3,369,1,370,4,377,5,380,1,383,1,384,1,385,1,386,1,390,1,391,1,392,5,394,5,396,1,397,1,398,2,402,1,403,3,407,11,409,5,410,1,411,2,413,2,418,1,419,2,421,1,423,4,424,4,425,1,438,1,439,1,443,2,447,1,449,1,450,3,454,2,462,1,463,1,464,2,465,2,467,1,468,1,469,10,470,3,477,1,481,6,482,5,483,1,484,1,485,1,489,7,492,13,495,6,498,10,501,1,504,2,510,2,511,1,516,2,517,3,526,1,529,2,530,1,536,1,548,3,558,2,562,1,566,2,579,3,581,1,597,3,600,1,612,1,624,1,640,3,641,1,642,5,644,1]
,"ilientryfield":[17,1,45,1,49,3,55,1,56,3,57,1,59,3,142,1,159,1,164,2,165,1,223,1]
,"ilvtextfield":[17,2,56,2,635,3]
,"superclasses":[17,1]
,"according":[17,3,127,3,205,1,246,1,265,1,271,1,312,1,375,1,402,2,403,2,439,1,449,1,479,1,480,2,485,1,498,4,513,1,515,1,526,1,533,1,534,1,544,1,548,1,557,1,558,1,560,1,564,1,583,1,600,1,606,1]
,"specifies":[17,1,24,9,45,1,80,1,136,1,145,1,156,2,157,1,334,3,336,1,364,1,368,1,482,2,489,2,498,1,534,1,549,2,558,1,619,2,628,1]
,"floating-point":[17,1,544,1]
,"numbers":[17,1,82,1,198,2,200,1,204,1,247,1,248,1,250,2,252,3,255,3,265,4,282,1,311,1,409,1,446,1,454,1,469,1,544,1,586,1]
,"digits":[17,1,198,1,201,2,204,1,208,1,282,1,311,1,365,1,645,2]
,"decimal":[17,1,156,2,200,1,204,3,208,3,209,2,282,3,311,3,365,1,446,1]
,"point":[17,1,20,1,51,1,52,1,57,2,105,1,106,1,135,1,198,2,200,1,204,3,208,1,209,1,217,1,256,1,282,3,311,3,332,8,338,1,345,2,356,3,359,2,361,1,365,1,366,2,369,1,370,5,372,5,375,1,377,1,386,3,394,1,401,2,402,81,403,13,423,1,427,7,432,4,433,3,434,6,435,6,439,6,440,19,446,1,447,1,481,2,486,1,487,2,488,2,489,4,497,1,512,1,526,1,529,1,532,1,541,1,547,2,550,1,553,2,575,1,576,1,597,2,600,1,607,1,613,1,619,4,631,2,632,2,641,2,643,3]
,"convert":[17,1,56,2,57,1,91,4,127,1,135,1,163,1,171,1,173,1,185,1,187,1,338,1,343,1,344,1,345,2,368,1,409,1,526,1,547,1,586,2,611,1,620,1,627,1,632,1,635,1,636,3,637,1]
,"character-string":[17,1]
,"representation":[17,1,154,1,157,1,243,1,316,2,332,4,334,1,335,1,339,5,343,1,355,1,360,2,364,2,370,1,372,1,383,3,398,3,399,1,400,1,402,3,403,5,417,1,432,1,440,4,457,2,458,1,541,1,602,1]
,"alternatively":[17,1,29,1,54,1,105,1,112,1,114,1,124,1,138,1,243,1,246,1,273,1,276,1]
,"configure":[17,1,73,1,598,1]
,"formatted":[17,1,83,1,156,1,158,1,200,1,202,1,204,2,205,1,207,1,309,1,311,2,312,1,346,1,409,1,598,1]
,"specification":[17,4,45,2,152,2,200,1,201,1,202,2,203,3,204,1,206,1,207,1,309,2,310,3,311,1,313,1,454,1,464,1,517,1,590,1]
,"similar":[17,1,28,1,36,1,37,1,53,1,73,2,87,1,201,1,254,1,266,1,336,1,364,1,372,1,473,1,479,1,481,1,486,1,489,1,504,1,537,1]
,"addition":[17,1,24,1,27,1,44,1,45,1,53,1,80,1,88,1,91,1,92,1,105,1,119,1,122,1,127,1,158,1,161,1,167,1,169,1,179,1,181,1,187,1,189,1,193,1,195,1,201,1,244,1,256,1,274,1,317,1,339,1,359,1,365,1,367,1,376,2,394,1,439,1,440,1,454,1,458,1,501,1,510,1,577,1]
,"application-defined":[17,1,122,1]
,"constraints":[17,1,27,1,74,1,195,5,491,1]
,"entered":[17,1,87,4,92,1,105,1,124,1,127,1,129,1,156,11,157,1,158,8,163,5,165,1,167,2,177,1,183,1,201,1,245,1,251,1,254,1,260,1,276,1,282,1,316,2,332,1]
,"permit":[17,1,457,1]
,"enter":[17,1,24,1,52,1,72,3,75,1,97,1,105,6,126,1,127,3,129,2,137,1,146,1,156,4,157,1,158,4,163,4,167,4,179,1,208,1,225,3,227,1,229,1,232,1,237,1,245,1,251,2,252,3,254,1,256,1,276,1,283,4,284,1,291,2,301,2,316,2,327,1,328,1,336,11,338,2,340,4,341,2,342,1,345,2,346,1,348,3,349,2,350,1,351,1,536,1,537,1]
,"within":[17,1,20,1,24,3,27,1,31,1,40,1,53,1,57,1,63,1,75,1,105,1,129,1,156,1,158,1,171,1,183,1,216,1,224,1,230,1,243,1,263,1,265,1,267,1,289,1,331,7,339,1,356,1,360,1,365,2,367,2,368,1,370,1,372,2,373,1,379,11,383,1,398,1,399,1,406,1,414,1,420,1,428,1,432,1,466,1,478,1,479,1,488,5,489,8,520,1,524,1,527,1,531,2,534,1,554,1,557,1,566,1,572,1,575,1]
,"appendix":[17,1,196,1,201,1,202,2,207,3,210,1,216,1,282,1,303,1,309,1,314,2,318,1,442,1]
,"iliinputmaskipl":[17,1,201,5]
,"subclassed":[17,1,20,1,29,1,377,1]
,"purpose":[17,1,52,1,223,1,336,1]
,"interesting":[18,1,597,1]
,"linked":[18,1,87,3,88,2,97,1,127,1,130,1,189,1,195,4,356,1,359,1,401,1]
,"originating":[18,1]
,"figure":[18,1,88,1,127,2,215,1,237,1,243,1,245,1,246,1,251,1,254,1,260,1,263,1,265,1,282,2,283,1,288,1,316,2,338,1,367,1,374,1,376,1,379,1,480,3,484,1,489,1,503,1,529,1,541,1,560,1,563,1,564,1,603,1,619,1]
,"tab":[19,1,72,4,222,1,226,1,246,1,252,1,262,2,283,1,324,1,334,1,336,12,337,2,338,3,340,2,341,3,342,1,345,3,346,1,350,1,351,1,526,2]
,"les":[19,1]
,"manipulated":[19,1,262,1]
,"via":[19,1,64,1,93,1,95,2,99,1,105,1,113,1,125,1,127,1,216,1,224,1,453,1,503,1,565,1,567,1,642,2]
,"discusses":[19,1,85,1,540,1]
,"ilischema":[19,1,20,2,23,1,24,1,25,5,135,1]
,"relationship":[19,1,20,1,44,1,142,1,223,1,274,1,367,1,453,1,503,1]
,"one-tier":[19,1,21,3,28,1,35,1,36,1,37,1]
,"two-tier":[19,1,21,4,26,2,28,8,32,2,34,1,39,2,51,1,52,1]
,"role":[19,1,20,1,22,2,489,2,503,1,507,1,564,1]
,"schemas":[19,1,23,1]
,"managing":[19,1,20,2,26,1,28,2,34,1,35,1,47,1,51,2,56,1,142,1,223,1,520,2,559,1,568,1]
,"hook":[19,1,31,3,39,1]
,"copying":[19,1,32,1,308,1]
,"serializing":[19,1,32,1]
,"subclassing":[19,1,28,1,38,2,39,1,40,1,56,1,200,1,201,1,377,1,462,1,463,1,516,1,560,1]
,"plays":[20,1,503,1]
,"central":[20,1,612,1,619,2,641,1,642,1]
,"purposes":[20,1,89,1,142,1,143,1,223,1,250,1,523,1]
,"modelling":[20,1]
,"structuring":[20,1]
,"intensive":[20,1]
,"unrelated":[20,1,50,1,486,2]
,"programming":[20,1,122,2]
,"model":[20,1,72,1,179,2,181,7,189,6,191,17,195,9,233,1,298,1,395,8,398,4,399,3,451,1,457,1,482,3,489,3,492,3,495,3,498,3,499,1,502,3,503,8,504,5,506,1,507,1,510,1,512,2,516,4,536,2,537,1,541,1,542,1,543,1,548,1,549,4,578,1,579,1,580,1,581,2,583,2,595,3,596,3,597,2,619,1]
,"graphically":[20,1,129,1,359,1,541,1]
,"terms":[20,2,125,1,156,2,458,1,510,1,543,1]
,"connectivity":[20,1]
,"exchanged":[20,1,39,1]
,"exchange":[20,1,575,1]
,"terminology":[20,1]
,"designates":[20,2,121,2,133,1,225,1,614,1]
,"managed":[20,1,22,1,28,2,35,1,51,1,56,1,57,1,120,2,201,1,360,1,361,3,368,1,372,3,400,1,402,1,436,2,500,1,507,1,508,1,560,1,571,1]
,"view":[20,1,51,1,137,1,154,1,157,3,212,1,243,1,263,1,264,5,273,2,292,1,454,1,462,1,466,10,484,2,495,4,498,4,510,1,512,1,514,8,515,8,529,1,531,1,534,1,559,3,560,1,563,1,564,10,566,3,568,1,635,2,637,2]
,"gadget)":[20,1,29,1]
,"document":[20,1,66,1,142,1,178,1,179,7,180,1,181,3,223,1]
,"gadge":[20,1]
,"designate":[20,1,45,1]
,"capable":[20,1]
,"explained":[20,1,462,1,473,1,481,1,545,1,623,1,627,1]
,"policy":[20,1,33,1,109,1,112,4,118,1,122,1,157,1,478,1]
,"protocol":[20,2]
,"editing":[20,1,51,1,52,1,64,1,108,1,121,1,142,1,155,1,158,1,160,1,174,1,201,1,216,1,222,7,223,1,226,5,243,1,245,3,246,3,247,1,250,1,251,1,254,3,256,1,257,1,261,2,262,1,265,3,280,1,283,1,288,1,290,5,315,1,316,2,317,2,336,1,486,4,531,1]
,"inspecting":[20,1]
,"ilistringstable":[20,1,21,1,33,1,36,3]
,"ilimaptable":[20,1,33,1,37,5]
,"associated":[20,1,22,1,56,1,84,1,88,1,90,1,103,1,104,1,133,2,156,1,158,1,177,1,222,2,289,1,330,1,334,1,335,1,336,1,337,1,339,3,341,7,367,4,368,4,369,4,370,2,372,2,375,1,376,2,400,1,402,18,403,3,410,2,411,1,414,3,415,1,417,1,423,1,424,1,425,5,439,1,498,1,537,1,538,1,541,1,548,1,553,2,557,3,560,3,564,1,570,1,576,3,577,1,623,1,628,1]
,"hierarchy":[20,1,54,2,56,2,57,1,58,1,59,1,60,1,61,1,62,1,63,1,64,1,65,1,66,1,67,1,68,1,69,1,70,1,71,1,72,1,73,1,74,1,383,3,398,1,399,1,406,3,420,2,423,2]
,"ways":[21,1,24,1,28,1,39,1,54,1,75,1,78,1,82,1,87,1,112,1,218,1,232,1,282,1,294,1,354,1,361,1,365,1,366,4,373,1,375,1,380,1,398,2,402,1,411,1,459,2,466,1,469,1,488,1,495,1,498,1,507,1,517,1,565,1,576,1,583,1]
,"local":[21,2,28,6,39,1,52,2,57,2,95,4,110,1,120,7,142,1,158,1,161,3,202,1,207,1,213,1,216,1,223,1,246,2,309,1,489,1]
,"involved":[21,1,116,1,120,1,121,1,230,1,560,1]
,"(in":[21,1,29,1,283,2,289,1,293,1,370,1,447,1,458,1,473,1,486,2,500,1,557,1,595,1]
,"case":[21,2,24,1,26,1,27,1,32,2,44,1,73,1,75,1,78,1,82,1,88,1,89,1,95,1,99,1,105,1,115,1,121,1,200,1,208,3,227,1,271,1,283,1,289,1,304,1,343,2,344,2,345,2,346,7,379,1,380,2,403,1,409,1,411,1,438,1,440,1,441,1,449,1,455,1,462,1,469,1,479,2,481,1,482,6,484,1,486,2,487,1,489,5,490,1,495,1,498,1,500,1,502,1,504,2,505,1,506,1,508,1,510,2,511,1,512,2,517,2,526,1,528,1,547,1,549,1,557,2,562,3,568,3,579,1,597,2,598,2,600,1,639,1,641,2,642,1,643,1]
,"server)":[21,1]
,"cache":[21,2,28,7,32,2,39,1,52,2,64,2,110,1,120,3,121,2,157,2,175,2,213,1,216,3,245,1,246,1,257,2,559,2,560,5,562,1,564,1,568,4,569,7,571,10,572,1]
,"copies":[21,1,27,1,395,1]
,"tied":[21,1,28,2,52,1,93,1,99,3,100,1,130,2]
,"reduces":[21,1,213,1,487,1]
,"overhead":[21,1,112,1]
,"engine":[21,1,133,2]
,"random":[21,1,247,1,439,1,440,2,454,2,463,1,469,6,475,1,477,2,478,2,493,6,494,3,495,9,516,5,517,1,572,1,575,1,576,3]
,"even":[21,1,24,1,82,1,116,1,127,1,131,1,201,1,289,1,343,1,346,1,409,1,479,1,483,1,486,2,487,1,489,3,498,1,517,2,562,1,598,1]
,"lacks":[21,1]
,"capability":[21,1,75,1,416,1,437,1,454,5,516,1]
,"form":[22,1,52,1,58,2,64,1,73,1,74,1,77,1,86,1,87,2,88,7,89,1,93,2,96,2,99,1,105,1,125,1,156,2,158,2,179,3,216,1,232,2,241,2,242,1,256,8,257,7,258,1,261,1,262,1,263,1,315,1,344,1,365,1,370,2,409,1,410,1,479,1,482,2,498,1,524,2,553,2,561,1,602,1,603,1,615,1,622,1]
,"properly":[22,1,108,1,577,1,588,1,593,1]
,"depends":[22,1,28,1,29,1,56,1,87,1,133,1,145,1,156,1,157,1,158,1,191,1,195,2,204,1,205,7,282,1,289,1,311,1,312,7,323,1,328,1,334,1,362,2,368,2,410,1,412,1,413,1,415,1,422,2,425,2,454,1,481,1,487,2,491,1,506,1,512,1,517,2,579,1]
,"know":[22,1,45,1,135,1,367,1,422,1,425,1,460,1,463,1,464,1,476,1,478,1,489,1,507,1,511,1,517,3,553,1,554,1,557,3,595,1]
,"relates":[22,1,105,1]
,"contrasts":[22,1,198,1]
,"interactively":[22,1,34,1,35,1,104,1,105,1,119,1,276,1,460,1]
,"inspect":[22,1,27,1,72,1,230,2]
,"add":[22,1,57,1,64,1,72,2,105,1,121,2,129,1,130,1,154,1,157,4,216,1,218,5,227,1,229,1,232,2,243,4,248,1,253,2,257,2,267,1,271,4,272,1,276,1,277,1,280,3,285,1,288,1,291,2,292,1,299,2,300,2,307,1,317,1,322,1,325,1,327,1,328,1,334,1,336,8,338,2,340,3,348,1,352,1,363,2,364,7,365,4,366,5,373,5,374,1,377,2,394,1,400,3,402,7,412,1,416,1,419,3,422,2,425,2,436,8,439,1,440,7,460,1,498,1,503,1,506,1,532,1,550,1,560,1,577,1,601,1,635,1,636,1,638,2,639,1,643,1,644,3]
,"modify":[22,1,24,1,25,1,27,1,51,3,52,1,58,1,121,1,247,1,250,1,275,1,432,1,459,1,472,1,504,1,576,1,600,1,642,1]
,"mainly":[22,1,481,1,482,1,504,1,543,1]
,"attached":[22,1,41,1,43,1,44,2,75,2,126,1,156,1,183,1,283,2,290,4,336,3,338,1,420,1,421,1,422,5,462,3,466,5,482,1,489,2,492,1,495,4,498,4,504,1,505,1,515,2,529,2,537,1,538,1,545,2,558,2,564,1,570,1,636,2]
,"behalf":[22,1,29,1]
,"usually":[22,1,24,1,28,1,52,1,75,1,87,1,133,1,472,1,482,1,489,1,504,2,510,1,512,1,514,1,577,1,598,1]
,"combo":[22,1,24,1,57,1,60,4,88,4,91,3,93,1,99,4,127,1,156,3,158,3,167,12,225,1,237,2,243,1,245,2,246,3,247,1,251,1,253,2,254,1,255,1,256,1,261,1,264,1,265,1,281,3,282,6,289,2,316,3,530,1,536,1]
,"links":[22,1,71,1,73,3,141,1,143,1,189,1,192,1,193,15,223,1,453,6,454,7,457,2,458,1,460,5,462,3,463,1,467,5,472,1,474,1,477,1,479,9,480,11,481,8,482,18,484,1,486,6,487,15,488,5,489,59,490,10,491,6,492,20,494,1,495,12,497,2,498,12,503,1,504,2,505,1,506,1,507,2,508,2,509,2,510,1,511,1]
,"relate":[23,1]
,"relating":[24,2,543,1]
,"identification":[24,1]
,"index":[24,3,27,2,45,1,51,1,57,2,365,1,372,1,375,4,377,6,394,1,400,1,402,3,412,5,488,8,489,57,498,8,562,1,575,2,576,1,577,19,586,4]
,"position":[24,1,27,1,31,1,39,1,57,1,64,3,88,1,95,2,97,1,135,1,163,2,171,2,175,3,187,1,189,1,193,2,216,1,219,1,243,1,257,1,275,1,276,1,282,1,330,3,331,2,334,2,336,12,338,6,364,1,367,1,379,1,400,3,407,13,409,9,413,3,423,1,436,1,468,2,478,1,479,1,481,12,482,1,486,4,488,10,489,36,491,1,495,2,498,2,504,1,510,2,516,1,517,3,531,1,541,1,543,1,557,1,569,1,575,1,597,1,603,1,633,1,635,2,637,4]
,"(starting":[24,1]
,"change":[24,1,45,1,57,4,58,1,64,1,72,2,79,1,87,2,88,5,95,2,116,1,120,1,130,4,131,1,146,1,148,1,154,1,156,2,161,3,165,1,167,1,189,1,225,1,226,1,227,1,243,1,244,1,245,1,247,1,250,1,252,2,254,1,255,5,257,1,258,2,261,1,262,1,265,4,266,1,271,1,274,1,277,1,282,1,283,2,285,1,288,1,289,1,292,1,300,2,315,1,323,1,327,1,328,2,336,8,338,1,339,10,340,4,342,1,345,1,346,3,348,2,365,2,375,1,381,1,409,1,411,1,413,3,438,2,439,1,462,1,478,9,481,1,482,2,484,1,486,1,489,4,504,4,517,2,528,1,529,1,548,2,641,1]
,"inserted":[24,1,31,2,39,3,51,1,52,2,73,1,113,3,120,1,121,1,157,4,158,1,288,1,339,1,568,1]
,"removed":[24,1,27,1,39,2,54,1,105,1,157,1,288,1,289,3,366,1,375,2,377,3,462,2,482,1,489,1,495,1,498,1,508,1,517,1,566,1,568,1,571,2]
,"components":[24,1,212,1,214,1,216,2,367,4,369,1,481,1,489,1,520,1,554,2,635,1]
,"gadgets)":[24,1]
,"token":[24,1]
,"magic":[24,1]
,"cookie":[24,1]
,"(an":[24,1,43,2,394,2,395,2,396,2,397,2,466,1,495,1,498,1]
,"ilint":[24,1,25,2,27,2,40,1,45,3,52,1,75,1,82,3,106,7,112,4,121,3,135,1,481,1,482,2,484,1,489,9,498,2,504,3,567,2,577,1,596,1,597,1]
,"assigned":[24,1,56,1,84,1,119,2,120,2,121,1,124,1,199,1,276,1]
,"guaranteed":[24,1]
,"remain":[24,1,115,1,129,1,156,2,158,2,265,1,369,1,439,1,489,1]
,"constant":[24,1,201,2,338,1,345,1,364,4,372,2,390,1,392,1,410,4,411,1,481,1,486,1]
,"across":[24,1,25,1,88,1,246,1,398,1,476,1]
,"executions":[24,1,25,1]
,"unique":[24,1,43,1,52,1,75,1,156,1,158,1,163,2,167,1,222,1,246,1,383,2,394,1,402,1,560,1,596,2,597,2]
,"belong":[24,2,122,2,135,1,244,1,332,3,407,1,438,1,476,1,479,1,489,2,507,1,544,1,577,2]
,"mostly":[24,1,489,2]
,"identify":[24,2,28,1,57,1,100,1,131,1,486,1,489,1,531,1,557,1]
,"changes":[24,1,27,1,31,1,39,2,40,1,51,6,56,1,57,1,64,1,88,1,95,1,110,1,113,1,120,7,156,1,157,2,158,1,161,1,225,1,226,2,227,1,228,2,229,1,236,1,243,1,246,1,247,1,253,1,255,1,260,1,261,1,264,2,266,2,267,1,274,1,280,1,282,2,283,2,288,2,289,1,291,1,301,2,307,1,316,1,336,5,338,5,339,1,341,5,342,1,345,6,346,1,348,1,349,2,350,2,351,1,354,1,375,2,377,1,462,2,479,1,486,3,500,1,504,4,568,1,643,1]
,"property":[24,2,43,7,44,8,45,9,87,3,95,2,96,1,97,1,105,2,108,2,114,2,120,4,121,2,157,3,158,3,161,3,163,3,165,3,167,3,169,3,171,3,173,3,185,3,187,3,191,2,271,1,276,1,300,1,380,1,383,2,384,3,385,2,386,3,387,1,388,1,389,1,390,3,391,3,392,2,393,1,394,2,396,3,397,1,398,2,407,2,409,1,418,4,419,2,421,1,424,1,443,2,444,1,449,8,504,1,509,1,529,1,545,1,597,1]
,"accessible":[24,2,54,1,223,1,535,1]
,"datatype":[24,1,105,1,130,2,156,8,157,1,158,2,282,2]
,"maximum":[24,1,52,1,157,1,163,1,165,1,167,1,195,2,204,1,232,4,268,1,278,4,279,4,283,1,285,5,291,1,311,1,316,1,330,1,331,1,336,11,338,4,339,6,340,3,345,2,346,2,349,1,350,4,351,3,368,2,369,2,370,5,372,7,377,6,379,1,403,1,407,2,411,1,413,1,414,8,439,1,493,2,566,1,571,1]
,"length":[24,1,156,1,157,1,158,1,163,1,187,1,189,1,197,1,210,1,316,1,409,1,478,1,489,1,492,3,504,1,557,1]
,"applies":[24,2,40,1,43,1,52,1,89,2,95,1,124,1,131,1,156,5,158,3,163,1,167,1,175,2,216,1,305,1,409,1,548,1,611,1,614,1,642,1]
,"assumes":[24,1,52,1,121,1,346,1,524,1,597,1,641,1,642,1]
,"varying":[24,1]
,"size":[24,1,57,2,148,1,171,1,226,1,228,1,243,3,245,1,255,1,258,1,259,1,263,4,264,1,265,1,266,2,273,1,277,1,285,1,288,1,292,2,330,1,364,2,385,1,396,1,409,2,410,2,418,1,419,1,454,2,458,1,462,1,466,3,479,2,482,1,487,1,495,2,496,1,498,4,510,1,517,3,538,2,559,1,560,1,561,3,563,4,571,2,572,4,577,4,579,1,580,2,583,2,590,2,606,1]
,"(typically":[24,1,205,1,312,1]
,"ilistringtype":[24,1,79,1,80,1,82,4]
,"type)":[24,1,210,2]
,"nullable":[24,1,157,1,553,1,597,1]
,"null":[24,1,37,1,62,1,73,1,75,1,78,1,79,6,80,1,82,4,114,2,121,3,124,4,135,3,156,1,157,1,158,1,233,8,276,2,298,3,316,4,481,1,507,1,514,1,515,1,552,3,553,1,557,1,562,1,577,2,581,1,597,1,624,1]
,"key":[24,5,25,1,45,1,52,1,97,1,110,1,121,1,128,1,131,4,154,3,156,1,158,3,161,6,222,1,226,1,233,2,243,1,245,4,246,7,247,1,252,1,255,1,262,2,272,1,273,2,275,1,282,1,289,6,298,1,301,1,316,3,427,1,428,1,429,1,430,1,431,2,432,1,433,1,434,1,435,1,503,1,504,1,597,5]
,"belongs":[24,2,54,2,121,3,135,2,156,1,158,1,163,1,167,1,218,1,257,1,332,1,434,1,435,1,508,1,560,1,571,4]
,"subset":[24,1,463,1,507,1]
,"reject":[24,1,476,1]
,"update":[24,1,27,1,51,1,52,4,64,1,105,1,110,2,111,1,113,1,115,3,116,1,122,1,131,3,135,1,157,4,195,2,218,1,247,1,257,1,283,1,376,5,440,1,441,2,552,1,597,4]
,"insertion":[24,1,39,1,40,1,45,2,51,2,189,2]
,"equal":[24,1,104,1,195,2,248,3,275,3,379,1,409,1,415,1,466,2,492,1,564,1,567,1,602,1,606,3,633,1,641,1]
,"belonging":[24,1,77,1,105,1,488,1,508,1,560,2,577,2,597,2]
,"words":[24,1,104,1,110,1,248,2,349,1,580,1,602,1]
,"uniquely":[24,1,87,1,130,1,131,2,316,1]
,"default":[24,3,29,2,43,1,45,1,57,2,58,1,73,1,74,1,95,1,117,1,145,11,155,2,156,62,157,21,158,43,161,29,163,26,165,13,167,24,169,10,171,19,173,13,175,12,177,2,179,13,181,8,183,7,185,11,187,31,189,40,191,3,193,38,195,61,207,1,208,3,222,1,223,1,225,1,227,2,236,1,247,1,262,3,263,1,265,1,271,1,273,2,274,2,288,1,289,2,294,1,316,1,322,1,323,1,336,11,338,1,339,1,341,2,343,2,345,2,348,1,362,6,363,1,364,1,365,4,366,1,368,22,369,8,370,1,372,2,373,4,376,2,379,1,380,2,381,2,383,1,384,1,385,1,386,2,387,1,389,1,390,2,391,2,392,1,393,1,394,3,395,7,396,2,397,4,398,3,399,2,401,1,403,3,404,1,407,3,409,7,410,2,411,3,412,4,413,2,414,1,418,4,419,2,421,4,424,3,428,2,430,1,432,2,433,1,434,1,435,4,436,1,438,2,440,1,447,1,450,2,454,3,463,1,464,2,465,2,466,3,467,2,468,2,469,3,470,7,472,1,478,2,482,3,489,6,492,6,495,4,498,4,500,1,506,1,508,1,515,2,517,2,526,3,528,1,536,2,537,2,547,2,549,1,550,1,560,1,571,1,581,2,583,1,596,2,597,3,598,1,613,1,619,1,622,1,623,2,632,1,641,1,642,1,643,1]
,"inserts":[24,1,52,1,154,1,325,1]
,"look":[24,3,42,1,45,1,56,2,57,2,58,2,85,1,87,6,94,2,105,1,156,4,158,3,212,1,224,1,242,1,245,1,247,1,251,1,252,1,255,2,258,1,262,1,269,1,278,1,282,2,289,1,291,1,293,1,297,1,320,1,322,1,336,1,338,1,339,2,340,2,341,1,346,1,366,1,367,1,369,1,411,2,415,1,422,1,425,1,440,1,453,1,458,1,474,1,476,1,489,1,511,2,513,1,560,1]
,"alignment":[24,1,94,1,156,1,158,1,163,2,165,2,167,2,171,2,183,2,187,2,189,1,226,2,252,2,479,5,480,3,481,1,482,43,483,2,484,2,485,12,487,1]
,"character":[24,1,29,1,61,1,75,1,77,1,82,2,83,1,124,2,135,2,197,2,200,3,201,2,203,6,206,4,207,1,208,5,276,1,310,6,313,4,544,1]
,"string":[24,1,29,1,36,1,37,1,45,5,70,2,82,3,87,2,124,1,127,2,135,3,137,1,142,1,146,1,156,4,158,1,183,3,187,1,193,5,195,3,197,3,202,2,203,7,206,1,207,1,210,1,223,1,227,1,263,2,275,1,276,1,282,2,309,1,310,7,313,1,316,1,336,1,446,1,553,1,597,1,615,1]
,"left-aligned":[24,1]
,"date":[24,1,28,1,32,1,156,3,158,2,195,4,199,4,201,5,202,2,205,8,207,1,208,2,209,6,282,9,309,1,312,8,446,2,450,5]
,"numeric":[24,1,74,1,82,3,161,1,193,3,195,2,204,1,311,1,548,1]
,"right-aligned":[24,1]
,"width":[24,2,64,1,94,1,95,2,145,1,156,2,158,2,161,1,171,1,189,1,222,2,263,1,288,1,334,2,364,1,390,4,392,4,397,1,409,1,418,1,466,4,480,1,482,1,484,1,486,1,491,1,492,1,493,3,497,2,547,1,553,1,560,1,577,1]
,"pixels":[24,1,156,1,158,1,161,2,265,3,330,1,394,1,407,1]
,"visibility":[24,1,57,1,94,1,95,1,131,1,161,2,169,1,187,1,189,1,330,3,383,1,407,1,409,2,421,1,424,1,431,2,491,1,526,1,531,4,534,2,537,2,538,2,556,1,558,1,565,1,566,6,570,1,598,1,600,1]
,"title":[24,1,88,3,154,1,156,2,158,1,179,7,224,1,228,2,237,1,243,1,267,1,271,2,273,1,289,1]
,"caption":[24,2,156,1,158,1,256,1,257,1]
,"label":[24,1,57,1,72,1,74,2,87,4,88,1,145,1,156,7,157,1,158,4,161,2,163,12,165,3,167,5,169,2,171,8,173,4,175,1,177,1,179,3,181,1,183,1,185,2,187,8,189,11,191,1,193,6,195,14,273,2,283,3,288,3,289,2,290,1,291,1,325,4,330,1,334,1,336,13,338,2,346,1,365,3,366,6,369,4,394,2,402,3,408,1,409,8,411,1,417,1,418,1,423,1,424,3,550,1,572,1,637,2]
,"dbfield":[24,1,58,6,86,3,87,14,88,10,91,1,96,1,99,1,100,1,127,10,163,16]
,"read-only":[24,1,37,1,96,4,157,1,225,1,243,1,459,1]
,"setting":[24,1,57,1,85,1,94,1,95,2,121,1,127,2,211,1,231,1,233,1,259,3,263,2,264,2,265,3,277,3,282,1,285,3,289,2,292,3,297,1,298,1,303,6,306,3,307,1,308,2,312,5,326,1,336,9,338,4,346,1,350,2,369,6,378,2,380,2,381,1,383,1,384,1,396,2,398,1,399,1,407,1,409,3,413,1,418,1,421,1,422,1,424,1,425,1,426,1,436,1,438,1,439,2,467,1,468,1,470,1,481,3,482,1,484,1,489,1,492,2,495,1,498,1,515,1,529,1,534,2]
,"mapped":[24,1,156,2,158,2,163,2,167,2,171,2,173,2,185,2,187,2,220,1,252,1,329,1,343,2,365,1]
,"onto":[24,1,386,1,401,1,484,1,541,1,601,1,602,1,605,1,642,4]
,"foreign":[24,13,56,4,57,1,59,1,60,1,61,1,62,1,63,1,68,1,69,1,70,1,85,1,87,13,88,9,89,13,90,14,91,15,92,4,93,4,98,2,99,8,100,6,127,6,156,4,157,1,158,4,163,12,167,14,171,9,173,9,185,8,187,13]
,"situation":[24,1,501,1,552,1]
,"original":[24,2,90,1,91,1,127,1,130,1,175,1,246,1,289,1,343,1,428,1,486,1,489,2,540,1,541,1,600,1]
,"dictionary":[24,1]
,"selecting":[24,1,91,1,108,2,116,1,121,1,122,1,142,1,156,2,157,1,170,1,222,1,223,1,229,1,240,1,243,1,245,1,247,1,255,1,258,1,267,1,289,2,291,1,322,1,323,1,336,1,470,1,478,1,531,2,540,1,541,1,542,1,547,1,548,1,552,1,554,1,557,1]
,"pull-down":[24,1,60,2,69,2,156,1,158,1,167,3,246,2]
,"list":[24,1,25,1,29,1,70,3,75,1,87,4,113,1,136,1,142,2,146,2,156,2,157,8,158,3,163,3,165,2,166,2,167,4,181,1,184,1,186,1,187,1,189,1,193,1,208,3,210,1,218,2,223,2,224,1,227,1,232,1,243,4,244,1,247,2,253,2,255,1,271,3,275,2,281,1,288,1,289,1,291,5,299,2,300,2,304,1,316,1,317,2,325,10,327,1,328,1,330,2,332,2,336,51,337,1,338,4,339,10,340,17,341,5,342,1,345,5,346,3,348,13,349,7,350,2,351,1,376,1,412,3,447,1,448,1,450,3,455,1,474,1,481,7,484,1,486,1,516,1,518,1,523,2,524,1,531,2,534,1,536,1,571,3,595,1,597,1,621,1,625,2,630,3,645,1]
,"domain":[24,2,88,1,89,1,91,3]
,"specified":[24,1,27,1,28,1,56,1,73,2,78,1,89,1,95,1,105,2,129,1,130,1,156,1,157,1,158,1,163,1,167,1,171,1,173,1,185,1,187,1,193,7,195,1,201,1,206,1,227,2,263,1,313,1,328,1,336,1,338,1,340,3,362,1,370,1,377,1,380,1,395,4,398,1,399,1,400,1,433,1,435,1,436,1,439,1,449,2,454,4,464,1,470,1,478,2,479,1,481,14,482,1,485,3,486,1,489,13,492,1,495,5,498,9,500,1,507,2,508,5,514,3,515,5,517,1,557,1,560,1,566,1,568,3,571,1,577,1,600,1,619,2]
,"latter":[24,1,29,1,110,1,115,1,486,1]
,"api-only":[24,1]
,"option":[24,1,69,2,72,3,87,1,92,1,93,1,145,1,149,1,185,1,222,1,224,1,240,1,246,7,261,1,264,1,289,7,294,1,336,1,338,3,341,2,346,1,349,2,467,1,468,1,469,2,481,1,482,4,489,2,490,2,491,3,492,3,496,1,498,5,517,1,526,1,531,2,536,1,553,1]
,"obtained":[24,1,84,2,88,1,104,1,113,1,117,1,120,1,346,1,364,1,369,1,372,2,373,1,402,3,414,2,453,1,482,3,486,1,489,1,495,1,511,1,513,1,603,1]
,"(this":[24,1,88,1,209,1,367,1,466,1,526,1]
,"constrained":[24,1,43,1,87,2,91,1,92,1,156,2,158,2,163,2,167,2,201,2]
,"rejects":[24,1]
,"completion":[24,1,87,1,122,1,156,1,158,1,163,1,167,1,246,1]
,"incomplete":[24,1]
,"automatically":[24,1,29,1,37,1,45,1,48,1,51,1,54,1,84,1,88,4,91,2,93,1,95,1,103,1,118,1,120,1,127,2,130,3,133,1,137,1,156,2,157,2,207,1,218,1,224,1,227,1,232,1,244,1,245,1,254,1,263,1,273,1,288,1,292,1,330,1,331,4,334,2,336,2,338,1,339,1,354,2,360,1,364,1,369,2,370,1,374,4,375,2,376,6,379,1,380,6,395,1,407,1,411,1,414,2,418,8,419,3,439,2,459,2,479,2,481,2,482,3,485,1,486,1,489,6,490,1,495,2,498,2,500,1,508,1,514,1,515,1,516,2,541,1,554,1,557,1,558,1,566,1,577,1,598,1,643,1]
,"completed":[24,1,87,1,122,2,127,1,224,1,232,1,262,1,295,1,339,1,346,2,351,1,364,1,365,1,369,1,394,1,449,1,500,1,568,1]
,"validation":[24,1,51,1,52,6,53,2,120,1,127,1,165,2,167,1,175,4,276,1]
,"cannot":[25,1,35,1,36,1,37,2,43,1,122,1,156,1,157,1,158,1,161,3,163,1,165,1,167,1,169,1,173,1,187,1,193,2,195,2,206,1,250,1,257,1,283,1,289,3,313,1,383,1,394,1,413,1,461,1,467,1,468,1,482,1,486,1,489,4,490,2,492,1,495,1,498,2,507,1,515,2,545,1,553,1,568,1,612,2,618,1,635,1,641,1]
,"instantiated":[25,1,293,1,362,2,394,2,427,2,576,1]
,"below":[25,1,142,1,143,1,150,1,156,1,157,1,158,1,159,1,161,1,167,1,169,1,179,1,181,1,187,2,189,2,193,1,195,1,222,2,223,1,238,1,246,1,248,1,250,1,255,1,258,1,300,1,313,1,336,15,339,2,340,7,345,1,348,4,349,2,480,1,488,1,491,1,494,1,497,1,548,1,553,2,556,1,557,1,567,1,630,1]
,"implements":[25,1,28,1,34,1,213,1,553,1,560,1,569,1,572,1,577,1,583,3,591,1,596,1,597,1,632,1,639,4,641,1]
,"storing":[25,1,284,1,394,2,504,1,552,1,559,1,576,2]
,"suitable":[25,1,75,1,502,1]
,"transient":[25,1]
,"retain":[25,1,120,1]
,"states":[25,1,142,1,170,1,171,2,223,1,533,1,564,1,636,1,645,1]
,"specifically":[25,1,87,2,223,1,367,1,383,1,427,1,457,1,561,1]
,"getcolumnscount":[25,1,45,1,84,1]
,"const":[25,9,36,1,40,5,42,4,45,4,53,2,56,1,73,2,75,1,82,12,83,1,84,2,120,5,121,4,135,8,136,1,197,3,200,6,201,8,366,1,372,1,398,2,464,3,466,4,467,3,468,3,469,3,470,1,481,8,482,11,483,1,484,2,486,6,489,16,492,7,495,1,498,9,504,3,508,1,544,3,545,2,547,1,548,7,549,1,550,4,553,20,560,3,568,1,571,2,572,1,583,1,586,3,591,1,597,1,599,2,625,1,628,2,635,1,636,2,637,1,639,4,641,2,642,2,643,8,644,1]
,"char*getcolumnname":[25,1]
,"(ilint":[25,7,29,1,31,1,40,5,45,1,53,1,54,1,121,2,135,5,201,3,482,2,484,1,567,2,577,1]
,"colno)":[25,4,45,1,135,6]
,"ilidatatype*getcolumntype":[25,1]
,"ilboolean":[25,5,40,1,120,2,201,1,464,2,465,2,466,1,467,4,468,4,469,2,470,1,481,1,492,1,504,5,507,1,508,2,509,1,511,1,516,1,560,1,640,1]
,"iscolumnpartofkey":[25,1,45,1]
,"setcolumnpartofkey":[25,2,106,1]
,"colno":[25,3,40,1,45,3]
,"partofkey)":[25,1]
,"iscolumnnullable":[25,1]
,"setcolumnnullable":[25,1]
,"nullable)":[25,1,597,1]
,"insertcolumn":[25,4,40,1]
,"char*colname":[25,1]
,"ilidatatype*type":[25,1,84,1,121,2]
,"maxlen":[25,1]
,"=-1)":[25,1]
,"enum":[25,1,40,1,640,1]
,"columntag":[25,1]
,"{idcolumn":[25,1]
,"namecolumn":[25,1]
,"salarycolumn":[25,1]
,"ilimemorytable*tbl":[25,1,48,1]
,"(display)":[25,1,30,2,48,1,106,1,107,1,462,1,480,1,488,1,491,1,494,1,497,1,552,1,553,2,554,1,557,3,560,2,585,2,588,1,591,2,593,1,599,2,635,1]
,"tbl->":[25,6,27,4,29,3,31,2,32,1,36,5,48,4,52,2,57,1]
,"lock":[25,2,36,1,48,1,84,2,106,1,107,1,110,1,118,2,121,2,133,2,137,1,374,1,560,2,564,2,567,3,569,1]
,"(idcolumn":[25,2]
,"iliintegertype)":[25,1,48,1,106,2]
,"(namecolumn":[25,1]
,"ilistringtype)":[25,1,40,1,48,1,106,2,119,1]
,"(salarycolumn":[25,1]
,"salary":[25,1,27,1,135,2,232,4,233,1,243,1,247,4,248,2,268,1,271,1,278,4,279,4,280,1,281,2,282,4,283,1,285,5,291,1]
,"ilidoubletype)":[25,1]
,"ilvtrue)":[25,1,73,2,106,3,549,1]
,"unlock":[25,1,36,1,48,1,84,2,121,2,133,2,137,1,374,1]
,":insertcolumn":[25,1]
,":setcolumnpartofkey":[25,1]
,"derived":[25,1,105,4,227,1,368,4,373,1,402,1,553,2,576,1,600,1,606,1]
,"counted":[25,1,97,1]
,"means":[25,1,27,1,42,1,51,1,57,1,95,2,96,1,99,1,105,1,122,2,125,1,157,1,204,2,213,1,218,1,220,1,267,1,273,1,283,1,311,2,316,2,336,2,346,2,349,2,365,2,367,1,368,1,374,1,376,1,380,2,381,2,383,1,394,1,407,3,409,4,410,1,411,7,413,4,414,3,415,3,418,1,419,1,421,1,424,1,427,1,428,1,433,1,435,1,438,2,439,1,457,1,462,1,467,1,468,1,470,1,482,2,483,6,484,3,486,1,504,1,517,1,526,1,548,1,552,1,559,1,569,1,597,1]
,"implicitly":[25,1]
,"deleted":[25,1,52,3,110,1,120,1,157,1,175,1,189,3,193,2,317,1,462,1,562,1,564,2]
,"count":[25,1,28,2,45,1,54,1,105,1,112,3,156,2,157,1,340,3,372,1,400,1,439,2,440,5,489,1,544,2,553,1,577,2,583,1,597,1]
,"reaches":[25,1,372,2]
,"ilitablebuffer":[25,1,27,4,36,1,64,1]
,"carry":[25,1,64,1,230,1]
,"actions":[25,1,28,1,51,1,64,1,108,1,288,1,289,1,560,1,567,1,618,1,635,1]
,"apply":[26,1,27,1,64,1,72,1,88,1,94,1,96,1,120,1,124,1,148,1,149,1,150,1,155,2,156,2,158,2,203,1,204,1,216,1,218,2,225,2,226,2,227,1,228,1,236,1,237,2,243,1,245,1,247,1,250,1,251,1,252,1,253,1,254,1,255,1,257,2,258,1,261,1,263,1,264,1,265,2,267,1,271,1,272,1,273,1,275,2,276,2,277,1,281,1,282,7,283,1,285,1,288,2,289,4,291,1,292,1,299,1,300,2,301,2,316,1,324,1,330,3,336,15,338,5,339,5,340,5,341,9,342,2,343,1,344,1,345,8,346,3,348,2,349,2,350,2,351,1,360,1,403,1,415,1,453,1,474,1,481,1,503,1,606,1,641,1]
,"first":[26,1,27,1,37,1,52,1,64,1,71,1,72,2,120,1,121,1,133,1,135,2,146,2,157,1,175,1,179,4,195,1,201,1,207,1,209,2,211,2,218,2,224,2,226,2,238,2,243,1,246,3,256,2,257,1,258,1,260,2,262,1,271,1,275,1,276,1,283,2,301,1,324,1,330,1,336,13,340,5,341,1,345,7,346,2,348,6,349,1,364,4,365,4,369,1,372,1,373,1,376,2,392,2,393,2,394,1,397,3,398,2,399,3,400,2,402,1,403,1,411,2,435,1,436,2,440,1,453,2,462,2,466,1,479,1,481,1,482,1,485,3,486,3,489,10,498,1,506,1,507,1,510,1,515,2,524,1,526,2,531,2,533,1,534,2,540,1,552,1,553,2,557,2,560,1,569,4,581,1,597,2,636,1,637,1,639,1,640,2]
,"catching":[26,1,29,2,53,2]
,"performed":[27,1,39,1,273,1,318,1,331,1,360,1,364,2,368,1,370,1,376,6,377,1,379,1,402,1,409,1,411,1,427,1,438,1,439,1,440,7,441,2,454,2,459,2,462,2,465,2,467,2,468,2,469,1,479,1,485,2,486,2,500,4,504,2,517,1,536,1,547,1,568,2,596,1,597,1,611,1,642,2]
,"insert":[27,3,51,2,52,1,64,1,105,1,111,1,113,1,114,2,122,1,154,1,155,1,157,2,158,1,161,3,175,5,210,1,243,3,257,2,288,2,291,4,325,1,336,2,339,1,340,2,348,1,349,1,412,1,528,1,529,1,530,1,534,2]
,"(see":[27,4,52,1,56,1,87,2,88,1,89,2,122,1,124,3,127,1,135,1,157,1,162,1,171,1,175,1,216,1,218,1,238,1,256,1,263,1,282,2,283,1,290,1,312,8,316,1,332,1,338,1,339,2,342,1,346,1,359,4,363,2,368,2,369,2,370,1,372,1,374,1,376,1,377,4,417,1,439,2,446,1,448,1,449,2,454,2,461,1,462,1,479,1,482,1,483,1,485,1,488,1,489,4,498,3,504,1,505,3,507,1,508,1,513,1,560,1]
,":insertrow":[27,1]
,":updaterow":[27,1,52,1]
,"delete":[27,1,31,1,40,3,52,1,57,1,64,1,105,1,111,1,122,1,154,5,157,4,161,5,175,3,210,1,211,1,216,1,243,2,252,2,255,2,262,1,273,2,291,1,314,1,336,4,340,4,345,2,348,2,349,2,364,2,410,2,415,1,473,1,480,1,488,1,489,1,491,1,494,1,497,1,500,1,516,1,560,1,577,1]
,":deleterow":[27,2]
,":getvalue":[27,1,135,1,424,1]
,":rowtobuffer":[27,2]
,"give":[27,1,226,1,236,1,243,1,245,1,249,1,250,1,258,1,269,1,277,1,278,1,283,1,286,1,292,1,302,1,316,2,450,1,476,1,479,1,481,1,489,1,590,1,597,2]
,"store":[27,1,28,1,83,1,197,1,216,1,364,2,367,1,368,1,394,1,449,1,462,1,486,1,500,2,504,1,507,1,553,1,575,1,577,2,595,1,635,2,643,2]
,"copy":[27,1,42,1,84,1,307,1,346,2,466,1,545,2,552,1,553,1,599,1,640,1,643,2]
,"updates":[27,1,52,1,105,1,110,1,154,6,157,1,195,1,245,1,376,4,440,2]
,"always":[27,1,29,1,97,2,161,8,204,2,245,1,258,1,282,2,311,2,407,2,469,1,481,2,482,2,484,1,487,2,488,1,489,4,490,1,512,1,517,2,552,1,553,1,554,1,596,1,602,1,641,1]
,"carried":[27,1,29,1,95,1,106,1,108,1,110,1,129,1,632,1,641,1]
,"edits":[27,1,56,1,61,1,91,1,232,1,246,3,300,1]
,"avoiding":[27,1,98,1,99,1,453,1]
,"consuming":[27,1]
,"network":[27,1,117,1,453,3,496,1,497,1,517,1]
,"activity":[27,1,145,1,195,8]
,"validating":[27,1,52,1,157,1,158,1,163,1,167,1]
,"avoids":[27,1,127,1,485,1]
,"problems":[27,1,568,1]
,"coherency":[27,1]
,"individual":[27,1,90,1,284,1,454,1,458,2,481,2,482,13,483,2,484,2,485,2,489,5,598,1]
,"limit":[27,1,157,1,210,1,339,1,372,1,464,1,484,1,526,1,528,1,529,1,531,4,534,3,558,1]
,"allowed":[27,1,120,1,454,1,463,1,464,2,477,1,481,5,485,1,486,1,489,6,492,6,517,2,537,1]
,"validate":[27,1,51,4,53,1,64,1,124,2,157,2,228,1,246,2,248,1,251,1,257,1,273,1,275,1,276,1,307,1,321,1,336,15,338,5,339,4,340,3,341,5,342,2,345,6,346,3,348,2,349,2,350,2,351,1,474,1]
,"problem":[27,2,130,1,458,1,487,1,490,1,512,1,517,2]
,"occur":[27,1,29,2,31,1,39,1,40,1,80,1,376,2,440,1,466,1,481,1,482,3,489,3,501,1]
,"whole":[27,1,43,1,44,2,155,1,243,1,332,2,534,1,537,2,538,1,540,1,544,1,553,2,559,2,608,1,622,1]
,"validated":[27,1,158,1,237,1,246,3]
,"avoided":[27,1,440,1,490,1]
,"buffer":[27,4,51,2,64,2,73,1,83,1,144,1,151,1,153,1,158,1,159,1,218,1,222,8,223,3,224,5,225,1,226,2,227,5,228,3,229,2,230,6,236,4,240,1,243,9,244,2,256,1,267,7,269,1,271,2,275,1,280,2,282,3,283,2,284,4,288,4,289,4,294,1,297,1,299,1,300,1,301,2,322,5,323,6,324,1,332,2,334,1,336,8,340,3,342,1,345,2,346,3,348,2,409,1,474,3,526,1,527,2,528,2,529,1,531,1,534,2,537,4,539,1,553,5,644,1]
,":getbuffer":[27,1]
,"method":[27,2,75,1,79,3,81,1,82,4,121,1,129,1,134,1,135,1,149,1,261,1,263,1,264,1,282,1,364,1,372,1,373,1,374,4,375,8,376,10,377,5,381,2,383,2,386,4,395,3,400,2,403,2,407,3,409,8,411,6,412,4,413,3,414,1,419,1,421,2,422,2,424,4,425,2,427,2,428,1,432,1,433,1,435,1,436,2,438,3,439,3,440,13,441,2,449,3,450,3,462,11,464,3,465,3,466,9,467,8,468,8,469,6,470,1,472,1,481,9,482,8,483,2,484,3,486,4,489,21,492,17,495,5,498,21,500,7,501,3,504,4,505,1,507,7,508,4,509,1,510,1,511,1,513,5,514,3,515,11,516,7,517,3,547,1,548,2,549,6,552,5,553,12,556,1,557,13,560,8,562,1,563,1,564,1,567,3,568,3,571,5,572,5,576,2,577,1,583,1,586,1,591,1,596,8,597,14,600,1,623,2,624,1,625,1,627,2,628,2,631,1,632,3,635,3,636,3,637,2,643,10]
,"released":[27,1,295,1,432,1,441,1,566,1,567,1]
,":releasebuffer":[27,1]
,"longer":[27,1,47,1,234,1,258,1,267,1,290,1,339,1,376,1,390,1,392,1,440,1,462,1,472,1,481,1,489,1,507,1,511,1,559,1,560,1,568,1]
,"identified":[27,1,28,3,89,1,91,4,131,1,135,1,532,1,562,1]
,"represented":[27,1,198,1,216,1,327,1,329,3,330,1,336,10,338,4,339,2,340,4,341,3,342,1,345,3,347,1,350,1,351,1,355,1,361,3,364,1,365,1,366,2,367,4,368,2,369,3,370,3,372,9,379,1,385,1,386,2,387,1,388,1,389,1,390,1,391,1,392,1,393,1,394,5,396,1,397,1,398,2,399,1,400,1,402,2,408,1,409,1,410,2,411,4,413,2,414,7,415,3,417,2,439,1,541,2,554,1,581,2,582,1,583,2,590,1,602,2,606,2,622,1,624,1,641,1]
,"integer":[27,1,29,1,37,1,121,2,127,3,156,2,158,1,195,11,208,1,210,1,233,4,258,1,298,2,369,1,410,1,498,1,547,1,548,1,597,1,600,1]
,"starting":[27,1,135,1,339,1,341,1,343,1,344,1,346,3,349,2,365,1,453,1,479,1,480,1,481,1,482,2,489,2,498,4,533,1,535,1,562,1]
,"zero":[27,1,481,1,492,1,560,1,567,1]
,"ilitablebuffer*buf":[27,2,52,1]
,"=tbl->":[27,2,52,2]
,"getbuffer":[27,2,52,1,121,2]
,"buf->":[27,5,52,2]
,"(idcolumn)":[27,1]
,".importinteger":[27,1,73,1]
,"(1)":[27,1,51,1,553,1,595,1,603,1]
,"(namecolumn)":[27,1]
,".importstring":[27,1]
,"smith":[27,1,51,1,53,1,106,2,110,2,119,1,248,1]
,"(salarycolumn)":[27,3]
,".importdouble":[27,2]
,"(255.00)":[27,1]
,"(tbl->":[27,1]
,"appendrow":[27,1,121,3]
,"(buf)":[27,3,52,1,73,1]
,"<0)":[27,1]
,"{ilvprint":[27,3,29,2,31,1,53,1,84,1,121,1,135,3,552,1,554,1,568,1,635,1]
,"append":[27,1,154,1,243,1]
,"failed":[27,2,51,2]
,"releasebuffer":[27,2,52,1,121,2]
,":at":[27,1]
,"returns":[27,1,28,2,29,1,51,1,52,2,57,1,77,1,82,3,83,1,104,1,135,1,340,1,383,1,386,2,397,1,462,2,464,1,465,1,466,7,467,1,468,1,469,1,481,2,489,12,500,1,507,1,508,1,513,2,514,1,552,3,553,2,557,2,560,1,580,1,583,1,585,1,591,1,599,1,612,2,639,1,641,1]
,":importinteger":[27,1]
,":importstring":[27,1]
,"assign":[27,1,45,1,56,1,120,2,458,1,460,1]
,"finally":[27,1,87,1,336,1,365,1,370,1,376,1,410,2,436,1,480,1,516,1,581,1,596,1,597,2,637,1,643,1]
,":appendrow":[27,1]
,"rowno":[27,2,40,3,52,1,57,1]
,"=10":[27,1]
,"rowtobuffer":[27,1,52,1]
,"(rowno))":[27,1]
,"invalid":[27,1,52,1,82,1]
,"(long)":[27,1,29,1,52,2,84,1]
,"rowno)":[27,1,31,2,40,1]
,"ildouble":[27,1,52,2,82,3,135,1,377,4,403,1,484,1,489,1]
,"=buf->":[27,1,40,1,52,1]
,".asdouble":[27,1]
,"(salary":[27,1]
,"*1.1)":[27,1]
,"updaterow":[27,1,28,1,39,1,40,1,52,1,84,1]
,"(rowno":[27,1,40,2,52,1]
,"buf))":[27,1]
,"calling":[27,1,39,8,51,1,52,1,53,1,56,1,57,1,75,1,82,1,106,1,124,1,142,1,176,1,223,1,403,1,409,2,432,1,440,1,441,2,513,1,572,1,583,1,596,1]
,"=15":[27,1,642,1]
,"deleterow":[27,1,28,1,29,1,39,1,40,1,52,2,111,2,158,1,161,1]
,"(rowno)":[27,1,40,1,52,1]
,"allow":[27,1,52,1,54,1,57,1,64,1,155,1,158,1,217,1,230,1,243,2,257,1,289,1,315,1,330,1,353,1,354,1,356,2,361,1,396,1,397,1,426,1,440,1,469,1,477,1,489,1,504,5,524,1,572,1,574,1,578,1,582,1,589,1,595,1]
,"move":[27,1,51,3,169,1,218,1,222,1,224,1,243,1,246,8,247,1,257,1,271,1,299,1,300,1,325,2,459,1,468,1,481,1,486,4,489,1,495,1,498,1,516,1,517,1,527,1,531,2,572,1]
,"sort":[27,1,28,1,106,1,156,1,161,2,189,1,246,2,247,1]
,"search":[27,1,587,1]
,"moverow":[27,1,39,1]
,"findrow":[27,1]
,"findfirstrow":[27,1]
,"sortrows":[27,1,84,1]
,"serving":[28,1]
,"(described":[28,2]
,"directorytable":[28,1,40,4,41,1,42,7]
,"specifying":[28,1,78,1,79,1,90,4,127,1,129,1,156,1,158,1,218,1,274,1,279,1,281,1,330,1,331,1,332,1,336,3,345,2,346,1,350,2,380,1,397,1,398,4,399,2,409,1,479,1,481,1,486,2,489,2,498,1,515,1,537,1,553,1,557,2,558,1,576,3,584,1,618,1,640,1]
,"criteria":[28,4,105,1,106,1,152,2,156,12,157,2,158,2,213,1,216,3,232,1,241,2,243,1,247,1,248,8,258,1,279,1,281,2,457,4,458,10,464,1,569,1,596,1]
,"extracted":[28,1,90,1,104,2,156,1,553,1]
,"precisely":[28,1]
,"select":[28,4,39,1,40,1,51,1,52,1,72,15,87,1,88,1,90,1,99,3,104,5,105,10,106,2,110,2,112,5,113,1,118,1,119,3,121,2,122,5,127,4,129,5,135,10,142,1,143,1,144,1,145,1,146,1,148,1,149,2,150,2,154,4,156,18,157,9,161,2,172,1,175,3,216,5,218,4,219,3,222,5,223,3,225,6,226,1,227,5,232,1,234,1,236,1,237,1,238,1,240,1,243,11,246,23,247,1,248,2,253,6,255,3,256,1,257,1,258,2,260,1,261,2,264,2,271,5,273,2,274,3,280,1,281,3,282,1,283,3,284,1,288,3,289,11,291,1,293,1,299,4,300,9,317,2,323,1,327,1,328,1,330,2,336,26,337,1,338,5,339,9,340,7,341,5,342,3,345,11,346,4,348,6,349,4,350,1,351,1,356,1,368,1,427,1,435,2,469,1,474,2,481,2,527,2,529,2,532,1,534,3,536,1,537,6,538,2,541,1,582,1,596,1,597,2]
,"statement":[28,1,104,5,105,5,106,2,110,2,112,1,113,1,114,2,115,2,116,3,118,1,119,3,120,1,122,1,135,3,482,1,483,1,484,3,486,2,596,1,640,2,643,2]
,":select":[28,1,112,2,119,1,120,1,124,1,135,1]
,"retrieves":[28,2,112,2,121,1,175,1]
,"above":[28,1,42,1,75,1,104,1,121,1,142,1,143,1,151,1,157,2,179,1,187,1,189,1,204,1,223,2,224,1,245,1,257,1,262,1,283,1,306,2,311,1,325,1,372,1,410,1,482,1,484,1,489,1,562,1,577,2,583,1,600,2,612,1,619,1]
,"mentioned":[28,1,42,1,462,1,486,1,600,1]
,"copied":[28,1,32,2,84,1]
,"perform":[28,1,51,1,122,1,146,1,213,2,232,1,241,1,268,1,287,1,336,2,338,2,339,1,345,1,347,1,350,1,364,1,367,1,369,2,372,2,375,1,376,1,377,3,422,1,425,1,428,1,432,1,435,1,440,1,454,3,458,1,459,1,462,1,466,1,472,1,478,1,479,1,480,1,481,2,486,6,489,5,495,1,507,1,515,1,517,1,537,2,558,1,575,2,577,2,595,1,596,1,597,1,607,1,610,1,614,1,618,1,631,1]
,"details":[28,1,42,1,331,1,366,1,370,1,396,2,397,3,398,1,399,1,404,1,409,1,460,2,472,2,482,4,483,1,484,1,489,2,492,2,495,2,498,2,505,1,517,1,542,1,566,1,583,1]
,"immediately":[28,1,83,1,95,1,111,1,113,1,120,1,175,1,218,1,222,1,239,1,289,1,315,1,440,1,534,1]
,"selection":[28,2,47,1,57,4,105,1,127,3,145,1,148,1,149,1,152,1,156,11,157,1,161,2,169,1,187,9,189,4,213,1,216,2,222,1,225,1,226,2,229,1,232,1,236,1,238,1,240,1,241,2,245,1,246,2,247,2,248,4,250,1,252,2,255,1,256,1,257,1,258,2,261,2,262,1,264,1,265,1,273,1,275,1,279,1,280,1,281,2,282,1,283,1,290,2,316,1,323,1,435,2,485,1,498,1,529,1]
,"locates":[28,1]
,"delays":[28,1]
,"retrieval":[28,3,112,2]
,":getrowscount":[28,2]
,"delayed":[28,2,112,1]
,"returned":[28,2,82,1,84,2,91,2,135,2,386,1,403,1,409,3,413,1,424,2,427,1,449,1,462,2,481,1,486,1,498,1,500,3,515,5,517,1,550,2,553,3,560,2,569,1,596,2,597,3,618,2,641,1,642,1,643,1]
,":fetchcompleted":[28,1]
,"true":[28,1,45,1,51,2,52,1,171,1,336,1,544,1,600,2,606,1,619,1,643,6]
,"(as":[28,1,52,1,135,1,336,1,465,1,515,1,572,1]
,"getrowscount":[28,1,39,1,40,1,112,4,121,2]
,"definitive":[28,1]
,":fetchnext":[28,1]
,"fetchall":[28,1,39,1,112,1]
,"explicitly":[28,1,29,1,78,1,110,1,157,1,481,2,482,1,485,1,495,1,498,1,504,1,505,1,515,1,597,1]
,"fixed":[28,1,36,1,37,1,85,1,97,7,161,1,187,1,265,1,330,1,331,3,336,1,338,1,355,2,372,1,380,8,407,6,411,1,443,1,454,4,463,2,467,6,468,6,477,2,481,10,482,1,484,1,489,11,492,4,495,8,498,8,500,1,516,2,597,1]
,"remaining":[28,1,289,1,366,1]
,"insertrow":[28,1,39,1,40,1,45,1]
,"getvalue":[28,1,39,1,40,1,52,2,135,3,424,1,481,1,486,1,516,2,544,4,548,2,571,1]
,"outside":[28,1,223,1,229,1,236,1,238,1,316,1,331,1,332,2,377,4,379,1,386,5,404,1,409,3,414,1,512,1,516,1]
,"missing":[28,1,137,1,207,1,208,1]
,"transparent":[28,1,77,1,145,2,334,3,512,1,596,1,597,1]
,"insertrowincache":[28,1,39,1]
,"updaterowincache":[28,1,39,1,52,2]
,"deleterowincache":[28,1,39,1]
,"non-incache":[28,1]
,"counterparts":[28,1]
,"simply":[28,1,124,1,238,1,276,1,332,2,336,6,340,4,348,1,349,1,365,1,373,1,384,1,385,1,386,2,388,1,392,1,401,1,404,1,409,1,413,2,438,1,439,1,440,1,457,1,458,1,486,2,494,1,510,1,511,1,534,1,639,1]
,"act":[28,1]
,"leaving":[28,1,156,1,158,1,161,1,163,1,167,1,288,1,289,1]
,"unaffected":[28,1]
,":clearrows":[28,2,120,1]
,"clears":[28,1,175,1,245,1,325,1,572,1]
,"affected":[28,1,252,1,488,1]
,"clearrows":[28,1,39,2,40,1]
,"subsequent":[28,1,29,1,304,1,479,1,481,1,526,1]
,"again":[28,1,226,1,246,2,260,1,262,1,266,1,283,1,289,1,307,1,340,1,345,1,364,1,365,2,369,1,370,1,377,1,435,1,459,2,462,1,469,1,487,1,489,1,504,1,552,1,553,1,571,1,595,1,637,1]
,"effectively":[28,1,636,1]
,"deletes":[28,1,157,1,161,1,175,3,189,1,195,1]
,"reasons":[29,1,458,1,464,1,491,1,517,1,597,1,612,1]
,"operation":[29,1,54,1,104,1,105,2,111,1,112,1,113,1,154,2,156,10,157,1,227,1,228,1,243,1,248,1,258,1,273,5,274,1,280,2,281,4,294,1,376,1,428,1,432,3,436,1,438,2,439,5,440,4,449,1,460,1,481,1,486,2,555,1,560,1,612,1,614,1,632,1]
,"fails":[29,1,54,1,120,1]
,"ilierrormessage":[29,2,30,1,39,1,40,1]
,"triggered":[29,1,52,1,433,1,435,1,568,3]
,"status":[29,1,145,1,233,1,243,1,250,1,252,13,255,2,271,1,548,2,557,2,562,3,568,3,577,17,585,5,587,2,588,2,591,4,592,2,594,4,599,2,612,1,614,1,616,2,635,2,636,3,637,1]
,"origin":[29,2,487,1,490,3,491,1,492,3,551,1,562,2,563,1]
,"enumeration":[29,1,409,2,508,1]
,"tag":[29,1,445,1,446,1,447,1,448,1,449,1]
,"identifies":[29,1,316,1]
,"originates":[29,1,618,1]
,"dbmsserver":[29,1]
,"dbmsclientapi":[29,1]
,"dblink":[29,1,536,1]
,"interpretation":[29,1]
,"caught":[29,2,53,1]
,"ilierrorsink":[29,5]
,"sink":[29,2,53,2]
,"errors":[29,8,53,10,559,2,568,3,636,1]
,"forwarded":[29,2,53,1]
,"{public":[29,2,40,1,42,1,53,1,82,1,120,1,200,1,201,1,377,1,398,1,501,1,509,1,516,1,553,1,557,1,571,1,572,1,639,1,643,1]
,"adderror":[29,3]
,"(const":[29,2,40,1,42,2,73,1,82,7,83,1,84,2,136,1,377,2,436,1,466,2,484,2,485,2,501,1,544,1,547,1,548,1,550,1,552,1,553,3,557,3,560,1,597,1,599,1,610,1,616,1,635,1,636,1,640,1,643,1,644,1]
,"ilierrormessage&)":[29,1]
,"\u002F\u002Fthe":[29,1,112,2,497,1,560,1,585,1,597,6,644,2]
,"intended":[29,1]
,"myerrorsink":[29,1]
,"ilierrormessage&msg)":[29,1]
,"code=%":[29,1]
,"message=":[29,1]
,"msg.getcode":[29,1]
,"msg.getmessage":[29,1]
,"())":[29,2,51,2,52,5,53,1,54,1,56,1,57,1,73,3,75,1,79,1,84,4,120,1,122,2,134,3,135,6,200,2,369,2,402,2,410,2,413,2,449,1,469,2,473,1,480,1,488,1,491,1,494,1,497,1,500,1,501,1,516,6,545,1,547,1,548,2,549,1,550,1,552,2,553,5,554,1,557,2,560,4,572,1,577,12,581,1,585,3,587,2,588,2,591,2,592,2,594,2,596,1,597,1,599,1,612,1,613,1,614,1,616,3,623,1,628,1,635,1,636,1,637,3,640,1,641,4,642,2,643,3,644,1]
,"ilierrorlist":[29,2,53,1]
,"overloading":[29,1]
,"recorded":[29,1,336,1,347,2,348,3,351,2,360,1,364,1]
,"made":[29,2,58,1,64,2,84,1,86,1,110,1,120,1,122,1,146,1,156,2,158,1,161,1,175,1,212,1,216,3,218,1,246,1,263,1,265,1,273,1,294,1,354,2,355,2,360,1,366,1,375,6,376,14,377,11,413,1,423,1,500,1,545,1,552,1,560,1,583,1]
,"inspection":[29,1,135,2]
,"chosen":[29,1,54,4,142,2,223,2,225,1,289,2,350,1,469,1,480,1,481,2,491,2,498,2,510,1]
,":adderrorsink":[29,1]
,"indicate":[29,1,74,1,189,1,274,1,332,1,343,1,359,1,360,2,366,1,367,1,369,1,377,2,400,1,408,1,436,1,464,2,465,2,466,3,467,3,468,3,469,2,515,1,534,1,553,1,557,1,579,1,600,1]
,"adderrorsink":[29,2,53,2]
,"ilitable*tbl":[29,1,32,2]
,"(&errors)":[29,2,53,2]
,"(10))":[29,1,415,1]
,"{for":[29,1,40,1,53,1,577,1]
,"<errors.geterrorscount":[29,1,53,1]
,"errors.geterrorat":[29,1]
,"(i)":[29,1,53,1,54,1,210,3,439,1,440,2,544,3]
,".getmessage":[29,1,53,1,134,1,135,3]
,"removeerrorsink":[29,1,53,2]
,"acted":[29,2]
,"upon":[29,2,213,1,294,1,352,1,519,1]
,"mechanisms":[29,1,577,1,588,1]
,"dbnavigator":[29,1,64,2,175,2,245,1,275,8,276,5]
,"reported":[29,2,53,1,377,1]
,"executes":[29,1]
,"bears":[29,1]
,"responsibility":[29,1]
,"catch":[29,1,53,1,375,1,377,2,568,1]
,"example)":[29,1,106,1,372,1,457,1,524,1,553,2,612,1,641,1]
,"report":[29,1,53,1,451,1,454,1,462,7,472,3,473,2,499,1,500,13,501,2,516,4,517,2]
,"distinction":[29,1,216,1,360,1,512,1]
,"button":[29,1,51,1,60,1,64,1,72,1,87,5,124,5,127,1,142,1,144,1,146,3,156,2,157,7,158,1,161,4,163,2,167,1,171,1,175,14,179,3,189,3,193,5,195,6,218,3,222,3,223,2,225,6,226,7,227,10,230,1,237,2,239,1,240,1,243,1,244,1,245,2,246,13,247,1,251,1,252,2,253,1,254,1,255,1,256,2,258,2,260,1,261,2,262,7,264,2,265,3,266,3,267,3,271,1,273,1,274,2,275,4,276,4,282,1,283,9,284,3,285,1,288,1,289,4,290,5,291,10,294,2,299,1,300,1,301,1,316,5,317,3,333,2,336,2,339,2,427,1,428,7,429,1,430,6,431,1,432,7,433,1,434,1,435,6,474,1,537,1,538,1]
,"item)":[29,1,105,1]
,"validaterow":[29,1,52,5,53,1,158,1,161,1]
,"callback)":[29,1]
,"reporting":[29,1,53,2]
,"execute":[29,1,52,2,122,1,135,3,289,1,501,1,596,1]
,"context":[29,1,372,9]
,"ilierrorreporter":[29,1,53,2]
,"reporterrors":[29,1,53,2]
,"reporter":[29,2,53,2]
,"basis":[29,1,57,1,250,1,454,1,511,1,580,1,631,1]
,"globally":[29,1,75,2,95,1,482,3,484,1,489,1]
,"overridden":[29,1,505,1,506,1,507,1,509,1,596,1,597,1]
,"translated":[30,2,37,1,511,1,597,1,598,1]
,"$ilvhome\u002Fdata\u002Fdataccess\u002Fdataccess.dbm":[30,1]
,"$ilvhome\u002Fdata\u002Fdataccess\u002Fdblink.dbm":[30,1]
,"sequence":[30,1,39,2,489,2]
,"ensure":[30,1,42,1,52,1,99,1,100,1,105,1,122,1,127,1,157,1,229,1,271,1,284,1,317,2,482,1,489,2,492,1,493,1,495,1,498,1,512,1]
,"correctly":[30,1,129,1,340,1,515,1,541,1,554,1,557,1,595,1,596,1,597,1]
,":readmessagedatabase":[30,4]
,"(display":[30,2,48,1,49,2,57,1,60,1,69,1,364,2,365,1,369,2,394,6,402,1,480,1,497,1,585,1,587,2,588,1,635,2]
,"dataccess\u002Fdataccess.dbm":[30,1]
,"dataccess\u002Fdblink.dbm":[30,1]
,"ilitablehook":[31,3]
,"monitor":[31,2,39,1,52,2]
,"undergoes":[31,1]
,"overloaded":[31,1,39,2,558,1]
,"events":[31,1,39,3,40,1,52,1,193,3,195,2,376,1,436,1,460,1,501,2,504,1,516,2,559,2,568,9]
,"print":[31,1,64,2,612,1,615,1]
,"customhook":[31,2]
,"{virtual":[31,1]
,"rowinserted":[31,1,39,4]
,"(int)":[31,1,613,2,616,2]
,"{ilitable*tbl":[31,1]
,"customhook*hook":[31,1]
,"addhook":[31,1]
,"(hook)":[31,2]
,"removehook":[31,1]
,":copytable":[32,1]
,"ilitable*origtable":[32,1]
,"ilitable*clonetable":[32,1]
,"=origtable->":[32,1]
,"copytable":[32,1,84,1]
,"written":[32,2,284,1,340,3,450,1,503,1,506,2,509,2,536,1,595,1,597,1]
,"stream":[32,3,42,1,67,1,142,1,181,3,223,1,549,1,552,1,571,2]
,":writetable":[32,1]
,"ostream&os":[32,1]
,"writetable":[32,1]
,"(os)":[32,1,42,1]
,"rebuilt":[32,1]
,"istream&is":[32,1]
,"=ilitable":[32,1]
,":readtable":[32,1]
,"(is)":[32,1]
,"generation":[34,1,227,1,230,1]
,"statements":[34,1,104,1,105,1,110,2,116,3,120,8,122,1,135,4,157,3,213,2,233,2,243,1,298,2,316,2]
,"checking":[34,1,81,1,227,1,259,1,262,1,558,1]
,"locally":[35,1,95,1,96,1,112,3,120,1,411,1,415,1,482,2,489,1,606,1]
,"temporarily":[35,1,250,1]
,"query":[35,1,51,1,64,7,104,2,121,1,123,1,124,10,154,2,156,1,157,6,175,10,200,1,218,2,232,1,243,2,250,1,253,1,257,3,271,1,273,1,275,5,276,17,280,1,299,1,300,2,455,1,481,1,487,1,537,1,553,1,572,1,596,7,597,7]
,"single":[36,1,52,1,127,3,187,3,189,3,298,1,339,1,356,1,369,1,382,1,383,7,384,6,385,1,386,1,387,1,388,1,389,1,390,1,391,1,392,1,393,1,394,1,395,1,400,1,405,1,406,2,408,6,409,1,410,5,427,1,481,1,575,1,576,2,598,1]
,"exceptions":[36,1,37,1]
,"changed":[36,1,37,2,39,5,52,1,58,2,64,1,77,1,82,3,87,1,96,1,105,1,110,3,130,1,142,1,154,2,156,2,157,2,158,1,162,1,169,3,187,1,189,1,204,1,222,1,223,1,229,1,230,1,311,1,339,1,346,1,375,1,377,3,397,1,407,1,409,2,421,1,424,1,427,1,428,1,430,1,432,1,435,1,459,1,462,2,469,1,504,1,507,1,515,1,528,3,531,1,568,2,603,1]
,"char*c":[36,1,586,1]
,"ilvdisplay*dpy":[36,1,37,1,41,1,57,1,137,1]
,"ilidatasource*ds":[36,1,37,1,41,1,48,1,51,2,52,1,53,1,54,2]
,"ilistringstable*tbl":[36,1]
,"(dpy)":[36,1,40,1]
,"\u002F\u002Fno":[36,1,597,1]
,"appendstring":[36,3]
,"ds->":[36,1,37,1,41,1,48,1,51,7,52,12,53,6]
,"settable":[36,1,37,1,41,1,48,1]
,"(tbl)":[36,1,48,1]
,"construction":[37,1,47,1,486,1]
,"afterwards":[37,1]
,":setlanguagesensitive":[37,1]
,"ilimapentry":[37,1]
,"entries":[37,1,64,2,88,1,156,1,157,2,243,1,247,1,340,1]
,"={1":[37,1]
,"red":[37,1,195,2,364,4,388,2,389,1,390,1,391,1,392,2,393,2,394,1,396,2,397,3,399,1,403,2,528,1,531,1,597,4,636,2]
,"green":[37,1,149,1,195,1,261,1,392,2,393,2,394,1,397,3,402,1,547,2,557,1,581,1]
,"blue":[37,1,149,1,193,1,261,1,364,4,385,2,386,2,387,1,394,1,399,1,403,2,564,2,581,2]
,"ilimaptable*tbl":[37,1]
,"(dpy":[37,1,41,1,42,1,120,1,137,1]
,"entries)":[37,1]
,"(tbl":[37,1,41,1]
,"iltrue)":[37,1,41,1,106,1,365,1,481,1,635,4,637,1,644,1]
,"guidelines":[38,1,39,2,75,2]
,"persistence":[38,1,42,1,539,2,549,1,643,1]
,"respected":[39,1]
,"one-and":[39,1]
,"overload":[39,3]
,"mandatory":[39,5,156,2,203,1,204,1,208,14,310,1,311,1,502,1,503,1,544,1,639,3]
,"optional":[39,11,203,1,204,1,208,11,223,1,305,1,310,1,311,1,316,1,367,1,408,2,544,1,575,3,576,3,577,1]
,"allowrowmove":[39,1]
,"isselectdone":[39,1,40,1]
,"fetchcompleted":[39,1]
,"fetchnext":[39,1,52,1,112,1,135,4]
,"notify":[39,2,40,1,376,2,515,1,516,1,572,1]
,"notification":[39,1,67,1,180,1,181,1,376,2,504,2,516,1]
,"allrowsdeleted":[39,1,40,1]
,"tablechanged":[39,1,40,2]
,"undergone":[39,2]
,"significant":[39,1,116,1]
,"just":[39,11,79,1,95,1,129,1,135,1,222,1,223,2,238,1,244,1,248,1,253,1,263,1,273,1,283,1,288,1,290,1,330,1,332,1,336,2,338,1,340,5,342,1,345,1,348,1,349,1,364,1,369,1,383,1,394,1,413,1,417,1,419,1,480,1,507,1,511,1,560,1,564,1,570,1,597,3,614,1]
,"rowsinserted":[39,2]
,"repeatedly":[39,3,65,1,222,1,226,1,262,1,495,1]
,"rowtobechanged":[39,1]
,"rowchanged":[39,3,40,1]
,"rowtobedeleted":[39,1]
,"rowdeleted":[39,1]
,"rowmoved":[39,1]
,"moved":[39,1,47,1,169,1,187,1,189,1,193,2,195,2,246,1,257,1,454,1,462,1,481,1,482,1,489,1,495,1,498,1,504,1,517,3]
,"rowsexchanged":[39,1]
,"rowfetched":[39,2]
,"fetched":[39,2,110,1,112,4,117,2]
,"called)":[39,1]
,"rowsfetched":[39,1]
,"cellchanged":[39,3]
,"cell":[39,2,43,2,44,5,57,9,91,2,129,4,156,9,158,9,161,7,163,1,167,1,243,2,246,14,247,6,248,5,252,7,253,1,254,1,255,2,258,1,273,2,282,10,283,1,336,2,348,2,579,2,598,1]
,"preferable":[39,1,250,1]
,"times":[39,1,205,1,262,1,312,1,336,1,348,1,376,2,440,1,459,1,467,1,468,1,469,1,480,1,501,1,533,1,534,1,579,1]
,"raiseerror":[39,1,40,4]
,"occurs":[39,1,52,2,84,1,88,1,376,1,479,1,496,1,612,2,618,1,636,1,637,1]
,"implementor":[39,2]
,"cells":[39,1,43,1,44,1,45,2,57,3,129,1,156,8,158,9,161,5,241,2,245,1,246,1,248,1,250,1,252,2,254,1,255,5,257,1,258,1,274,1,282,2,300,1,316,1,336,1,476,2,579,2,598,1]
,"twice":[39,1]
,"similarly":[39,1,49,1,374,1,380,1,402,2,412,1,489,1,628,1]
,"consecutive":[39,1,458,1]
,"notified":[39,2,504,1,560,1,568,4]
,"consequence":[39,1,45,1,84,1,121,1,552,1]
,"otherwise":[39,1,54,4,212,1,237,1,248,1,336,2,339,1,364,1,365,1,377,1,383,2,384,1,386,1,400,1,403,4,415,1,419,1,485,1,489,3,507,1,511,1,550,1,552,1,557,1,566,1,618,1]
,"missed":[39,1]
,"bold":[40,1,261,2,271,1,386,1]
,"<dirent.h>":[40,1]
,"<string.h>":[40,1]
,"<stdio.h>":[40,1]
,"<limits.h>":[40,1]
,"<ilviews\u002Fdataccess\u002Ftable.h>":[40,1,42,1]
,"columntags":[40,1]
,"{filename":[40,1]
,"(ilvdisplay*dpy":[40,1,42,1,53,1]
,"char*directory)":[40,1]
,"{_rowscount":[40,1]
,"_files":[40,10]
,"=null":[40,2,157,2]
,"_directory":[40,4]
,"=dupstring":[40,3]
,"(directory)":[40,1]
,"(filename":[40,1,557,2,592,1,594,1]
,"filename":[40,1,560,2,585,1]
,"{tidy":[40,3]
,"ilvboolean":[40,6,73,1,201,3,400,2,433,1,435,1,549,1,553,7,572,1,597,2,640,1,644,1]
,"{readdir":[40,1]
,"{return":[40,2,120,3,136,1,200,1,201,3,340,2,372,2,398,2,549,1,553,5,560,3,643,2]
,"!=null":[40,1]
,"ilvint":[40,2,54,1,57,1,82,2,548,1,549,1]
,"_rowscount":[40,5]
,"ilivalue&value)":[40,1]
,"{if":[40,1,42,1,45,1,84,2,120,1,200,4,201,2,377,1,552,1,553,2,560,2,643,1]
,">=0":[40,2]
,"&&rowno":[40,2]
,"<_rowscount":[40,3]
,"&&colno":[40,1]
,"==0)":[40,2,548,1,553,1,557,1]
,"{value":[40,1]
,"=_files":[40,1]
,"[rowno]":[40,3]
,"iltrue":[40,3,120,1,365,1,464,1,465,1,466,1,467,3,468,3,469,2,481,1,507,1,509,1,517,1,597,3,640,3,644,1]
,"ilfalse":[40,5,120,1,464,1,465,2,466,1,467,2,468,2,469,1,470,1,481,1,486,1,492,1,509,1,560,1,644,1]
,"ilitablebuffer*buf)":[40,2]
,"{const":[40,2,84,1,121,2,544,3,548,1,554,1,577,2]
,"ilivalue&value":[40,1]
,"(filename)":[40,1,553,1,554,1,557,3,560,1,583,1,591,1,599,1,635,2]
,"&&!":[40,1]
,"value.isnull":[40,1]
,"&&value.gettype":[40,1]
,"==ilistringtype)":[40,1]
,"char*newname":[40,1]
,"=value.asstring":[40,1]
,"char":[40,3,379,2,544,1,549,1,553,2,597,1,615,2,616,2,628,2,637,2,644,1]
,"oldpath":[40,1]
,"[_posix_max_path]":[40,2]
,"newpath":[40,1]
,"sprintf":[40,2,409,1,637,2]
,"(oldpath":[40,2]
,"s\u002F%":[40,2]
,"[rowno])":[40,1]
,"(newpath":[40,1]
,"newname)":[40,1]
,"(rename":[40,1]
,"newpath)":[40,1]
,"{delete":[40,1]
,"(newname)":[40,1]
,"{ilierrormessage":[40,3]
,"msg":[40,4]
,"msg.setapplicationerror":[40,4]
,"(strerror":[40,2]
,"(errno))":[40,2]
,"(msg)":[40,4]
,"directorytables":[40,2]
,"deletion":[40,1,52,1,131,1,154,1,161,2,175,3,189,5,193,1,195,2]
,"private":[40,1,122,1,501,1,553,2,557,1,571,1,572,2,635,1,643,7]
,"char*_directory":[40,1]
,"char**_files":[40,1]
,"char*dupstring":[40,1]
,"char*str)":[40,1]
,"{char*d":[40,1]
,"[strlen":[40,1,549,1]
,"(str)":[40,1]
,"strcpy":[40,1,597,1]
,"str)":[40,1]
,"tidy":[40,1]
,"[i]":[40,1,489,1,577,1]
,"readdir":[40,2]
,"{dir":[40,1]
,"*dir":[40,1]
,"=opendir":[40,1]
,"(_directory)":[40,1]
,"(dir":[40,1]
,"!=null)":[40,3,75,1,84,1,121,1]
,"struct":[40,1]
,"dirent*entry":[40,1]
,"((entry":[40,2]
,"=readdir":[40,2]
,"(dir))":[40,2]
,"char*[_rowscount]":[40,1]
,"rewinddir":[40,1]
,"(dir)":[40,2]
,"[_rowscount":[40,1]
,"(entry->":[40,1]
,"d_name)":[40,1]
,"closedir":[40,2]
,"opendir":[40,1]
,"directorytable*tbl":[41,1]
,"\u201C\u002Fusr\u002Fhome\u002Fme":[41,1]
,"existing":[41,1,51,1,56,1,87,1,154,1,155,1,158,1,230,1,240,1,243,1,289,1,375,2,377,5,503,1,506,1,541,1,546,2,550,1,560,1,594,1]
,"want":[42,2,51,4,72,1,95,3,97,1,105,1,118,1,129,1,131,1,135,1,141,1,145,1,146,1,149,1,150,1,211,1,218,2,222,1,223,2,225,2,227,3,234,1,238,2,240,1,243,2,247,1,250,1,255,1,257,1,261,1,264,1,266,1,267,1,275,1,288,3,289,1,292,2,303,1,316,2,317,2,321,2,323,3,330,4,333,1,336,8,337,1,338,2,339,1,340,4,341,2,342,2,343,1,345,2,346,3,347,1,349,3,351,1,354,2,363,2,364,9,365,10,368,2,373,1,376,1,377,3,383,1,394,4,395,1,398,2,399,2,400,1,402,4,407,1,410,2,412,2,415,1,418,1,422,1,425,2,436,2,439,2,458,1,462,3,466,2,467,1,468,1,469,1,470,2,474,1,476,1,481,1,486,4,489,3,492,1,506,1,515,3,521,1,524,1,526,2,527,1,529,1,530,1,531,2,532,1,534,1,536,2,537,3,548,1,549,1,554,1,557,1,558,3,559,1,595,1,596,4,597,3,623,1]
,"persistent":[42,4,427,1,546,2,549,4,571,1]
,"making":[42,1,211,1,213,1,214,1,226,1,250,1,283,1,546,1,549,1]
,"items":[42,1,71,1,121,1,141,2,142,3,154,2,157,2,166,1,172,1,184,1,186,1,187,2,189,10,223,3,258,2,260,1,288,7,289,5,291,9,292,1,300,1,322,2,334,4,364,6,375,1,376,7,377,4,385,1,386,1,387,1,388,1,389,1,390,1,391,1,392,7,393,5,394,1,396,1,397,4,399,4,417,2,418,11,419,2,438,2,486,1]
,"declared":[42,1,119,1,609,1,639,1,640,1,643,2]
,"constructor":[42,2,133,1,364,2,365,1,369,4,377,3,410,2,428,1,430,1,432,1,435,1,516,1,558,1,571,3,583,1,633,1,635,3,640,4,643,4]
,"ilideclaredtypeinfo":[42,2]
,"macro":[42,3,136,1,553,1,639,3,640,5,643,6]
,"declaration":[42,1,607,1,609,1,639,3]
,"write":[42,2,227,1,283,1,336,1,340,1,345,1,348,1,372,1,505,1,540,1,545,1,546,1,548,1,549,4,550,1,551,1,559,1,571,3,572,1,577,1,595,1,596,6,597,7,638,1,643,6,644,1]
,"operator==u":[42,1]
,"ilideclaretypeinit":[42,2]
,"directorytable&)":[42,2]
,"(ilvdisplay*":[42,1]
,"istream&)":[42,1]
,"(directorytable)":[42,2]
,"(ostream&)":[42,1]
,"operator":[42,1,82,4,105,2,124,2,156,2,248,3,276,2,597,7]
,"==(const":[42,2]
,"iliregisterdclass":[42,2]
,"constructors":[42,1,364,1]
,"outline":[42,1,387,1,389,1,390,1,391,1,393,1,394,1]
,"left":[42,1,87,1,88,1,97,4,121,1,154,1,156,2,157,5,158,2,161,1,163,3,165,2,167,2,169,1,171,3,183,1,187,3,189,4,203,3,208,3,218,1,219,1,222,1,223,1,226,1,242,1,243,4,244,1,246,1,247,2,248,2,250,1,252,2,253,2,255,3,257,1,260,2,265,3,271,1,288,3,289,2,299,1,300,2,310,3,316,1,322,1,327,1,328,1,331,1,383,1,386,2,428,2,432,2,435,2,476,1,481,5,482,3,483,3,486,5,487,1,489,8,490,1,498,3,534,1,577,1]
,"fill":[42,1,73,1,84,1,157,1,161,1,218,2,222,2,245,1,250,1,251,1,252,1,254,1,255,1,258,1,300,1,332,2,336,1,339,1,348,1,373,2,472,1,480,1,488,1,491,1,494,1,495,1,497,2,498,1,528,1,530,1,600,1]
,":directorytable":[42,2]
,"directorytable&o)":[42,2]
,"(o)":[42,1]
,"istream&is)":[42,1]
,"is)":[42,1]
,":write":[42,2,549,1,571,1,643,3]
,"(ostream&os)":[42,1]
,"{ilitable":[42,1]
,":operator":[42,2]
,"==(o))":[42,1]
,"(directorytable":[42,1]
,"ilitable)":[42,1]
,"annotating":[43,1,486,1]
,"parts":[43,3,44,3,121,15,221,1,246,1,298,3,299,1,300,2,301,2,318,1,332,1,386,5,454,1,486,1,489,2,534,1,540,1,586,1,592,1]
,"contrast":[43,1,483,1]
,"content":[43,1,125,1,531,1,534,1,596,2,597,2]
,"table\u0027s":[43,1]
,"rows)":[43,1,156,1]
,"ilsymbol":[43,1,52,1]
,"*object)":[43,1]
,"object)":[43,1,262,2,377,1,496,1,575,1]
,"names":[43,1,45,1,68,1,98,1,99,1,130,2,133,1,145,1,149,1,161,1,163,5,165,2,167,6,169,2,171,5,173,5,175,1,179,2,181,1,183,2,185,2,187,5,189,5,193,14,195,37,209,1,210,1,226,1,227,6,238,1,243,1,250,1,252,2,255,2,261,1,264,1,291,2,305,2,308,1,336,1,366,2,481,1,524,1,529,1,560,2,570,1,597,4]
,"(two":[43,1]
,"row)":[43,1,135,1,156,3,562,6]
,"delegates":[43,1,512,1]
,"ilitablepropertymanager":[43,1]
,"manager":[43,2,45,2,54,1,75,2,102,1,120,13,145,1,157,5,158,5,161,3,163,3,165,3,167,3,169,3,171,3,173,3,185,3,187,3,228,1,232,3,233,1,234,1,242,1,243,1,256,3,262,2,268,1,269,3,270,3,271,1,273,2,275,8,277,4,291,1,364,2,372,4,419,2,436,12,454,1,462,1,466,13,503,1,508,1,510,3,511,2,513,1,514,1,515,5,520,1,540,1,548,2,552,1,554,5,556,3,557,8,558,6,559,1,560,7,561,1,563,3,566,3,571,1,601,1,633,2,635,3,636,3,637,1]
,"managers":[43,2,157,1,158,1,560,1,636,1]
,"requirement":[43,1,638,1,639,1]
,"property-manager":[43,1]
,"scoped":[44,5]
,"containment":[44,1]
,"consequently":[44,1,84,1,121,1,122,1,200,1]
,"containing":[44,1,124,1,127,1,156,4,157,1,158,4,161,1,163,3,167,3,171,3,173,3,185,3,187,4,189,4,250,1,264,1,269,1,276,1,289,1,294,1,297,1,306,1,307,1,336,1,340,2,345,1,348,1,515,1,526,1,531,1,534,1,537,3,538,3,556,1,563,2,579,1,591,1,597,1,598,1,615,1,635,1]
,"closest":[44,1]
,"conflict":[44,1,486,1]
,"precedence":[44,2,45,1,195,4]
,"lookup":[44,1]
,"follows":[44,1,52,1,54,1,84,1,108,2,110,1,119,1,121,2,122,1,135,1,216,1,248,1,257,1,258,1,282,1,283,1,300,1,329,1,331,1,332,1,333,1,340,1,351,1,364,1,365,1,377,1,401,1,450,1,481,1,482,1,483,1,484,1,485,1,495,1,501,1,509,1,511,1,516,1,524,1,553,3,559,1,576,1]
,"property-aware":[45,3]
,"sensitive":[45,2]
,"expected":[45,1,73,1,122,1,201,1]
,"simultaneously":[45,1,110,1,485,1,515,1,576,1]
,"attributes":[45,1,157,1,222,1,446,1,466,3,467,1,468,1,517,2,524,1,526,3,528,1,529,11,530,2,537,3,538,3,541,2,542,1,544,9,545,4,547,1,548,1,552,2,553,6,556,1,560,1,575,1,576,5,577,1,583,1,596,4,597,9,598,1]
,"font":[45,4,57,1,147,1,148,9,161,10,163,4,222,3,226,1,261,1,271,1,289,1]
,"color)":[45,1]
,"identical":[45,1,84,1,486,1,561,1,631,1]
,"decides":[45,1]
,"demand":[45,1,592,1]
,"currently":[45,1,117,1,120,1,133,1,157,1,222,2,224,3,283,1,295,1,296,1,336,2,427,1,462,1,512,1,534,1]
,"ilitablegadget":[45,1,55,1,57,5,97,2,142,1,159,1,160,2,161,2,223,1]
,"ilidbfield":[45,1,55,1,58,3,86,1,87,4,89,1,90,1,91,1,142,1,159,1,162,2,163,1,223,1]
,"ilidbtext":[45,1,55,1,61,3,142,1,159,1,168,2,169,1,223,1]
,"ilitablecombobox":[45,1,55,1,57,1,60,4,89,1,90,2,142,1,159,1,166,2,167,1,223,1]
,"ilidbstringlist":[45,1,55,1,70,3,142,1,159,1,186,2,187,1,223,1]
,"ilitoggleselector":[45,1,55,1,63,3,89,1,90,1,142,1,159,1,172,2,173,1,223,1]
,"ilidbtoggle":[45,1,55,1,56,1,62,3,87,3,142,1,159,1,170,2,171,1,223,1]
,"ilidboptionmenu":[45,1,55,1,69,4,142,1,159,1,184,2,185,1,223,1]
,"(when":[45,1,246,3]
,"applicable)":[45,1]
,"background":[45,1,57,3,149,1,161,3,179,2,193,6,195,2,222,1,259,1,261,2,263,1,264,10,277,2,285,2,292,2,332,1,334,1,339,6,352,1,383,1,384,1,387,1,389,1,390,1,391,2,393,1,394,1,396,2,418,2,451,1,456,1,457,1,519,1,534,1,600,2]
,"foreground":[45,1,57,1,161,3,163,1,193,4,195,2,222,1,339,2,383,1,384,1,385,1,386,1,387,1,388,1,389,1,390,1,391,1,392,1,393,1,394,2,396,2,600,1]
,"readonly":[45,3]
,"boolean":[45,1,57,1,62,2,87,8,88,3,156,2,158,1,193,1,365,2,403,1,410,1,600,2]
,"makeprimarycolumnsreadonly":[45,2]
,"(ilitable*table)":[45,1]
,"{ilvint":[45,1]
,"=table->":[45,1,84,1]
,"allrows":[45,1]
,"=-1":[45,2,489,1]
,"allcolumns":[45,2]
,"=-2":[45,1]
,"ilvsymbol*readonlyname":[45,1]
,"=ilvgetsymbol":[45,1,75,1,372,1]
,"trueval":[45,1]
,"=(ilint)":[45,2,121,3]
,"falseval":[45,1]
,"<count":[45,1,54,1,489,1,544,1,577,1,583,1]
,"(table->":[45,1]
,"(colno))":[45,1,135,2]
,"{table->":[45,1]
,"setproperty":[45,2,449,3]
,"(allrows":[45,1]
,"readonlyname":[45,2]
,"trueval)":[45,1]
,"table->":[45,1,84,2]
,"(insertrow":[45,1,84,1]
,"falseval)":[45,1]
,"works":[45,1,71,1,72,1,77,1,80,1,209,1,211,1,245,1,255,1,332,1,480,1,482,1,486,1,488,1,489,1,517,1,559,1,560,2,580,1,583,1,592,1]
,"reason":[45,1,243,1,346,1,394,1,485,1,487,1,506,1,517,3,545,1,552,1,610,1,618,1,631,1]
,"false":[45,1,51,1,142,1,171,1,223,1,336,1,544,1,619,2]
,"(whatever":[45,1]
,"column)":[45,1,271,1,299,1]
,"glues":[47,1]
,"appears":[47,1,48,1,105,1,121,2,131,1,141,2,145,1,148,1,149,2,150,1,153,1,155,1,156,4,157,4,158,3,167,1,169,1,179,2,187,3,189,1,204,2,216,3,218,7,221,1,225,2,226,1,227,1,228,2,229,1,236,2,237,5,238,1,240,2,243,8,245,1,246,3,247,2,248,1,250,2,251,1,252,1,253,4,254,1,256,2,257,2,258,2,261,2,262,6,263,1,264,4,265,2,266,1,267,3,271,2,273,1,274,2,280,1,282,6,283,2,284,1,288,1,289,7,294,2,299,1,300,2,311,2,316,5,317,2,321,1,322,2,323,1,324,1,325,1,328,1,329,1,331,1,332,1,333,1,334,1,336,4,337,1,340,2,364,4,365,1,366,1,377,1,386,1,474,2,500,4,525,1,526,1,534,1,536,3,537,2]
,"inspected":[47,2]
,"current":[47,2,51,7,52,2,56,4,57,2,64,9,86,1,99,2,118,1,121,1,155,1,156,7,157,2,158,5,161,5,163,3,165,1,167,3,169,1,171,3,173,3,175,4,179,1,181,1,183,1,185,4,187,4,189,1,191,4,193,2,195,6,218,1,223,1,224,2,225,1,226,1,227,2,229,1,230,3,236,1,238,1,240,1,243,3,244,1,245,1,256,1,257,3,258,2,267,2,275,1,276,1,283,1,284,1,289,1,300,1,327,1,328,1,330,1,332,4,336,9,340,7,341,2,345,1,348,2,349,2,386,2,407,3,462,1,464,2,465,1,466,3,467,3,468,3,469,2,470,1,481,2,482,3,483,1,484,1,489,6,492,7,495,2,498,9,501,2,514,2,515,2,537,1,569,1,627,2]
,"discussed":[47,1,524,1,619,2]
,"ilidatagem":[47,2,50,2,56,1]
,"during":[47,2,51,1,134,1,238,1,454,2,481,1,486,2,489,2,500,1,501,3,507,1,508,1,509,1,517,1,618,1,639,1,640,1,643,1,644,1]
,"phase":[47,1,315,1,489,1,639,1,643,1,644,1]
,"mode":[47,1,57,2,64,5,102,1,109,6,110,1,111,2,112,1,113,2,114,1,115,1,116,1,118,3,120,2,122,8,123,1,124,9,158,1,171,1,175,14,189,1,195,1,208,1,222,11,226,4,232,1,245,3,246,1,247,1,250,1,251,1,252,2,254,1,255,1,256,2,257,4,258,2,261,2,262,1,265,2,266,1,273,1,275,5,276,11,280,1,282,2,283,2,284,1,289,1,290,5,300,1,301,1,321,1,332,11,336,1,340,5,424,2,432,5,438,6,439,12,440,8,470,3,479,6,480,2,481,11,482,5,483,20,484,28,485,5,486,5,529,1,534,1,536,1,537,1,549,1]
,"tested":[47,1,230,1,283,1,636,1]
,"scope":[47,1,50,3,54,3,56,3,643,1]
,"customizing":[47,1,52,1,57,2,73,1,74,1,318,2,319,2,335,1,336,7,338,2,341,4,347,3,349,1,350,1,351,3,364,2,365,4,366,1,382,1,394,1,401,1,405,1,413,2,450,1,454,1]
,"repository":[47,1,50,1,54,6]
,"ilvgadgetcontainer*panel":[48,1]
,"\u002F\u002Fcreate":[48,2,49,2,107,1,121,1,200,1,439,1,440,2,497,1,557,1,577,1,596,2]
,"ilvpoint":[48,1,57,1,481,1,497,1,504,3,548,1,560,2,572,2,636,1,637,1]
,"(10":[48,1,364,2,365,1,369,2,377,2,394,1,481,2,624,2]
,"10))":[48,1,364,1]
,"memory-table":[48,2]
,"appendcolumn":[48,2,106,4]
,"\u002F\u002Fassign":[48,1,51,1,197,1,199,1]
,"\u002F\u002Fput":[48,1]
,"panel->":[48,2,49,2,57,1,60,1,69,1,70,1]
,"addobject":[48,1,49,2,57,1,60,1,69,1,70,1,547,1,550,2,552,1,572,2,585,1,591,1,599,1,635,2,636,1]
,"(ds)":[48,1]
,"setobjectname":[48,1]
,"(ds":[48,1]
,"emp":[48,1,49,3,54,2,56,1,57,1,60,2,69,2,70,2,104,5,106,1,107,1,110,4,114,2,115,2,116,1,119,1,135,2,255,1]
,"instantiates":[48,2,500,1,630,1]
,"difference":[48,2,51,1,82,1,369,1,439,1,484,1,489,2,493,1,504,1]
,"instantiate":[48,1,369,1,462,1,500,1,597,1]
,"convenience":[48,1]
,"slight":[48,1,212,1]
,"bitmap":[48,1,68,1,171,2,183,2,187,2,189,1,193,4,225,1,264,6,289,1]
,"entry-field":[49,3]
,"ilientryfield*ef":[49,1,56,1]
,"ilvrect":[49,2,57,2,60,1,69,1,70,1,364,4,365,3,369,3,394,2,480,1,516,2,560,2,564,1,572,1,635,3]
,"(25":[49,2]
,"22))":[49,2,364,1]
,"(ef)":[49,2]
,"\u002F\u002Fconnect":[49,2,60,1,69,1,70,1]
,"ef->":[49,4,56,2]
,"f_setdatasourcename":[49,2,56,2,57,2,60,1,69,1,70,1]
,"f_setdatasourcecolumnname":[49,2,56,1,60,1,69,1,70,1]
,"newly":[49,1,290,2,440,4,516,1,552,1]
,"155":[49,1]
,"global":[50,1,54,2,55,1,56,3,75,16,95,5,120,1,155,1,158,1,161,3,200,2,205,3,243,1,312,3,331,1,354,2,376,1,379,2,431,1,482,13,483,2,484,3,489,5,547,1,598,1,600,1,631,1]
,"hasglobalscope":[50,1]
,"setglobalscope":[50,1]
,"determine":[50,1,54,1,58,1,75,1,135,1,304,1,305,1,422,1,425,1,476,2,482,1,486,3,553,1,557,2,572,1,614,1]
,"precise":[50,1,484,1,579,1]
,"differ":[51,1,84,1,322,1,619,1]
,"concept":[51,1,360,1,503,1]
,"direct":[51,1,97,1,486,3,490,2,491,2,492,1,559,1,572,1]
,"moving":[51,1,157,1,453,1,478,1,489,2,490,1,534,1,560,1]
,"regard":[51,1,601,1]
,"(current":[51,1]
,"not)":[51,1,339,1,355,1]
,"cases":[51,1,52,1,53,1,201,1,218,1,457,1,458,1,459,1,460,1,466,1,479,1,482,1,488,1,493,2,494,1,500,1,501,1,515,2,524,1,576,1]
,"ilidbnavigator":[51,3,55,1,64,3,88,1,124,1,142,1,159,1,174,2,175,1,223,1]
,"connects":[51,1,251,1,273,1]
,"calls":[51,2,52,4,57,1,118,1,122,5,157,2,222,1,289,1,482,1,489,1,492,1,495,1,498,1,500,1,507,1,513,1,572,1,610,1,637,1,640,1,641,2,642,1,643,1]
,"re-evaluate":[51,1]
,"goto":[51,1]
,"gotoprevious":[51,1]
,"gotonext":[51,1]
,"gotofirst":[51,1]
,"gotolast":[51,1]
,"gotorow":[51,4,53,1]
,"parameter":[51,2,82,2,83,1,99,1,119,5,125,1,126,8,127,10,133,2,156,7,258,4,283,2,300,1,332,2,340,1,364,4,365,6,369,6,372,1,377,1,394,3,400,3,403,1,409,2,410,2,421,1,422,3,425,3,428,1,430,1,432,2,435,1,438,1,440,1,441,1,454,9,462,1,463,2,469,3,478,2,481,1,482,3,483,2,484,2,486,1,489,6,492,3,495,3,498,12,516,2,517,4,526,1,534,1,537,2,557,1,572,1,591,1,619,1,624,2,640,1,643,7,644,1]
,"fields)":[51,1]
,"adjusted":[51,1,485,1]
,"underlying":[51,2,52,1,53,1,57,2,58,1,118,1,130,1,161,3,217,1,504,2,506,2]
,"proceed":[51,1,122,2,203,1,208,1,310,1]
,"\u002F\u002Fwe":[51,2]
,"2nd":[51,1]
,"\u002F\u002Fmake":[51,1]
,"setvalue":[51,5,52,1,53,1,424,1,425,1,553,1]
,"\u201D))":[51,2,52,1,53,1,135,2]
,"\u002F\u002Fvalidate":[51,2]
,"ilvprint":[51,2,52,2,56,1,73,1,83,2,84,2,121,2,134,2,135,7,200,1,473,1,500,1,501,1,544,4,552,1,554,2,562,5,612,2,613,1,614,1,615,1,616,4,627,2,628,2]
,"retains":[51,1]
,"pending":[51,2,120,1]
,"isinputmodified":[51,2]
,"period":[51,1,74,2,177,3,195,8,439,3,440,4,448,1,449,1,537,1,538,1]
,"canceled":[51,1,135,2]
,"cancel":[51,1,64,1,120,3,122,1,124,3,157,3,246,1,257,1,275,1,276,2]
,"startinsert":[51,2]
,"(32))":[51,1]
,"jones":[51,1,110,3]
,"disable":[51,1,179,1,181,1,189,8,193,2,346,1,492,2]
,"enableinsert":[51,1]
,"deletecurrentrow":[51,1]
,"remove":[51,1,154,1,157,2,230,1,243,2,273,1,288,1,289,3,291,5,317,3,325,1,327,1,328,1,336,2,340,2,345,1,346,1,348,1,349,1,374,2,375,2,467,1,468,1,482,1,495,1,498,1,507,1,571,1]
,":setcallback":[52,1]
,"addcallback":[52,1,73,1,74,2]
,"ilvcallback":[52,5,57,2,122,1]
,"myenterrow":[52,1]
,"(ilvgraphic*g":[52,5,57,2,73,1,74,2,75,3]
,"ilany)":[52,5,57,2,122,1,409,1]
,"{ilidatasource*ds":[52,5,53,1,54,1]
,"=(ilidatasource*)":[52,3,54,1]
,"getcurrentrow":[52,1,121,1]
,"getname":[52,2,84,1,377,2,383,1,407,1,637,2]
,"char**argv)":[52,2,53,1]
,"setcallback":[52,5,57,2,75,2]
,":enterrowsymbol":[52,1]
,"myenterrow)":[52,1]
,"enterrow":[52,3,158,1,161,1]
,"becomes":[52,1,54,1,87,1,146,1,243,2,252,1,262,1,265,2,289,1,290,1,333,1,453,1,486,1,534,1,560,4]
,"*(for":[52,1]
,"enterrowsymbol":[52,1]
,"onenterrow":[52,1]
,"turn":[52,1,87,1,127,1,133,1]
,"(if":[52,1,157,1,257,1,316,1,375,1,386,1,404,1,415,2,419,2,482,2,484,1,489,1,495,2,498,2,595,1,597,1]
,"any)":[52,1,73,3,74,2,375,1,482,2,489,1,495,2,498,2,597,1]
,"monitoring":[52,1]
,"quitrow":[52,1,158,1,161,1]
,"enterupdatemode":[52,2,161,1]
,"prepareupdate":[52,2,53,1,158,1,161,1]
,"quitupdatemode":[52,2,158,1,161,1]
,"canceledits":[52,3,158,1,161,1]
,"starts":[52,1,99,1,118,1,195,2,224,1,275,3,462,1,480,1,482,1,492,1]
,"(by":[52,1,57,1]
,"typing":[52,1,105,1,156,2,158,2,163,2,167,2,261,1]
,"keyboard)":[52,1]
,":isinputmodified":[52,1]
,"finished":[52,1,133,2,135,1,232,1,237,1,242,1,243,1,266,1,269,1,273,1,278,1,281,1,289,2,291,1,297,1,302,1,317,1,365,1,527,1]
,"proceeds":[52,1,203,2,310,2]
,"checks":[52,2,449,1,462,1,560,1]
,"logic":[52,1,294,1,455,1,600,1]
,"on-the-fly":[52,1,105,1]
,"adjustments":[52,1,266,1]
,"section)":[52,2]
,"enabling":[52,1]
,"myvalidaterowcallback":[52,1]
,"(ds->":[52,2]
,"qty":[52,1]
,".asinteger":[52,2,57,1,73,1]
,"15)":[52,1]
,"{ds->":[52,2,53,1]
,"dontvalidaterow":[52,4,53,1]
,"adderrormessage":[52,4,53,1]
,"quantity":[52,1]
,":validaterowsymbol":[52,1]
,"myvalidaterowcallback)":[52,1]
,"criterion":[52,1,127,1]
,"satisfied":[52,1,572,1]
,"stop":[52,1,53,1,120,2,332,1,376,1,422,1,425,1,454,1,464,2,517,1]
,"agree":[52,1]
,"function)":[52,1,227,1]
,"transmitted":[52,1,376,2,568,1]
,"succeeds":[52,1]
,"cancels":[52,1,64,1,124,1]
,"modifications":[52,1,354,1,360,1,375,6,376,14,377,13,440,6]
,"enterinsertmode":[52,1,158,1,161,1]
,"prepareinsert":[52,2,53,1,158,1,161,1]
,"quitinsertmode":[52,1,158,1,161,1]
,"work":[52,1,57,1,74,1,82,1,95,2,108,1,110,1,127,2,130,1,134,1,135,5,141,1,155,1,195,6,216,2,220,2,222,6,223,2,226,2,227,1,230,1,238,1,240,2,242,1,243,1,256,2,258,1,261,1,262,3,264,2,267,2,282,1,283,1,288,2,289,1,322,1,323,1,332,1,336,2,340,1,345,1,346,1,348,1,358,2,367,3,453,1,483,3,484,4,485,1,486,1,489,1,502,1,504,1,506,1,517,1,528,1,549,1,553,1,596,1]
,"compute":[52,2,74,1,105,1,156,2,367,1,368,1,405,1,409,1,411,5,415,1,460,1,469,1,492,1,495,1,504,2,512,1,513,1,516,1,553,1,607,1,641,1]
,"identifier":[52,1,72,1,73,2,189,2,193,2,195,17,446,1,596,2,597,1]
,"myinsertrowcallback":[52,1]
,"{ilisqldatasource*ds":[52,2,122,1]
,"=(ilisqldatasource*)":[52,2]
,"ilisqltable*tbl":[52,2]
,"=ds->":[52,3,122,3]
,"getsqltable":[52,2,121,4,122,2]
,".isnull":[52,1,73,1]
,"{ilisqlsession*session":[52,1]
,"geteffectivesqlsession":[52,1,108,1,111,1,120,1,122,2]
,"ilisqlcursor*curs":[52,1]
,"=session->":[52,1,135,1]
,"newcursor":[52,1,135,1]
,"(curs->":[52,2]
,"nextid":[52,2]
,"counter":[52,3,560,3,567,2,569,1]
,"&&curs->":[52,1]
,"{ilint":[52,1,121,1,489,1,577,1]
,"=curs->":[52,1]
,"getintegervalue":[52,1,135,1]
,"(0)":[52,1,135,1,439,1,440,2,481,1,501,1,548,1,553,2,560,3,577,1,635,4]
,"curs->":[52,1]
,"=nextid":[52,1]
,"(id))":[52,1]
,"geterrormessage":[52,1,134,1,135,3]
,"session->":[52,1,122,1,133,2,134,3,135,2,137,2,138,1]
,"releasecursor":[52,1,135,1]
,"(curs)":[52,1]
,"ilisqldatasource*ds":[52,2,122,1]
,":prepareinsertsymbol":[52,1]
,"myinsertrowcallback)":[52,1]
,"computed":[52,2,106,1,129,1,156,2,331,4,336,2,338,1,340,2,352,1,364,1,369,2,370,1,372,2,379,2,380,7,391,1,394,2,403,3,414,2,418,1,419,1,453,1,457,1,462,1,490,1,491,1,494,1,495,1,497,1,498,1,512,1,513,1,515,1,516,2,558,2,636,1]
,"incrementing":[52,1]
,"fetchrow":[52,3,158,1,161,1]
,"illustrates":[52,1,370,2,374,1,376,1,385,1,386,1,387,1,388,1,389,1,390,1,391,1,392,1,393,1,396,1,397,1,398,1,399,1,417,1,439,1,472,1,480,1,486,1,489,1,492,1,498,1,541,1,559,1,560,1,577,1]
,"assume":[52,1,110,1,122,1,163,1,304,2,336,1,338,1,489,1,557,1,622,1,641,1]
,"named":[52,1,72,1,75,3,104,1,120,1,121,1,130,1,200,2,202,1,207,1,218,1,227,1,232,1,236,1,237,4,243,1,282,1,309,1,336,1,339,1,473,1,530,1,537,1,538,1,545,3,570,1,577,1,582,1,586,1,587,1,596,2,597,2,638,1]
,"heater":[52,1]
,"maxtemp":[52,3]
,"temperature":[52,1,336,9,338,2,339,2,347,1,348,3,351,1,360,1,364,4,369,1,377,13,402,5,579,1]
,"degrees":[52,2,336,5,338,19,339,2,343,9,344,1,345,10,346,6,347,1,349,1,351,1,360,1,364,3,365,4,366,1,377,6,394,1,484,2,489,1,526,1,553,2,585,4,611,1,615,1,620,1,622,1]
,"celsius":[52,2,336,7,338,9,339,2,347,1,360,1,364,2,366,4]
,"show":[52,1,91,2,124,2,127,1,130,1,145,1,157,1,161,6,169,6,187,5,189,7,193,1,226,1,243,1,244,1,253,1,256,2,257,1,276,3,278,1,305,1,331,1,333,1,334,1,336,1,338,1,340,1,343,1,346,1,356,1,359,1,363,1,364,1,365,1,366,1,367,1,372,1,373,3,377,1,415,1,417,1,438,1,439,1,480,1,482,1,484,1,524,1,606,1,635,1,637,1,641,1]
,"fahrenheit":[52,3,338,13,339,2]
,"least":[52,1,72,1,75,1,120,1,336,2,458,1,466,2,508,1,511,1,515,1,537,1,538,1,564,1,569,1,571,1]
,"myfetchrowcallback":[52,1]
,"getfetchedrow":[52,1]
,"=celsiustofahrenheit":[52,1]
,"(celsius)":[52,1]
,"=ilivalue":[52,1]
,"(fahrenheit)":[52,1]
,"buf)":[52,1]
,":fetchrowsymbol":[52,1]
,"myfetchrowcallback)":[52,1]
,"preparedeleterow":[52,2,161,1]
,"prohibit":[52,1,481,1]
,"deletions":[52,1,110,1]
,"dontdeleterow":[52,1]
,"myrowdeleted":[52,1]
,"getdeletedrow":[52,1]
,":deleterowsymbol":[52,1]
,"myrowdeleted)":[52,1]
,"concerning":[53,1,454,1,558,1,575,1]
,"raising":[53,2]
,"raised":[53,3]
,"sinks":[53,1]
,"raise":[53,1]
,"\u002F\u002Fset":[53,1,402,4,488,1,491,1,516,1]
,"\u002F\u002Fact":[53,1]
,"(10)":[53,1,111,1,112,1,199,1]
,"\u002F\u002Fcheck":[53,1,560,2]
,"(errors.geterrorscount":[53,1]
,"(errors)":[53,1]
,"seterrorreporter":[53,2]
,"redefined":[53,1,409,1,434,1,435,1]
,"myerrorreporter":[53,2]
,"ilvabstractview*anchor":[53,1]
,"ilierrorlist&errors)":[53,1]
,"errors.at":[53,1]
,"myerrorreporter*rep":[53,1]
,"(rep)":[53,1]
,"ilvcontainer*container":[54,1]
,"container->":[54,1,635,6]
,"getobject":[54,1,57,1]
,"ilirepository":[54,5]
,"registered":[54,3,75,1,132,1,133,1,138,4,427,2,428,1,429,1,430,1,431,1,432,1,433,1,434,1,435,1,449,2,450,1,501,1,516,1,623,1]
,"added":[54,1,105,3,130,3,156,3,157,4,158,1,225,1,227,1,243,1,248,1,251,1,267,1,271,1,288,1,291,1,294,1,306,1,307,1,332,4,336,1,339,1,354,1,356,1,359,2,364,2,365,1,366,1,372,2,373,1,375,2,376,2,377,12,386,1,394,9,400,4,402,3,412,1,417,4,418,3,419,2,436,1,438,6,439,2,440,10,462,2,480,1,504,1,517,1,541,1,553,2,560,3,571,1,590,1,643,1]
,"holder":[54,2,372,9,440,7]
,"unregistered":[54,1]
,"location":[54,1,246,2,308,3,332,1,356,1,427,1,454,1,457,5,459,1,473,1,534,3,576,1,580,1,590,1]
,"look-up":[54,1]
,"enumerating":[54,1]
,"fragment":[54,1,489,1]
,"iterates":[54,1]
,"=ilirepository":[54,3]
,":getdatasourcescount":[54,1]
,":getdatasource":[54,1]
,"finding":[54,1,457,1]
,":finddatasource":[54,2]
,"ilvgadget*g":[54,1,75,2]
,"g->":[54,1,75,2]
,"getholder":[54,1,372,3,440,3,635,4]
,"subscribing":[54,1]
,"subscription":[54,1]
,"mechanism":[54,2,91,1,200,1,226,1,289,1,376,2,460,1,461,1,462,1,464,2,465,2,466,2,467,2,468,2,469,1,501,1,504,1,505,1,517,1,518,1,520,1,559,4,560,2,567,1,568,2,577,2,593,1,597,1]
,"whenever":[54,1,56,1,104,1,118,1,130,1,133,1,200,1,427,2,433,3,434,2,435,1,453,1,487,1,488,1,504,2,507,1,560,1]
,":subscribetodatasource":[54,1]
,"ilidbtimer":[55,1,65,3,122,1,142,1,159,1,176,2,177,1,223,1]
,"ilihtmlreporter":[55,1,66,3,142,1,159,1,178,2,179,2,223,1]
,"ilixml":[55,1,67,3,142,1,159,1,180,2,181,2,223,1]
,"ilidbpicture":[55,1,68,3,142,1,159,1,182,2,183,1,223,1]
,"ilidbtreegadget":[55,1,71,3,142,1,159,1,188,2,189,1,223,1]
,"ilichartgraphic":[55,1,72,7,143,1,159,1,190,2,191,1,223,1]
,"ilidbgrapher":[55,1,73,3,143,1,146,1,159,1,192,2,193,2,223,1]
,"ilidbgantt":[55,1,74,3,143,1,146,1,159,1,194,2,195,2,223,1]
,"iliisafield":[56,1]
,"test":[56,1,122,1,127,1,195,4,226,4,227,1,229,1,230,2,232,1,262,5,266,6,283,8,284,4,291,3,294,4,321,1,332,6,336,1,340,8,528,1,539,1,557,1]
,"iligraphictofield":[56,1]
,"pointer":[56,2,84,1,145,1,146,2,197,1,325,1,356,1,368,1,386,2,427,1,481,1,552,1,557,1,633,1,635,1]
,"ilvgraphic*g":[56,2,585,1,637,1]
,"(iliisafield":[56,1]
,"(g))":[56,1]
,"{ilifielditf*fld":[56,1]
,"=iligraphictofield":[56,1]
,"(g)":[56,1,75,1]
,"converted":[56,1,82,4,91,1,167,1,199,1,203,2,205,2,310,2,312,2,548,1,624,1,632,1,636,1]
,"opposite":[56,1,487,1]
,"direction":[56,1,430,1,438,1,453,1,479,3,480,1,481,4,482,22,483,7,486,7,487,4,489,22]
,"f_getgraphic":[56,2]
,"ilifielditf*fld":[56,3]
,"=fld->":[56,2]
,"ability":[56,1,576,1]
,"stay":[56,1,97,1,467,1,468,1,486,1]
,"tuned":[56,2,560,1]
,"staying":[56,1]
,"involves":[56,2,105,1,457,1,577,1]
,"sent":[56,1,108,1,115,1,157,4,534,1,568,1,596,1,597,1]
,"deptno":[56,2,60,1,69,1,70,1,104,1,106,1,127,2,233,1,242,1,243,1,253,1,255,7,256,3,258,5,260,3,262,3,271,2,273,5,280,1]
,"exist":[56,1,156,1,243,1,458,1,553,1]
,"remains":[56,1,57,1,79,1,127,1,165,1,167,1,175,1,267,1,291,1,372,2]
,"unconnected":[56,1]
,"remembers":[56,1]
,"f_isconnectedtodatasource":[56,1]
,"enters":[56,1,146,1]
,":setglobalscope":[56,1]
,"f_getvalue":[56,3,77,1,198,1,200,1]
,"f_setvalue":[56,3,198,1,199,1]
,"ilivalue&val":[56,1]
,"val.getformatted":[56,1]
,"newval":[56,1]
,"val":[56,1,199,1,200,1]
,"fld->":[56,4,201,1]
,"(newval)":[56,1]
,"accessor":[56,1,638,1,644,6]
,"mutator":[56,1]
,"f_isreadonly":[56,1]
,"f_setreadonly":[56,1]
,"f_getformat":[56,1]
,"f_setformat":[56,2]
,"f_getalignment":[56,1]
,"f_setalignment":[56,1]
,"f_getlabel":[56,1]
,"f_setlabel":[56,1]
,"f_getmask":[56,1]
,"f_setmask":[56,1,201,1]
,"effect":[56,3,75,1,120,1,122,1,130,1,156,1,158,1,163,1,167,1,227,1,289,1,291,1,325,1,332,1,465,1,482,1,483,1,484,2,515,2]
,"sometimes":[56,1,170,1,339,1,459,1,484,3,487,1,506,1,507,1,517,1,562,1,631,1]
,"(its":[56,1]
,"internal":[56,1,216,2,462,1,482,1,500,1,571,3]
,"value)":[56,1,57,1,87,1,91,1,208,1,336,1,504,1,619,1,641,1,642,1,644,1]
,"substituted":[56,1]
,"f_setforeigndatasourcename":[56,1,60,1,69,1,70,1]
,"dept":[56,1,60,2,69,2,70,2,104,2,106,2,255,4,291,1]
,"f_setforeignvaluecolumnname":[56,1,60,1]
,"f_setforeigndisplaycolumnname":[56,1,60,1]
,"entire":[57,1,156,1,161,1,187,1,243,1,246,3,355,1,466,1,527,2,528,1,534,1,541,1]
,"ilitablegadget*tg":[57,1]
,"(20":[57,1,60,1,69,1,70,1]
,"300":[57,1,559,1]
,"450))":[57,1]
,"(tg)":[57,1]
,"tg->":[57,4]
,"control":[57,1,109,1,110,8,118,1,127,1,157,1,201,1,205,1,207,1,232,3,267,1,268,1,286,3,287,2,288,1,292,5,294,2,312,1,454,1,455,1,462,1,463,1,466,1,489,1,490,1,495,1,496,1,498,1,517,1,526,1,528,1,529,1,531,1,534,2,537,1,538,1,559,1,565,2,566,2]
,"ilitableselection":[57,1]
,"describe":[57,1,76,1,87,1,104,1,318,1,336,3,341,1,350,1,384,1,395,1,402,1,410,1,427,1,481,1,489,1,492,1,495,1,498,1]
,"highlighted":[57,1,161,2,262,2,265,2,290,1,336,1,339,1]
,"area":[57,2,87,1,105,2,216,2,222,6,223,1,225,1,226,2,243,2,260,1,283,1,284,1,331,33,332,8,334,2,336,5,367,1,368,1,370,3,379,35,380,37,386,8,401,1,404,3,407,2,409,5,418,3,423,1,427,3,428,2,432,1,433,3,434,1,435,2,438,4,440,2,458,1,481,1,484,6,485,2,516,1,527,1,530,1,533,1,537,1,582,2,597,1,598,1,600,3,602,2,606,5,632,1,633,1]
,"(identified":[57,3]
,"indices)":[57,3]
,"empty":[57,1,105,1,129,1,130,1,144,1,156,7,157,2,158,4,161,2,191,2,222,1,223,1,243,2,247,2,248,1,256,1,274,1,288,1,316,1,336,6,348,4,439,1,466,1,500,1,508,1,516,1,537,1,553,1,562,1,564,1]
,"getselection":[57,1]
,"setselection":[57,1]
,"bound":[57,1,109,1,116,4,157,3,161,1]
,"synchronized":[57,1,157,2,161,1]
,"bindtodatasource":[57,1]
,"controls":[57,1,200,1,202,1,207,1,230,1,265,1,283,1,294,1,309,1,482,1,483,1,484,1,489,3,536,1]
,"pointtoselection":[57,1]
,"geometrical":[57,1]
,"geometry":[57,2,95,13,161,1,246,2,504,7,505,1,510,4,511,2,512,4,513,1,537,2,538,2,541,3,542,2,543,5,545,1,547,4,548,1,552,1,553,8,575,1,576,1,580,1,583,1,585,1,591,1,596,2,597,9,598,1]
,"handler":[57,1]
,"resize":[57,2,222,1,226,1,243,1,246,2,251,1,273,1,277,1,285,1,288,1,336,1]
,"resizing":[57,1,211,1,226,1,263,1,560,1]
,"default)":[57,1,161,1,257,1,482,4,483,1,489,3]
,"shared":[57,1,84,1,108,1,218,1,306,2,374,1,402,2,427,5,436,4,569,1,595,1]
,"independent":[57,1,161,1,305,1,332,1,335,1,336,2,489,1,541,1,548,1]
,"setcolumnsgeometrylocal":[57,1]
,"activate":[57,1,88,1,237,1,252,1,529,1,560,1,566,1]
,"getrealcolno":[57,1]
,"getvisualcolno":[57,1]
,"depending":[57,1,205,1,273,1,294,1,308,1,312,1,316,1,325,3,363,1,375,1,383,1,413,1,457,1,458,1,462,1,466,1,469,1,479,1,483,1,489,2,498,1,516,1,517,1,540,1,606,1,641,1,642,1]
,"setcolumneditor":[57,2]
,"getcellpalette":[57,3,161,1]
,"colors":[57,4,149,4,226,1,261,3,264,2,336,1,339,4,364,1,391,1,403,5,537,1,548,2,598,1,600,1]
,"mygetcellpalette":[57,1]
,"{ilitablegadget*tg":[57,4]
,"=(ilitablegadget*)":[57,2]
,"ilicellpalettestruct*cell":[57,1]
,"=tg->":[57,4]
,"getcellpalettestruct":[57,1]
,"(cell->":[57,7]
,"getrowno":[57,1]
,"==3":[57,1]
,"&&cell->":[57,1]
,"gettablecolno":[57,1]
,"==2)":[57,2]
,"{\u002F\u002Fchange":[57,1]
,"(3,2)":[57,1,597,1]
,"cell->":[57,2]
,"setfillpalette":[57,1]
,"(tg->":[57,1]
,"getdisplay":[57,2,75,1,377,1,439,1,440,2,560,1,635,2,636,2]
,"()->":[57,1,111,1,120,16,364,1,372,1,373,3,394,1,402,1,439,2,440,2,481,1,486,1,509,3,548,1,554,1,560,2,562,1,568,1,635,4,636,1,641,2,642,1,644,1]
,"getpalette":[57,1,364,2,369,2,377,1,383,1,389,1,391,1,392,2,393,2,394,5,397,2,399,2,402,1,410,2,424,1]
,"highlight":[57,1,141,1,146,1,339,1,356,1]
,"\u0022))":[57,1,364,4,385,1,386,1,387,2,388,1,390,2,391,1,394,10,396,2,399,2,557,1,577,1,588,1,593,1,636,1]
,"(ilitablegadget":[57,2]
,":getcellpalettesymbol":[57,1]
,"mygetcellpalette)":[57,1]
,"keep":[57,2,127,1,133,1,157,1,237,1,246,1,252,1,265,1,282,2,316,1,339,1,345,2,366,1,369,1,465,1,488,1,504,1,526,1,552,1]
,"record":[57,1,64,12,86,1,97,1,127,1,256,2,257,8,258,2,576,1]
,"draw":[57,2,226,1,260,1,336,1,338,1,339,1,341,2,362,1,363,1,364,2,368,2,370,2,392,2,394,1,402,2,403,1,421,3,424,2,440,1,457,1,460,1,488,1,600,1]
,"drawcell":[57,1,161,1]
,"procedure":[57,1,95,1,218,2,220,1,224,2,225,1,232,1,233,1,272,1,273,1,277,1,282,1,285,1,292,1,314,1,336,4,338,1,339,1,340,3,341,1,342,1,459,1]
,"mydrawcell":[57,1]
,"ilidrawcellstruct*cell":[57,1]
,"getdrawcellstruct":[57,1]
,"tblcolno":[57,1]
,"{\u002F\u002Fdraw":[57,1]
,"ilvpalette*pal":[57,1]
,"=dpy->":[57,1,389,1,391,1,392,2,393,2,397,2,399,2]
,"defaultpalette":[57,1]
,"\u002F\u002F----compute":[57,1]
,"gauge":[57,1]
,"----value":[57,1]
,"tblcolno)":[57,1]
,"=(value":[57,2]
,"100l)":[57,1]
,"100l":[57,1]
,"<0l)":[57,1]
,"=(cell->":[57,1]
,"bbox.w":[57,1]
,"*value)":[57,1]
,"\u002F100l":[57,1]
,"\u002F\u002Fdraw":[57,1]
,"rect":[57,1,466,2,516,2,560,1]
,"rect.x":[57,1]
,"bbox.x":[57,1]
,"rect.w":[57,1,560,1]
,"((ilvdim)":[57,1]
,"rect.y":[57,1,560,2]
,"bbox.y":[57,1]
,"rect.h":[57,1]
,"bbox.h":[57,1]
,"()-4)":[57,1]
,"dpy->":[57,1,377,1,389,1,391,1,392,2,393,2,397,2,399,2]
,"fillrectangle":[57,1]
,"dst":[57,1]
,"pal":[57,1]
,"rect)":[57,1,513,1]
,"defaultdrawcell":[57,1]
,":drawcellsymbol":[57,1]
,"mydrawcell)":[57,1]
,"toggle":[57,3,63,3,87,5,88,2,91,6,142,2,171,7,173,6,223,2,225,2,227,7,265,1,267,1,284,1,288,2,289,1,336,8,337,2,338,1,339,2,340,4,341,2,349,2,536,1,537,1]
,"replace":[57,1,58,1,208,1,255,1,289,1,304,1,305,1,345,3,366,1,369,1,395,1,450,1,482,1,489,1,492,1,495,1,498,1,506,1]
,"yes\u002Fno":[57,1]
,"(class":[57,1,479,1,487,1,490,1,493,1,496,1,571,1]
,"ilisimpletoggle":[57,2]
,"\u002F\u002Fin":[57,2]
,"<inform\u002Fgadgets\u002Fdbsimtog.h>":[57,1]
,"mypanel":[57,2,64,1,120,2]
,"protected":[57,1,377,1,462,1,516,2,576,1,639,1,641,3,643,1]
,"ilisimpletoggle*_toggle":[57,1]
,":mypanel":[57,1]
,":ilvgadgetcontainer":[57,1]
,"_toggle":[57,1]
,"(getdisplay":[57,1,548,1,550,1]
,"(0,0))":[57,1]
,"ilitablegadget*tbl=(ilitablegadget*)":[57,1]
,"tablegadgetname":[57,1]
,"(_toggle)":[57,1]
,"motif":[57,1,87,1,225,2,289,1]
,"(do":[57,1]
,"white)":[57,1]
,"relief":[57,1,161,3]
,"looks":[58,1,189,1,243,1,251,1,252,1,255,2,271,1,272,1,273,2,275,1,280,1,281,1,282,1,289,1,301,1,339,1,482,1]
,"flexible":[58,1,257,1,600,1]
,"feel":[58,2,87,3,122,1,212,1,289,1]
,"style":[58,3,87,18,88,4,91,4,148,2,162,1,163,2,207,1,222,3,257,1,341,1,479,3,480,1,481,1,482,22,483,1,484,2,487,1,488,1,489,31,490,1,491,2,492,7,495,3,498,3,528,1,529,1,547,2,600,2]
,"setstyle":[58,1]
,"working":[58,1,85,1,86,1,104,1,123,1,128,1,224,1,319,1,323,2,324,1,325,3,334,1,335,1,336,3,339,1,340,3,342,2,345,2,348,2,489,3,522,1,524,1,606,1]
,"dbfields":[58,1,85,1,86,1]
,"assistant":[58,1,87,1,88,8,89,1,93,2,96,1,156,1,158,1,256,3,257,3]
,"initially":[58,1,157,1,308,1]
,"subsequently":[58,1,89,1,96,1,103,1,119,1]
,"suit":[58,1]
,"requirements":[58,1,85,2,213,1,489,1,571,1,572,1,582,1]
,"text":[59,1,87,1,94,1,142,4,145,2,146,1,148,2,149,1,150,1,163,1,164,1,168,1,171,1,173,1,203,1,210,1,216,1,222,1,223,4,232,1,252,1,255,1,256,2,257,2,260,3,261,5,262,3,280,1,284,1,289,1,310,1,334,1,336,3,338,1,342,3,366,1,383,4,394,1,402,1,409,4,417,1,434,2,486,1,536,1,543,1,548,1,550,3,633,1]
,"opens":[60,1,69,1,216,1,307,1,339,2,340,1,341,1]
,"clicks":[60,1,69,1,435,2]
,"displays":[60,1,68,1,69,1,70,1,71,1,73,1,74,1,86,1,141,1,154,9,175,2,222,1,225,1,232,2,244,1,275,1,276,2,322,4,334,1,338,1,346,1,349,1,350,1,356,1,360,4,365,1,367,2,368,1,373,1,383,2,392,1,393,1,394,2,396,1,397,3,398,1,399,2,400,2,409,1,417,1,424,2,427,2,434,2,453,1,496,1,536,1,544,1,548,1,562,1,564,2,568,1,581,1,583,1]
,"ilitablecombobox*combo":[60,1]
,"150":[60,1,69,1,70,1]
,"21))":[60,1,69,1]
,"(combo)":[60,1]
,"(deptno)":[60,1,69,1,70,1]
,"combo->":[60,5]
,"\u002F\u002Fspecify":[60,1,69,1,70,1,480,1,497,1]
,"(id":[60,1,69,1,70,1,114,2]
,"name)":[60,1,69,1,114,1,244,1,637,1]
,"multi-line":[61,1,142,2,168,1,223,2]
,"strings":[61,1,62,1,70,1,77,1,87,1,200,2,305,1,544,1,586,2,596,1]
,"checked":[63,1,81,1,91,1,145,6,155,4,157,1,165,6,167,8,169,2,187,17,189,29,227,2,283,1,284,1,289,5,336,6,337,1,340,4,341,2,349,2,538,1,553,1]
,"ilitoggleselectorstyle":[63,1,87,4,91,1]
,"(record)":[64,1,257,1]
,"(specified":[64,1]
,"free":[64,1,224,1,459,1,479,4,480,2,481,2,482,5,483,8,484,3,485,3,486,2,518,1,523,1,524,1,560,1,645,2]
,"(back":[64,1]
,"back":[64,1,72,1,84,1,115,1,134,1,135,1,206,1,262,1,266,1,290,1,313,1,372,1,486,1,489,2,515,1,531,1,534,2,637,1]
,"forward":[64,2,105,1,246,1,486,1,610,1,612,1,617,1,618,4,628,1,636,1,638,1,639,3,641,3,643,2]
,"table)":[64,1]
,"alidate":[64,1]
,"(create":[64,2,257,1]
,"database)":[64,2,157,1,257,1]
,"nsert":[64,1]
,"activated":[64,1,88,1,146,1,222,1,243,2,257,1,288,1,289,2]
,"clear":[64,2,175,3,257,1,283,3,325,1,354,1,360,2,372,1,481,1,526,1,528,1,530,1,534,1,581,1]
,"refresh":[64,1,157,1,161,3,245,1,246,1,256,1,257,1,275,1,282,1,301,1]
,"actually":[64,1,265,1,383,1,394,1,414,1,481,1,641,1]
,"leaves":[64,1,135,1,146,1,247,1,480,1,481,2,482,1,485,12,486,1]
,"possibility":[64,1,492,2]
,"adding":[64,1,110,1,136,1,156,1,157,1,211,1,215,1,259,1,267,1,270,1,277,2,279,1,285,2,287,1,288,1,291,1,292,2,332,1,364,3,365,6,366,2,368,1,373,3,376,4,377,3,382,1,394,2,400,3,402,4,405,1,412,1,419,2,422,1,425,1,436,1,437,1,439,1,440,9,601,1,633,2,636,1,644,1]
,"navigator":[64,1,88,3,124,3,232,1,245,2,246,1]
,"quit":[64,2,225,1,227,1,228,1,232,1,289,5,290,1,294,1]
,":initialize":[64,1]
,"{ilidbnavigator*navig":[64,1]
,"\u002F\u002Fadd":[64,1,439,2,440,4,462,1,577,1]
,"navig->":[64,3]
,"addbutton":[64,2]
,"myprintcallback":[64,1]
,"myquitcallback":[64,1]
,"\u002F\u002Fcompute":[64,1,516,1]
,"adjustbuttonssize":[64,1]
,"interval":[65,1,340,1,377,7,411,2,414,2,439,3]
,"html":[66,1,142,1,178,1,179,8,223,1]
,"xml":[67,1,142,1,180,1,181,5,223,1,443,5,449,1]
,"import":[67,1,144,1,180,1,181,4,223,1,232,1,244,1,316,2,540,2,555,1,557,3,601,1,633,1]
,"export":[67,1,144,1,180,1,181,6,223,1,244,1,315,1,316,2]
,"modification":[67,1,376,13,377,5,504,2,628,1]
,"bitmaps":[68,1,225,1,600,1]
,"ilidboptionmenu*opt":[69,1]
,"opt":[69,1]
,"(opt)":[69,1]
,"opt->":[69,5]
,"setforeignvaluecolumnname":[69,1,70,1]
,"setforeigndisplaycolumnname":[69,1,70,1]
,"and\u002For":[70,1,149,2,157,1,210,1,261,2,264,2,276,1,316,1,386,1,396,1,421,1,460,1,467,1,468,1]
,"pictures":[70,1]
,"ilidbstringlist*lst":[70,1]
,"lst":[70,1]
,"ilidbstringlist*(display":[70,1]
,"150))":[70,1]
,"(lst)":[70,1]
,"lst->":[70,6]
,"setforeignbitmapcolumnname":[70,1]
,"picture":[70,1,73,3,142,1,157,1,179,2,182,2,183,3,189,1,193,2,223,1,289,1,453,1,518,1,600,1,601,1]
,"tree":[71,5,141,1,142,1,188,1,189,8,223,3,244,1,283,1,288,5,289,6,291,3,322,3,339,1,453,4,454,1,455,2,475,1,476,5,477,1,478,1,479,14,480,14,481,14,482,9,483,1,484,2,485,2,486,12,517,3]
,"(depending":[71,1,72,1]
,"model)":[71,1,72,1]
,"children":[71,1,189,1,479,5,480,2,482,17,483,6,484,6,485,6,486,10]
,"parents":[71,1,189,1,482,1,485,5,486,2]
,"models":[71,1,457,2,579,2]
,"recursive":[71,1,189,3]
,"structural":[71,1,102,1,104,1,154,2,157,1,189,2]
,"level":[71,2,95,1,291,1,362,1,368,1,375,4,376,12,377,6,386,1,390,1,392,1,395,2,396,2,397,2,398,1,399,1,402,23,403,2,409,2,413,2,414,2,422,1,423,1,425,1,478,2,479,1,480,2,481,2,483,27,484,13,486,3,487,1,488,21,489,75,498,4,511,1,512,2,517,1,536,1,566,1,579,2,597,1]
,"parent":[71,1,121,1,189,3,300,1,383,1,480,3,482,15,483,3,484,3,485,1,486,6]
,"chart":[72,2,74,1,141,3,143,4,159,1,190,1,191,1,194,1,195,7,223,10,234,3,318,2,320,5,322,11,323,13,324,11,325,3,326,1,327,2,328,2,329,3,330,4,331,15,332,15,333,2,334,9,335,1,336,36,337,2,338,2,339,13,340,33,341,8,342,9,343,4,344,1,345,17,346,13,347,6,348,8,349,5,350,1,351,2,352,3,354,6,355,1,356,6,358,3,359,13,360,21,361,3,362,10,363,18,364,46,365,37,366,12,367,26,368,18,369,26,370,4,372,15,373,25,374,22,375,10,376,26,377,19,378,6,379,14,380,4,381,4,382,1,383,4,385,6,386,10,387,6,388,6,389,6,390,7,391,6,392,7,393,6,394,20,396,6,397,6,398,1,399,6,400,6,402,6,403,2,405,2,406,2,407,1,410,6,412,13,413,7,414,3,415,1,416,2,417,7,418,4,419,13,420,1,421,1,422,14,424,1,425,14,426,4,427,9,428,1,436,21,437,1,438,12,439,12,440,14,443,1]
,"pie":[72,2,322,2,324,1,328,1,346,1,355,1,359,2,383,1,384,1,394,37]
,"let\u2019s":[72,1,336,1,338,1,340,1,347,1,367,1,369,1,548,1]
,"data_ms":[72,3]
,"(double)":[72,1]
,"beer":[72,1]
,"150.0":[72,1]
,"soda":[72,1]
,"300.0":[72,1]
,"water":[72,1]
,"600.0":[72,1]
,"wine":[72,1]
,"350.0":[72,1]
,"steps":[72,1,106,1,157,2,216,1,224,2,226,2,228,1,232,2,250,1,255,1,256,1,258,1,283,2,289,1,292,1,294,1,316,1,330,5,336,13,338,4,339,3,340,2,341,1,342,1,345,1,346,2,348,1,350,3,355,2,358,1,363,3,364,19,365,3,367,1,368,3,369,3,372,2,377,1,388,3,394,2,405,1,409,7,410,7,411,13,415,3,422,1,425,1,428,3,436,3,439,2,471,1,472,3,473,1,480,1,488,2,516,4,538,1,607,1,638,1,640,1]
,"drag":[72,1,105,1,121,1,141,1,144,1,151,1,187,2,189,4,216,1,220,1,223,2,226,1,228,1,243,3,245,2,246,3,250,1,251,1,253,1,254,1,262,3,265,2,267,1,271,1,272,1,273,1,274,1,275,1,280,1,282,1,283,1,288,1,289,1,290,2,299,1,300,1,301,2,322,1,323,2,336,1,340,1,342,1,345,1,348,1,356,1,427,1,432,4,527,1]
,"axis":[72,1,193,2,330,6,336,8,338,4,366,6,406,2,408,3,409,11,410,2,421,1,423,2,424,5,547,2,622,2,624,1,625,1,642,2]
,"sets":[72,3,135,1,161,5,163,1,191,1,207,1,324,1,325,2,327,7,336,23,339,5,340,15,342,3,345,8,348,7,349,1,355,2,360,6,361,2,362,3,363,5,364,10,365,7,367,3,368,3,369,1,370,2,372,7,373,13,374,2,375,4,376,6,377,15,383,15,384,1,385,2,386,2,387,2,388,2,389,2,390,2,391,2,392,3,393,3,394,1,395,1,396,2,397,10,398,5,399,4,400,3,402,2,439,2,440,2,443,2,482,1,483,1,484,3,534,1,537,1,598,1]
,"displayers":[72,4,191,1,324,1,325,2,328,7,332,6,336,20,339,12,340,13,342,1,345,5,348,1,349,6,352,2,360,2,362,1,363,1,364,5,365,4,367,3,368,2,369,1,370,2,382,2,383,22,384,5,385,3,386,3,387,3,388,3,389,3,390,3,391,3,392,2,393,2,394,2,395,22,396,6,397,8,398,11,399,9,400,3,401,2,402,1,403,6,404,1,405,1,406,3,407,1,408,1,409,1,410,6,412,8,418,2,419,1,420,3,421,1,422,7,425,7,439,1,440,2]
,"uncheck":[72,5,283,1,327,1,328,1]
,"displayer":[72,7,325,4,327,2,328,7,336,33,339,25,340,19,342,1,345,3,347,1,349,15,360,2,364,1,367,8,368,8,369,13,370,7,382,1,383,34,384,15,385,7,386,10,387,5,388,6,389,5,390,6,391,6,392,9,393,8,394,20,395,29,396,21,397,24,398,22,399,14,400,22,402,18,403,6,404,1,405,1,406,2,407,2,409,1,410,19,412,8,414,2,420,2,422,14,425,11]
,"series":[72,1,191,7,369,1,443,4,444,1,445,2,446,2,448,1,568,1]
,"360":[72,1,349,1,394,1,484,1]
,"range":[72,1,343,1,344,1,346,3,349,2,351,1,365,4,394,1,403,2,407,2,438,4,439,9,457,1,460,1,476,1,619,1,641,1,642,1]
,"slices":[72,2,394,12]
,"rho":[72,1]
,"slice":[72,2,394,23]
,"clicking":[72,1,121,1,124,2,146,1,189,1,218,2,222,1,226,2,243,1,245,1,246,3,252,1,255,1,258,1,260,1,261,1,266,1,271,1,274,1,276,1,285,1,289,2,291,1,299,1,300,1,325,4,333,1,334,1,336,7,337,1,338,1,340,7,348,1,349,1,435,1,537,1]
,"projection":[72,2,191,1,324,1,328,2,329,8,332,2,346,1,347,1,349,3,367,1,384,1,386,7,394,2,395,1,410,2,412,3,413,2,422,5,425,5,520,2,526,13,528,1,529,2,537,3,540,2,541,5,542,2,547,6,548,3,552,3,553,2,554,12,556,1,557,9,575,1,576,1,580,4,582,2,583,1,585,1,590,1,591,1,601,5,602,2,603,4,604,1,605,1,606,4,607,6,608,2,609,4,610,6,611,1,612,4,613,8,614,6,615,1,616,7,617,3,618,5,619,6,621,2,622,1,623,3,628,4,630,3,632,2,633,2,636,2,638,7,639,14,640,13,641,10,642,10,643,11,644,6]
,"polar":[72,1,318,1,319,2,322,2,324,1,328,2,329,4,331,3,343,7,344,1,345,8,346,5,347,3,348,2,349,1,351,1,354,3,355,1,356,1,359,3,362,1,363,3,365,17,366,6,368,1,379,4,385,4,386,4,387,4,388,4,389,4,390,4,391,4,392,4,393,4,394,9,396,4,397,4,398,4,399,4,410,10,412,3,413,8,422,8,425,8,606,1,622,1,623,1,624,3]
,"scales":[72,2,191,1,195,2,318,1,324,1,325,2,329,2,330,6,331,2,335,2,336,14,337,2,338,2,339,9,340,1,341,11,342,1,345,3,346,5,349,1,350,4,351,3,352,2,354,4,356,6,359,4,362,3,364,1,365,3,366,2,367,2,368,2,369,1,370,4,379,4,400,1,405,5,406,2,409,1,410,4,411,1,412,5,413,13,422,3,425,3,526,1,533,1,534,1,558,3,641,1]
,"scale":[72,2,74,1,195,4,325,4,329,3,330,10,335,2,336,54,337,4,338,28,339,8,341,15,343,5,344,2,345,10,346,12,347,3,348,2,349,1,350,6,351,4,352,1,354,2,355,2,356,1,359,2,360,2,362,2,364,18,365,17,366,13,367,10,368,20,369,36,370,6,400,8,405,3,406,6,407,33,408,9,409,13,410,51,411,13,412,18,413,16,414,13,415,10,420,3,421,1,422,25,423,4,424,1,425,26,438,1,439,1,524,1,526,1,528,5,529,3,531,12,533,1,534,7,537,3,538,3,540,3,554,1,558,9,559,1,560,1,563,2,566,9,568,1,582,3,606,1,619,1,622,1,623,1,643,8]
,"click":[72,1,88,1,127,1,129,1,144,1,148,1,149,1,150,1,151,2,157,1,159,1,161,4,163,2,167,1,171,1,179,3,193,5,195,6,218,4,222,2,223,1,225,4,226,6,227,6,228,3,236,3,237,7,238,1,239,1,240,2,243,7,244,3,245,5,246,14,247,4,250,2,251,2,252,6,253,4,254,2,255,2,256,3,258,8,260,1,261,3,262,5,263,1,264,7,265,4,266,2,267,6,271,3,272,1,273,5,275,6,276,2,281,1,282,7,283,5,284,2,288,8,289,9,290,4,291,1,294,1,299,2,300,7,301,4,307,1,316,6,317,3,321,1,322,1,323,1,325,1,332,1,336,36,337,2,338,7,339,9,340,12,341,11,342,3,345,10,346,4,348,5,349,4,350,3,351,2,474,4,526,2,527,1,528,2,529,2,530,2,532,1,534,2,536,1,537,2,538,1]
,"nodes":[73,2,141,1,143,1,189,2,192,1,193,15,223,1,453,12,454,9,457,6,459,1,460,6,462,4,463,1,468,5,469,1,472,1,474,1,477,1,478,2,479,15,480,6,481,19,482,18,483,9,484,6,485,9,486,14,487,5,488,15,489,53,490,2,491,3,492,2,493,4,494,2,495,6,496,3,497,2,498,23,500,1,503,1,504,2,505,1,506,1,507,3,508,2,509,2,510,3,511,1,516,5,517,7]
,"graph":[73,1,331,9,332,2,379,9,380,12,451,12,452,5,453,14,454,11,455,6,456,3,457,13,458,3,459,4,460,7,465,1,466,2,467,2,468,2,469,1,471,3,472,2,473,1,474,4,475,1,476,8,477,1,478,6,479,6,480,4,481,4,482,6,483,1,486,3,487,6,488,1,489,22,490,3,492,5,493,3,495,8,496,1,498,7,499,2,502,5,503,15,504,24,505,1,506,7,507,8,510,3,511,2,512,8,515,1,516,5,517,12]
,"dbgrapher":[73,2,193,1]
,"setdefineobject":[73,1]
,"attempts":[73,1,118,1,122,1,557,1,602,1]
,"node":[73,4,193,14,453,1,457,1,468,4,478,4,479,5,480,10,481,32,482,22,483,3,484,5,485,2,486,14,487,1,488,4,489,61,490,1,491,3,495,1,497,3,498,20,503,1,504,6,507,4,508,1,511,1,516,5,517,5]
,"open":[73,1,121,1,141,1,144,2,150,2,156,1,157,1,161,4,163,2,167,1,171,2,179,3,193,5,195,6,220,1,222,2,223,2,226,1,227,1,240,4,243,1,245,1,246,2,253,1,255,1,260,2,264,3,267,3,271,1,280,1,288,1,289,2,293,1,307,1,316,1,323,1,324,1,334,1,340,1,342,1,345,1,346,1,348,1,397,1,474,1,526,1,528,1,529,2,530,1,534,5,539,1]
,"dialog":[73,1,108,1,121,1,127,1,132,1,137,2,140,1,144,1,147,5,148,4,149,6,150,5,154,9,157,38,161,4,163,2,167,2,171,1,175,1,179,3,189,4,193,5,195,6,223,1,225,1,226,1,229,1,236,2,238,2,240,1,264,3,300,1,316,1,317,1,536,1]
,"obtain":[73,1,117,1,135,2,137,1,336,1,338,1,339,1,341,1,347,1,366,2,369,1,394,1,460,1,461,1,462,1,464,1,465,1,466,1,467,1,468,1,469,1,470,1,481,4,482,3,483,1,484,3,486,2,487,1,488,1,489,7,490,1,492,8,495,1,498,9,500,1,507,1,516,3,623,1,632,1,641,1]
,"mydefinenodecallback":[73,1]
,"(ilitablebuffer*buf":[73,2]
,"ilvgraphic*":[73,1]
,"ilany":[73,3,74,1,75,1,82,1,409,1,439,1,440,2,486,4,504,8,567,2,637,1]
,"{static":[73,1]
,"stid":[73,2]
,"=1000":[73,1]
,"(buf->":[73,1]
,"{buf->":[73,1]
,"(stid)":[73,1]
,"ilvtrue":[73,1,80,1,201,1,365,3,369,2,380,3,383,1,384,2,396,2,407,3,409,6,410,1,418,6,419,2,421,2,424,3,432,1,438,1,440,1,549,1]
,"{ilidbgrapher*gr":[73,5]
,"gr->":[73,4]
,"setdefineobjectcallback":[73,1]
,"(mydefinenodecallback":[73,1]
,"setcreateobject":[73,1]
,"ilvgraphic*mycreatenodecallback":[73,1]
,"=(ilidbgrapher*)":[73,2]
,"char*picture":[73,1]
,"switch":[73,1,142,1,267,1,275,1,288,2,340,1,470,1,482,1,486,1,517,1,562,1]
,"(buff->":[73,2]
,"{case":[73,1,562,1,568,1]
,"typenodecenter":[73,1]
,"center.xpm":[73,1]
,"break":[73,3,195,5,238,1,562,4]
,"typenodeparabol":[73,1]
,"parabol.xpm":[73,1]
,"terminal.xpm":[73,1]
,"setbitmapname":[73,1]
,"((const":[73,1]
,"char*)":[73,2,83,1]
,"picture)":[73,1]
,"ilvgraphic*obj":[73,1]
,"=gr->":[73,2]
,"createdefaultobjectnode":[73,1]
,"(obj->":[73,1,509,1]
,"issubtypeof":[73,1,509,1,544,4,548,2,553,1]
,"(ililabeledbitmap":[73,1]
,":classinfo":[73,1,509,1,544,4,548,3,549,1,553,2,597,1]
,"()))":[73,1,509,1,544,4,548,2,553,1,641,2]
,"{ililabeledbitmap*node":[73,1]
,"=(ililabeledbitmap*)":[73,1]
,"obj":[73,1,509,1]
,"node->":[73,1]
,"setlabelname":[73,1]
,".getformatted":[73,1]
,"setcreateobjectcallback":[73,1]
,"(mycreatenodecallback":[73,1]
,"nodedoubleclicked":[73,2,193,1]
,"linkdoubleclicked":[73,1,193,1]
,"mydoubleclicknodecallback":[73,2]
,"char*s":[73,1]
,"getobjectnamedoubleclicked":[73,1]
,"clicked":[73,1,124,1,155,1,265,1]
,"(ilidbgrapher":[73,1]
,":nodedoubleclickedsymbol":[73,1]
,"mypanel)":[73,1]
,"resources":[74,1,195,3,222,1,226,2,259,1,261,3,277,2,285,2,292,2,339,4,341,3,526,1]
,"activities":[74,1,195,5]
,"precedences":[74,1,195,8]
,"breaks":[74,1,134,1,195,4]
,"load":[74,1,195,9,225,2,234,1,240,1,289,1,336,1,372,1,517,1,518,1,524,2,526,7,528,2,529,2,534,5,536,1,537,2,538,3,539,1,540,1,556,1,557,9,559,2,560,3,569,1,572,3,577,1,583,1,586,1,587,1,592,1,595,2,596,2,597,4,635,2,645,1]
,"curve":[74,1,195,5,340,4,342,2,547,1]
,"gantt":[74,1,141,2,143,3,159,1,194,1,195,15,223,9,234,1,305,2]
,"dbgantt":[74,2,195,1]
,"functions)":[74,1]
,"getscalenumericlabel":[74,1]
,"mycomputelabel":[74,2]
,"{ilidbgantt*dbg":[74,4]
,"=(ilidbgantt*)":[74,2]
,"<<dbg->":[74,1]
,"getscalenumericvalue":[74,1]
,"<<\u0022$\u0022":[74,1]
,"dbg->":[74,4]
,"setscalenumericlabel":[74,1]
,"(s)":[74,1,120,5,131,1,157,2,158,1,167,1,193,2,210,8,218,3,229,1,294,1,322,1,327,2,328,2,355,1,360,1,367,1,369,1,370,1,383,1,400,1,401,1,412,3,413,2,414,1,422,5,425,5,427,1,435,1,474,1,549,2,577,1,597,1]
,"(ilidbgantt":[74,2]
,":scalenumericlabelsymbol":[74,1]
,",0)":[74,2]
,"isactiveperiod":[74,1,195,1]
,"determinate":[74,1]
,"active":[74,3,75,1,145,2,146,1,175,3,195,2,208,1,218,1,222,3,226,2,237,1,245,3,246,1,247,1,251,1,252,1,254,1,256,1,258,2,261,1,273,1,275,2,276,1,282,1,283,1,289,4,290,1,291,1,300,1,301,1,333,1]
,"periods":[74,1,195,4,439,1]
,"mycomputeperiod":[74,2]
,"ilvany":[74,1,75,3,82,1]
,"(dbg->":[74,1]
,"getactiveperiodinfo":[74,1]
,"(iliscaledateweekday)":[74,1]
,"==ilidbganttsunday)":[74,1]
,"setinactiveperiod":[74,1]
,":isactiveperiodsymbol":[74,1]
,"four":[75,1,88,1,126,1,157,1,161,1,163,1,165,1,169,1,173,1,175,2,185,1,216,1,232,1,293,1,397,1,400,1,485,3,488,1,564,1,575,1]
,"customcallback":[75,3]
,"userdata)":[75,3]
,"ilvsymbol*callbacktype":[75,2]
,"userdata":[75,1]
,"(callbacktype":[75,2]
,":registercallback":[75,1]
,"associate":[75,1,332,1,337,3,342,1,402,3,425,1,504,1,540,1,601,1]
,"\u002F\u002Fregister":[75,2,201,1]
,"ilvcontainer*cont":[75,1]
,"cont->":[75,1,372,2]
,"registercallback":[75,1]
,"mycallbackname":[75,2]
,"customcallback)":[75,1]
,"\u002F\u002Fuse":[75,1,201,2]
,"adds":[75,1,154,1,157,2,227,1,228,1,243,2,273,1,325,1,439,1,440,2,537,1,572,1,590,1,633,1,636,1,642,1]
,"ilicallbackmanager":[75,2]
,"register":[75,1,427,1,450,1,501,2,504,1,553,1]
,"iligetcallbackmanager":[75,2]
,"<ilviews\u002Fdataccess\u002Fgcallbak.h>":[75,2]
,"modules":[75,1,453,1]
,"\u002F\u002Fdefine":[75,1,107,2]
,"messageboxcallbak":[75,1]
,"arg":[75,1,439,1,440,2,637,1]
,"paramscount":[75,1]
,"char*const*params)":[75,1]
,"{ilvcontainer*view":[75,1]
,"=ilvcontainer":[75,1]
,":getcontainer":[75,1]
,"(paramscount":[75,1]
,"==1":[75,1]
,"&&views":[75,1]
,"{ilvimessagedialog":[75,1]
,"msgbox":[75,2]
,"(view->":[75,1]
,"params":[75,1]
,"[0]":[75,1,364,2,373,1,377,1,399,1,400,1,571,1,597,5]
,"ilvdialogok":[75,1]
,"view->":[75,1,480,1]
,"getsystemview":[75,1]
,"msgbox.show":[75,1]
,"ilvsymbol*callbackname":[75,1]
,".registercallback":[75,1]
,"(callbackname":[75,1]
,"messageboxcallback)":[75,1]
,"prefixing":[75,1]
,"\u201C@\u201D":[75,1,156,1]
,"help":[75,2,88,1,211,1,215,1,216,1,217,1,288,3,316,1,351,1,356,2,359,1,360,1,416,1,453,1,456,1,476,2]
,"programmers":[75,3]
,"pure":[75,1,104,1,403,3,409,1,457,1,479,2,480,1,486,1,612,1]
,"approach":[75,3]
,"results":[75,1,98,1,105,1,156,1,289,2,457,1,465,1,476,1,482,1,488,1,489,1,495,1,498,1,517,2,641,1]
,"less":[75,1,195,1,247,2,248,4,275,3,288,1,351,1,392,1,458,1,489,1,603,1,619,1]
,"approaches":[75,1,89,1]
,"recommended":[75,1,122,1,161,1,336,1,482,2,484,1,485,1,489,2]
,"little":[75,1,534,1,564,1]
,"straightforward":[75,1,506,1]
,"consider":[75,1,122,1,370,1,489,2,512,1,513,1,559,1,566,1]
,"superseded":[75,1]
,"@quit":[75,1,283,1,289,1]
,"@showpanel":[75,1,283,2,291,2]
,"(panelname)":[75,2,283,2]
,"@hidepanel":[75,1,283,2]
,"@validate":[75,1,283,1]
,"(datasourcename)":[75,5,283,5]
,"@cancel":[75,1,283,1]
,"@clear":[75,1,257,1,283,3]
,"@select":[75,1,283,4]
,"@startinsert":[75,1,283,1]
,"@commit":[75,1,283,1]
,"(sessionname)":[75,5,283,5]
,"@rollback":[75,1,283,1]
,"@connect":[75,1,283,1]
,"@queryconnect":[75,1,283,1]
,"@disconnect":[75,1,283,1]
,"sections":[76,1,84,1,87,1,104,1,216,1,243,1,305,3,324,1,340,1,384,1,395,1,402,1,410,1,427,1,461,1,481,1,489,1,492,1,495,1,498,1,570,1,576,1,584,1,608,1,611,1,614,1,633,1]
,"structured":[76,1,80,2,84,7,102,1,121,3]
,"polymorphism":[77,1]
,"primitive":[77,2]
,"integers":[77,1,346,1,365,2]
,"float":[77,1,156,2,158,1,204,1,208,2,311,1,597,1]
,"moreover":[77,1,122,1,351,1,458,1,481,1,489,1,595,1,597,1]
,"dynamically":[77,1,80,1,87,1,122,1,130,1,142,1,162,1,223,1]
,"constructing":[78,1,369,1]
,"initial":[78,2,79,1,112,1,156,2,158,2,163,2,167,2,323,1,343,1,345,1,394,1,415,1,459,1,478,1,494,1,517,2,568,1,614,1]
,"initval":[78,1]
,"stringval":[78,1]
,"good":[78,1,238,1,336,1,340,1,345,1,348,1,457,2,458,1,482,1,487,2,606,1]
,"morning":[78,1,336,15,339,7,347,1,348,1,349,5,360,4,364,12,365,1,367,1,370,2,377,2,402,1]
,"boolval":[78,1]
,"(ilibooleantype)":[78,1]
,"denote":[79,1]
,"unspecified":[79,1]
,":isnull":[79,1]
,"(value.isnull":[79,1]
,"(shown":[79,1]
,"above)":[79,1,158,1,171,1,175,1,282,1,316,1,560,1]
,":setnull":[79,2]
,"seen":[79,1,88,1,135,1]
,"astring":[79,1]
,"value.setnull":[79,2]
,"\u002F\u002Fvalue":[79,1]
,"\u002F\u002Fdatatype":[79,2]
,"(iliintegertype)":[79,1]
,"iliintegertype":[79,1,80,1,82,2]
,"close":[80,1,154,1,156,2,157,1,158,2,167,1,222,1,225,1,226,1,227,1,228,2,236,2,237,2,243,1,246,1,258,1,262,1,264,3,266,1,267,1,271,1,273,1,282,1,283,1,307,1,317,1,332,1,339,4,340,2,341,2,386,1,397,1,491,1,534,1,539,2,597,1,612,1,624,2,641,3,643,1]
,"exists":[80,1,156,3,158,1,189,2,375,2,403,2,424,1,457,1,550,1]
,"ilinulltype":[80,1]
,"ilibooleantype":[80,2,82,1]
,"ilibytetype":[80,1,82,1]
,"ilifloattype":[80,1,82,1]
,"ilidoubletype":[80,1,82,2]
,"ilidecimaltype":[80,1,82,1]
,"ilidatetype":[80,1,82,1,201,3]
,"ilitimetype":[80,1,82,1,201,2]
,"ilibinarytype":[80,1,82,1]
,"ilianytype":[80,1,82,1]
,"constrains":[80,1]
,"ilvfalse":[80,1,365,1,369,2,387,1,389,1,390,1,391,1,393,1,394,2,396,2,398,1,403,1,407,1,409,3,413,1,418,3,421,1,424,1,441,1,552,1,553,3,564,1]
,"synthesize":[80,1,124,1]
,"collectively":[80,1]
,"fall":[80,1,84,1,332,1,377,1,392,4,393,1,397,2,606,1]
,"categories":[80,1,84,1,383,1,486,9,504,1,602,1,606,1]
,"explains":[80,1,103,1,304,1,320,3,339,1,341,1,518,1,540,5,546,3,559,3,571,1,601,3,621,1,626,1,638,4,639,1,643,1,644,1]
,":gettype":[81,1]
,"(value.gettype":[81,1]
,"==ilidatetype)":[81,1]
,"converting":[82,1,338,1,367,1,409,2,596,1]
,"standard":[82,3,226,1,233,1,316,1,322,1,329,1,354,1,359,1,362,1,377,3,457,1,521,1,598,2,600,1,642,1]
,"char*u":[82,1]
,"ilibyte":[82,2]
,"ilvfloat":[82,2]
,"ilvdouble":[82,2,361,2,372,5,627,2,641,1,642,3,643,3,644,1]
,"ilidecimal":[82,2,196,2,198,4]
,"ilibinary":[82,2,135,2]
,"ilitable*u":[82,1]
,"easily":[82,1,353,1,372,1,399,1,458,1,460,1,486,2,520,1,524,1,531,1,532,1,540,2,543,1,560,1,600,1]
,"conversion":[82,2,208,1,543,1,547,1,548,1,586,4,601,1,611,1,620,1,624,2,631,4,632,4,636,4,641,1]
,"meaningful":[82,2]
,"compatible":[82,1]
,"conversions":[82,2]
,"<type>":[82,3]
,"char*asstring":[82,2]
,"char*nv1)":[82,1]
,"asboolean":[82,1]
,"(ilvboolean":[82,1]
,"nv1)":[82,6]
,"asbyte":[82,1]
,"(ilibyte":[82,1]
,"asinteger":[82,1]
,"(ilvint":[82,1]
,"asfloat":[82,1]
,"(ilvfloat":[82,1]
,"asdouble":[82,1]
,"(ilvdouble":[82,1,372,1,643,1]
,"asdecimal":[82,1]
,"ilidecimal&nv1)":[82,1]
,"ilitime":[82,1]
,"asdate":[82,1]
,"ilidate&nv1)":[82,1]
,"astime":[82,1]
,"ilitime&nv1)":[82,1]
,"asbinary":[82,1]
,"ilibinary&nv1)":[82,1]
,"ilitable*astable":[82,1]
,"ilitable*nvl)":[82,1]
,"asany":[82,1]
,"(ilany":[82,1,467,2,468,2,481,2,482,4,486,4,489,9,498,2,504,23,506,4,512,1,513,3]
,"(implicit":[82,1]
,"explicit)":[82,1]
,"methods":[82,1,89,1,97,1,135,1,206,1,227,1,233,1,263,1,313,1,374,1,375,3,377,5,380,3,383,1,384,1,385,1,386,1,390,1,391,1,392,1,394,1,396,3,397,3,398,1,400,1,407,1,409,2,411,1,412,1,414,3,418,1,421,1,422,2,424,1,425,2,436,1,440,5,449,1,457,1,459,1,461,3,462,1,466,1,482,6,484,1,485,1,486,1,489,7,500,1,504,11,505,2,506,3,507,2,508,1,512,1,549,1,551,2,552,1,553,4,576,1,597,1,601,2,617,2,624,2,635,1]
,"demonstrated":[82,1]
,"stringvalue":[82,4]
,"hello":[82,1,197,1]
,"world":[82,1,197,1,455,1,479,1,523,2,536,1,537,1,538,1,559,2,631,1]
,"char*str1":[82,2]
,"=stringvalue":[82,6]
,"\u002F\u002Fimplicit":[82,1]
,"char*str2":[82,2]
,"=stringvalue.asstring":[82,1]
,"accepts":[82,1,87,4,127,5,294,1,447,1,619,1]
,"extra":[82,1,110,1,157,2,274,1]
,"asstring":[82,2]
,"unless":[82,1,225,1,482,2,486,1,489,1]
,"ilistringdatatype":[82,2]
,"nv1":[82,1]
,"char*()":[82,1]
,"char*nv1":[82,1]
,"=0)":[82,1,377,1,412,1,564,1]
,"(ilistringtype)":[82,1]
,"\u002F\u002Finitial":[82,1]
,"integervalue":[82,2]
,"\u002F\u002Fstr1":[82,1]
,"==0":[82,2]
,"=integervalue":[82,2]
,"\u002F\u002Fstr2":[82,1]
,"char*str3":[82,1]
,"=integervalue.asstring":[82,1]
,"undefined":[82,1,105,1]
,"\u002F\u002Fstr3":[82,1]
,"!=0":[82,1]
,"remember":[82,1,316,1,336,3,340,3,345,1,348,2,349,1,377,1,394,1,486,1,495,1,498,1]
,"char*operator":[82,1]
,"soon":[82,1,135,1,193,1,300,1,376,2]
,"become":[82,1,122,1,251,1,256,1,262,2,453,1,479,1,480,1,481,2,486,1,487,1,489,2]
,"cause":[82,1,98,1,486,1,489,1,517,2,568,1,569,1,643,1]
,"loss":[82,1,552,1,568,1]
,"precision":[82,2,198,2,204,1,311,1,411,2,427,2,526,1,579,1,632,1]
,"truncated":[82,1,339,2,386,1]
,"doublevalue":[82,1]
,"=9.8":[82,1]
,"anint":[82,1]
,"=doublevalue":[82,1]
,"\u002F\u002Floss":[82,1]
,"adouble":[82,1]
,"3.14":[82,2,345,1]
,"\u002F\u002Fi":[82,4]
,"\u002F\u002Fd":[82,2]
,"0.0":[82,1,204,2,206,3,311,2,313,3,447,3,553,2,625,1]
,"=stringvalue.asint":[82,1]
,"(-1)":[82,1]
,"=stringvalue.asdouble":[82,1]
,"(-2.0)":[82,1]
,"-2.0":[82,1]
,"=operators":[82,1]
,"\u002F\u002Fdata":[82,2]
,"=4.0":[82,1]
,"formatting":[83,1,156,1,158,1,201,1,203,3,204,2,205,1,206,1,208,2,241,1,255,1,310,3,311,2,312,1,313,1,586,2]
,":format":[83,1,197,1]
,"stringbuf":[83,1]
,"fmt":[83,2,200,1]
,"0.00":[83,2,200,1,204,5,282,1,311,5]
,"yens":[83,2]
,"=5.677":[83,2]
,"value.format":[83,1]
,"(stringbuf":[83,1]
,"fmt)":[83,1]
,"price":[83,2,105,1,106,1,113,1]
,"stringbuf)":[83,1]
,":getformatted":[83,1]
,"require":[83,1,97,1,129,1,273,1,413,1,486,1,487,1,519,1,553,1,569,1]
,"char*result":[83,1]
,"=value.getformatted":[83,1]
,"(fmt)":[83,1,200,1]
,"result)":[83,1,557,1]
,"getformatted":[83,1]
,"extended":[84,1,187,1,189,2,486,1,489,1,543,1,560,1]
,"beyond":[84,1]
,"later)":[84,1]
,"9.x":[84,1]
,"describestructuredtype":[84,1]
,"ilidatatype*type)":[84,2]
,"(type->":[84,2]
,"isstructuredtype":[84,2]
,"ilischema*schema":[84,1,135,1]
,"=type->":[84,2,121,2]
,"getnestedschema":[84,1]
,"schema->":[84,2]
,"initialized":[84,1,372,1,454,1,469,1,478,1,495,1,635,1,639,1]
,"makestructuredvalue":[84,1]
,"{ilivalue":[84,1]
,"(type)":[84,2,210,2]
,"ilitable*table":[84,2]
,"maketable":[84,2,121,2]
,"value.importtable":[84,2]
,"(table)":[84,1]
,":maketable":[84,1]
,":getnestedschema":[84,1]
,"really":[84,1,494,1,506,1]
,"expects":[84,1]
,"isobjecttype":[84,1]
,"istabletype":[84,1]
,"distinguish":[84,1,156,1,280,1,359,1,379,1,383,1,483,1,486,1]
,"understand":[84,1,210,1,217,1,358,1,360,1,457,1,461,1,506,1,507,1,510,1]
,"nested":[84,1,120,1,121,10,211,2,295,2,296,2,298,1,300,2,302,1]
,"excerpt":[84,2,106,1,138,1]
,"firstval":[84,1]
,"=makestructuredvalue":[84,1]
,"secondval":[84,1]
,"=firstval":[84,1]
,"assert":[84,1]
,"(firstval.astable":[84,1]
,"==secondval.astable":[84,1]
,"alter":[84,1,113,1]
,"altered":[84,1]
,"=value.astable":[84,1]
,"(table":[84,1]
,"{ilitable*temptable":[84,1]
,"temptable->":[84,3]
,"\u002F\u002Falter":[84,1]
,"temptable":[84,1]
,"(temptable)":[84,1]
,"satisfy":[85,1,489,1]
,"rather":[85,1,255,1,338,1,402,1,619,1]
,"troubleshooting":[85,1,98,1]
,"ilientryfieldstyle":[87,2]
,"ilitextstyle":[87,2]
,"ilioptionmenustyle":[87,2]
,"ilitablecomboboxstyle":[87,3,88,2]
,"ilitogglestyle":[87,2]
,"ilistringliststyle":[87,2]
,"giving":[87,1,122,1,237,1,282,1]
,"best":[87,1,411,1,453,1,469,1,476,1,479,3,480,1,484,1,485,2,489,1,491,1,582,1,602,2]
,"better":[87,2,117,2,336,1,339,1,394,1,402,1,479,1,482,1,484,2,506,2,507,1,510,1,622,1]
,"scrolling":[87,1,322,1,336,1,348,1,438,4,439,8,440,1]
,"lines":[87,1,124,1,154,1,175,3,189,2,265,1,271,2,275,1,276,2,280,1,299,1,300,1,307,1,330,2,341,4,355,1,359,1,369,1,396,1,414,1,415,1,420,2,421,6,422,1,488,2,492,1,526,1,530,1,540,1,544,1,548,3,553,1,575,1]
,"accesses":[87,2]
,"options":[87,2,102,1,108,1,109,3,144,1,157,1,189,1,225,1,227,1,230,1,264,4,289,7,316,1,479,2,480,2,481,4,482,1,485,3,487,1,489,1,496,1,498,3,537,1,538,1]
,"accept":[87,2,91,1,120,1,127,1,469,1,507,1,509,1]
,"characters":[87,2,148,1,156,3,158,3,163,3,165,1,167,3,197,1,202,1,203,1,204,1,205,1,206,3,207,2,208,9,209,1,237,1,309,1,310,2,311,1,312,2,313,3,316,2,446,1,544,1,611,1,614,1]
,"(provided":[87,1]
,"entry)":[87,1]
,"state":[87,5,120,1,145,1,157,1,171,1,175,1,245,1,246,1,289,4,339,1,428,1,501,1,559,2,564,3]
,"includes":[87,1,118,1,427,1,485,1,540,1,547,1,582,1,609,1]
,"marker":[87,3,171,1,385,2,396,2,402,1,417,1,435,1,528,1,550,3,636,1]
,"(according":[87,1]
,"(windows":[87,1]
,"motif)":[87,1]
,"windows95":[87,1]
,"toggles":[87,2]
,"frame":[87,1,90,1,145,2,169,2,187,1,189,1,334,3,337,1,418,2,582,1,583,6]
,"turned":[87,1,431,1,489,2]
,"difficult":[87,1,122,1,453,1,457,1,458,1]
,"mouse":[87,1,145,1,146,2,189,1,226,1,244,1,262,3,265,2,288,1,290,1,325,1,356,2,427,4,428,4,430,4,431,1,432,5,433,3,434,2,435,3,614,1,633,2,635,2,637,5]
,"keyboard":[87,1,145,1,146,2,222,1,226,1,245,1,262,2,289,1]
,"thus":[88,1,175,1,204,1,215,1,218,2,245,1,273,1,289,1,311,1,332,1,369,2,376,2,380,1,417,1,438,1,500,1,541,1,552,1,554,1,566,1,571,1]
,"providing":[88,1,130,1,142,1,223,1,454,1,547,1,583,1]
,"easier":[88,1,394,1,450,1,486,1,503,1]
,"instant":[88,1]
,"command":[88,2,157,4,216,1,223,1,225,1,263,3,292,1,428,1,474,1,558,1]
,"(ilidbfield":[88,1]
,"objects)":[88,1,462,1,568,1]
,"top":[88,2,141,1,149,1,156,3,158,1,163,2,169,1,187,2,189,2,219,1,224,1,243,2,245,1,253,2,254,1,256,1,257,1,260,2,261,1,262,2,263,1,264,1,265,3,283,3,284,1,288,1,291,1,322,1,323,1,331,1,332,1,336,4,340,2,348,1,349,1,364,1,369,1,391,1,398,2,402,1,407,2,413,1,421,2,424,2,476,1,481,7,482,5,483,5,486,2,487,1,488,1,489,7,498,2,531,3,534,4,571,1,601,1,633,2,635,2,636,1]
,"navigate":[88,1,142,1,223,1]
,"records":[88,1]
,"notice":[88,1,130,1,228,1,288,1,324,1,339,1,346,1,376,2,377,1,379,1,553,1,572,1]
,"adopts":[88,1]
,"pop-up":[88,1,91,1,222,1,223,2,267,1,287,3,289,6,290,8,291,15,531,2]
,"showing":[88,1,93,1,130,1,156,1,158,1,167,1,189,1,209,1,243,1,317,1,330,1,332,1,339,1,453,1,465,1,633,1,637,1,638,1]
,"automatic":[88,1,93,1,130,1,181,1,187,1,208,1,258,1,331,1,336,1,354,1,368,1,376,1,411,5,437,2,438,1,439,2,441,2,459,2,479,1,532,1]
,"limited":[88,1,121,1]
,"pages":[88,2,105,1,127,1,140,1,145,1,156,4,158,4,161,1,163,1,165,1,167,1,169,1,171,1,173,1,175,1,177,1,179,1,181,2,183,1,185,1,187,1,189,1,191,2,193,1,195,1,216,1,225,1,227,1,289,1,293,1,324,6,325,1,334,2,336,2,537,1,538,1]
,"notebook":[88,1,105,1,140,1,145,3,146,1,156,2,158,6,161,4,163,5,165,5,167,4,169,4,171,5,173,5,175,6,177,3,179,4,181,4,183,5,185,5,187,4,189,4,191,5,193,4,195,4,216,1,218,1,236,1,237,1,250,2,258,1,283,1,288,1,289,3,291,1,293,2,320,1,324,2,325,3,334,1,336,4,340,1,345,1,348,1]
,"presentations":[88,1]
,"presentation":[88,3,541,1]
,"(arrange":[88,1]
,"right)":[88,1,274,1,486,1,489,1,490,1]
,"(color":[88,1]
,"font)":[88,1]
,"labels":[88,1,142,1,187,1,189,2,223,1,325,2,330,5,336,8,338,3,346,1,365,7,366,3,369,2,408,2,409,31,410,3,540,1]
,"de-activate":[88,1]
,"6.6":[88,1]
,"inspector)":[88,1]
,"already":[88,1,93,1,130,1,144,1,157,2,223,1,227,1,229,1,236,1,238,1,239,1,243,1,249,1,277,1,283,3,292,1,302,1,304,1,306,2,315,1,316,1,336,11,340,4,341,1,345,2,346,1,348,2,349,1,351,1,375,2,394,1,412,4,450,1,457,1,462,1,486,1,489,3,506,1,508,1,538,1,594,1,612,1]
,"yourself":[88,1,243,1,461,1,500,1]
,"map":[89,1,250,1,252,1,255,1,329,1,344,1,346,1,349,1,481,1,518,4,520,6,522,5,523,5,524,12,525,4,526,8,527,6,528,7,529,7,530,3,531,5,532,1,533,8,534,15,535,3,536,1,537,5,539,1,540,8,541,11,542,5,543,6,544,4,545,4,546,1,547,7,548,3,551,1,552,11,553,9,554,5,555,2,556,5,557,13,558,4,559,2,560,3,566,1,567,1,568,2,572,1,573,1,576,2,577,1,579,1,580,2,582,4,583,4,584,1,585,2,596,1,597,7,598,4,599,1,600,2,601,7,602,5,606,5,612,1,614,1,621,1,632,1,633,6,634,1,635,12,636,5,637,1,644,1,645,4]
,"applying":[89,1,276,1,338,2,341,3,345,1,370,1,372,1,409,3,413,1,415,1,513,1]
,"applied":[89,2,124,1,156,2,163,1,165,2,167,2,189,1,209,1,227,1,266,1,276,1,282,2,329,1,330,2,332,5,338,1,339,1,341,1,368,1,394,1,403,2,415,9,448,1,474,1,476,1,478,1,619,1,642,1]
,"characteristics":[90,1,126,1,260,1,354,2,385,1,386,1,387,1,388,1,389,1,390,1,391,1,392,1,393,1,394,1,396,1,397,1,398,1,399,1,410,2,428,1,429,1,430,1,431,1,432,1,433,1,434,1,435,1,476,1,478,3,481,1,489,1,492,1,495,1,498,1,505,1,506,1,516,1]
,"matched":[90,1,252,1,273,1]
,"searched":[91,2]
,"reversed":[91,1,486,1,487,3,489,8,618,1]
,"(replacing":[91,1]
,"prevents":[91,1,155,1,439,1]
,"inconsistency":[91,1]
,"arise":[91,1,506,1]
,"entering":[91,1,108,1,127,2,158,1,164,1,168,1,226,1,276,1,316,1]
,"selector":[91,3,142,1,150,1,172,1,173,7,195,6,223,1]
,"constrain":[92,2]
,"ensures":[92,1,489,1,639,1]
,"(value)":[92,1,644,1]
,"happens":[93,1,201,1,228,1,469,1,482,1,489,1,517,1]
,"(created":[94,1]
,"assistant)":[94,1]
,"read\u002Fwrite":[94,1,595,1]
,"permissions":[94,1]
,"controlled":[95,2,222,1,482,1,484,1,489,1]
,"manually":[95,1,129,2,243,1,411,1,441,1,489,1]
,"reflected":[95,1,120,1,354,2]
,"disconnect":[95,2,134,1]
,"affecting":[95,1,482,1,484,1]
,"reset":[95,1,515,1,553,1,614,1]
,"picked":[95,1]
,"dragged":[95,1,187,3,189,2,218,1,243,1,244,2,250,1,253,1,324,1,334,1,432,1]
,"horizontal":[95,1,161,1,169,3,187,5,189,5,195,2,332,1,386,2,453,1,479,1,482,2,483,1,487,1,488,1,489,14,492,2,498,8,631,2,632,1]
,"settings":[96,1,121,1,200,3,204,3,205,5,209,1,275,1,282,6,311,3,312,5,334,1,336,1,339,1,413,1,436,1,454,2,462,1,466,1,470,2,472,1,478,2,495,1,498,1,526,1,600,1]
,"consulted":[96,1]
,"horizontally":[97,1,354,1,453,1,479,2,480,1,482,1,483,1,489,3]
,"far":[97,1,517,2,572,1,575,1,602,1,606,1,613,1,623,1,624,1]
,"side":[97,1,157,2,161,1,187,2,189,2,218,2,242,2,243,1,257,1,288,2,289,3,336,2,391,1,399,2,476,1,481,5,486,2,490,1,491,2,498,4]
,"farthest":[97,2]
,"sure":[97,1,121,1,226,1,238,1,243,1,247,1,263,1,267,1,284,1,289,3,316,1,336,17,338,3,339,1,340,8,341,4,345,4,346,4,348,4,349,4,350,3,351,1,533,1,535,1,552,1,614,1]
,"getfixedcolumnscount":[97,1]
,"setfixedcolumnscount":[97,1]
,"all)":[97,1,482,1]
,"careful":[98,1,380,1,537,1]
,"unexpected":[98,1]
,"matching":[98,1,100,1,274,3]
,"column\u002Fforeign":[99,2]
,"tempted":[99,1]
,"step":[99,1,236,1,243,1,289,1,290,1,325,3,330,7,332,1,336,7,338,2,345,1,346,1,350,2,355,2,364,3,365,7,366,2,369,3,370,2,384,1,388,8,403,1,408,2,409,21,410,5,411,3,439,1,454,1,465,1,480,6,488,6,489,3,501,2,638,4,639,2,643,4,644,2]
,"disturbing":[99,1]
,"repeating":[99,1,336,1]
,"successfully":[99,1,135,1,218,1,267,1,462,1,500,2,504,1,517,1]
,"compared":[100,1,487,1,489,2]
,"comparison":[100,2]
,"produce":[100,1,353,1,454,1,457,1,458,1,469,1,485,1,495,1,498,1,577,2,591,1,619,1]
,"bles":[102,1]
,"definition":[102,1,104,3,105,2,106,1,107,1,119,1,121,2,154,1,180,1,227,3,282,1,315,1,316,1,325,2,336,2,338,1,350,1,361,1,372,1,409,2,444,2,504,1,596,1]
,"session":[102,1,107,2,108,13,120,1,122,5,133,6,134,4,135,4,136,1,137,4,138,7,157,6,217,1,218,24,235,1,237,10,243,6]
,"transaction":[102,1,111,2,120,17,135,2,157,3,158,3,218,1]
,"asynchronous":[102,1,122,13]
,"submitted":[104,1,120,2,135,1,316,1]
,"recomputed":[104,1,364,1,418,3,419,2]
,"emp.id":[104,2,106,1]
,"emp.name":[104,3,106,2]
,"emp.deptno":[104,4,106,1]
,"submit":[104,1,135,2,156,1]
,"(emp.id":[104,1]
,"emp.deptno)":[104,1]
,"sorted":[104,1,246,2,488,1]
,"(order":[104,1,156,1]
,"employees":[104,1,127,2,232,1,243,1,247,4,248,2,258,5,275,4]
,"department":[104,1,127,9,232,5,248,2,255,4,256,1,258,4,268,1,273,2,278,4,279,4,281,1,282,2,283,1,285,5]
,"referenced":[104,1,105,1,200,1,273,1,336,1,364,1,365,1,625,1,630,1]
,"clause":[104,1,105,6,118,1,124,2,276,1]
,"dept.name":[104,1,106,1]
,"=dept.id":[104,1,106,1]
,"produced":[104,1,105,1,135,1,457,1,469,1,476,1,479,1,487,1,490,3,491,2,492,4,493,2,496,2,642,1]
,"combining":[104,1]
,"join":[104,1,154,8,157,2,273,15,274,16,280,1]
,"achieve":[104,1,486,1]
,"joins":[105,2,106,1,274,3]
,"dragging":[105,1,156,1,216,1,219,2,226,1,230,1,243,4,246,1,253,1,262,1,271,1,273,1,280,2,299,1,300,1,428,1,430,1,432,1]
,"condition":[105,2,124,1,276,1]
,"table1.column1":[105,1]
,"=table2.column2":[105,1]
,"labeled":[105,2,248,1,336,2]
,"leave":[105,1,130,1,146,1,179,1,226,1,236,1,243,2,245,1,246,1,254,1,256,1,265,1,288,1,332,1,526,3,528,1,537,2]
,"expression":[105,1,156,2,248,1]
,"computes":[105,1,216,1,367,2,462,1,479,1,492,1,493,2,513,1,636,1]
,"*qty":[105,1,106,1,113,1]
,"conditions":[105,5,110,1,124,2,276,2,284,1,384,1,395,1,410,1,454,1]
,"logical":[105,2,156,2,248,3,457,1]
,"group":[105,1,156,5,256,1,281,2,307,1,488,2,560,2,568,3,600,1]
,"aggregate":[105,1,156,2]
,"sum":[105,1,156,2,339,2]
,"duplicate":[105,1]
,"distinct":[105,1,157,1,423,1]
,"performing":[105,1,231,1,259,1,297,1,440,1,454,1,462,3,466,1,469,1,472,1,498,1,503,1,504,1,508,1,516,1,517,1]
,"updatable":[105,1,106,1,157,1,271,2]
,"structurally":[105,1]
,"ilisqltable*sqltbl":[106,1,107,1,108,2,111,1,112,2,117,1,119,1]
,"sqltbl->":[106,15,107,3,108,2,111,4,112,7,117,1,119,3]
,"ilisqltableref":[106,2,107,1]
,"refemp":[106,1]
,"scott":[106,2,107,1]
,"refdept":[106,1]
,"tblemp":[106,1]
,"=sqltbl->":[106,6,108,1,112,4]
,"addtable":[106,2]
,"(refemp)":[106,1]
,"tbldept":[106,2]
,"(refdept)":[106,1]
,"addjoin":[106,1]
,"(tblemp":[106,2]
,"cid":[106,1]
,"(cid":[106,3]
,"setcolumnsqltext":[106,4]
,"setcolumntable":[106,3]
,"tblemp)":[106,2]
,"cname":[106,1]
,"(cname":[106,4]
,"cdept":[106,1]
,"(cdept":[106,2]
,"tbldept)":[106,1]
,"(note":[106,1,316,1,454,2,488,1]
,"ctotal":[106,1]
,"total":[106,1,256,1,398,1,458,1,500,1]
,"(ctotal":[106,1]
,"insertconjunct":[106,1]
,"(where":[106,1,156,1,304,6]
,"setcolumnpredicat":[106,1]
,"setcolumnorderby":[106,1]
,"ilisqlascending)":[106,1]
,"settableupdatable":[106,1]
,"makequery":[106,1]
,"ready":[106,1,256,1,271,1,280,1,288,1,299,1,572,1,635,1]
,":getquery":[106,1]
,"scott.emp":[106,1]
,"scott.dept":[106,1]
,"shortcut":[107,1]
,":setqueryfrom":[107,1]
,"ilisqlsession*session":[107,1,108,3,120,1,122,1,133,1,137,1,138,2]
,"scott\u002Ftiger@orasrv":[107,1,108,1]
,"setsqlsession":[107,1,108,2,120,1]
,"(session)":[107,1,108,2,120,1,138,1]
,"tblref":[107,1]
,"setqueryfrom":[107,2]
,"(tblref)":[107,1]
,"reads":[107,1,208,2,443,1,553,2,571,1,576,6,583,2,596,2,597,2,643,1]
,"accordingly":[107,1,129,1,274,1,336,3,348,1,586,1]
,"requests":[108,1,524,1]
,"sessions":[108,1,132,2,133,2,138,2,218,2,237,2]
,"cursor":[108,1,109,1,117,2,132,1,133,1,135,13,169,1,246,2,273,1,377,1,416,1,423,4,424,10,425,21,438,1]
,"causes":[108,1,489,1,568,2]
,"application-wide":[108,3,133,1,138,2,202,1,207,1,218,5,235,1,237,1,243,1,282,2,309,1]
,"=ilisqlsession":[108,1,138,1]
,":getregisteredsession":[108,1,138,2]
,"communicate":[108,1,136,1,157,1]
,"affect":[109,1,204,1,288,1,289,1,311,1,332,1,478,2,489,3,517,1]
,"behaves":[109,1]
,"concurrency":[109,1,110,8,118,1]
,"auto-commit":[109,1,111,3,112,1,120,3]
,"fetch":[109,1,112,4,117,1,122,3,157,1,560,1]
,"auto-refresh":[109,1,113,2]
,"inserting-nulls":[109,1,114,1]
,"dynamic-sql":[109,1,115,3]
,"variables":[109,1,116,5,157,2,306,3,307,2,308,4]
,"buffering":[109,1,117,2,197,1]
,"auto-row":[109,1,110,1,118,3]
,"locking":[109,1,110,1,118,3]
,"client":[110,1,122,2,535,1]
,"programs":[110,1,308,2]
,"accessing":[110,1,120,1,216,1,316,1]
,"enabled":[110,2,111,1,113,1,114,1,115,1,118,1,376,6]
,"succeed":[110,1,618,1]
,"concerned":[110,1,512,1,559,1,572,2,623,1,624,1]
,"obliges":[110,1]
,"protect":[110,1]
,"achieved":[110,1,469,1,577,1]
,"employee":[110,2,114,1,115,1,127,1,135,1,231,1,232,8,241,1,242,2,243,2,247,3,248,3,250,1,252,2,253,1,255,4,258,1,259,2,260,5,261,1,263,1,265,3,266,2,267,12,268,1,269,3,270,3,273,3,275,6,277,5,285,1,291,2,292,1]
,"resulting":[110,1,213,1,340,1,341,1,346,1,351,1,376,3,440,3,443,1,478,1,484,1,487,1,513,1,552,1,577,1]
,"udpate":[110,1]
,"optimistic":[110,1]
,"locked":[110,1,133,1,374,2,562,1,564,1,566,1,571,1]
,"pessimistic":[110,1,118,1]
,"commits":[111,1]
,"disabled":[111,1,112,2,114,1,115,1,161,1]
,"committed":[111,1,135,1]
,"(through":[111,1,222,1]
,"effective":[111,1,112,1,120,1,157,1]
,"session)":[111,1,122,1]
,"\u002F\u002Fdelete":[111,1,473,1]
,"commit":[111,2,120,2,135,3,157,4,218,2]
,"setautocommit":[111,1,112,1,120,2]
,"(ilvfalse)":[111,1,120,2]
,"(9)":[111,1]
,"successful":[112,1,135,1,557,1]
,":setfetchpolicy":[112,1]
,"immediate":[112,2,122,1,157,3]
,"setfetchpolicy":[112,2,122,1]
,"(ilifp_immediate)":[112,1,122,1]
,"\u002F\u002Fall":[112,2]
,"rowscount":[112,1]
,"accurate":[112,2,622,2,623,1]
,"advantage":[112,1,116,1,224,1,505,1,506,1]
,"disadvantage":[112,1,122,1]
,"ten":[112,1,245,1,336,1,632,1]
,"thousand":[112,1]
,"incur":[112,1]
,"serious":[112,1,116,1]
,"delay":[112,1,195,2,534,1]
,"(ilifp_asneeded)":[112,1]
,"\u002F\u002Fauto-commit":[112,1]
,"(ilfalse)":[112,1,635,1]
,"\u002F\u002Frows":[112,1]
,"initialrowscount":[112,1]
,"equals":[112,1,248,3]
,"halfwayrowscount":[112,1]
,"\u002F\u002Fnow":[112,1,486,2]
,"totalrowscount":[112,1]
,"retrieving":[112,1,486,2,504,1,596,1]
,"followed":[113,1,204,1,311,1,330,1,341,1,342,1,409,1,415,1]
,"request":[113,2,118,1,218,1,536,1,537,3,597,1]
,"replaces":[113,1,375,1]
,"triggers":[113,1,568,1]
,"formulas":[113,1,129,2,211,1,282,4,641,1]
,"recalculated":[113,1]
,"inserting":[114,1,155,1,158,1]
,"williams":[114,2,115,2]
,"insert-nulls":[114,2]
,"address)":[114,1]
,"null)":[114,1,121,1,142,1,171,1,223,1,298,1]
,"williams\u2019)":[114,1]
,"unchanged":[115,1]
,"chocolate":[115,2]
,"street":[115,2]
,"variable":[116,2,288,1,306,5,307,6,473,1,509,1,536,1,595,1,600,1,608,1,613,1,634,1]
,"markers":[116,1,161,3,336,3,345,1,383,1,385,2,396,6,403,1,417,1,435,1]
,"question":[116,1,124,1,154,1,157,5,517,1]
,"marks":[116,1,330,1,364,5,365,1,366,2,408,2,438,1]
,"separately":[116,1,448,1,479,1,517,2]
,"reused":[116,1]
,"offer":[116,1,606,1]
,"boost":[116,1]
,"performance":[116,1,157,2,376,1,437,1,440,4,506,1,533,1,552,1,553,1]
,"spent":[116,1]
,"parsing":[116,1,449,2]
,"plan":[116,1,595,1]
,"throughput":[117,2]
,"large":[117,1,222,1,453,1,464,1,484,1,485,2,487,2,489,1,501,1,520,2,530,2,531,12,533,1,534,1,540,1,541,1,559,1,560,1,563,1,603,1,622,1,623,1,632,1]
,"lower":[117,1,144,2,151,1,159,1,223,3,283,1,322,2,323,1,339,1,370,1,489,2,577,1,645,2]
,"layers":[117,1,453,1,454,3,460,1,507,1,508,8,530,1,531,3,534,4,537,2,538,2,539,1,556,2,558,1,559,1,560,1,563,2,569,1,570,5,600,1]
,"seriously":[117,1]
,"slow":[117,1,489,1]
,"down":[117,1,246,1,247,1,322,1,325,2,336,2,339,1,340,1,428,1,481,1]
,"round-trip":[117,1]
,":setcursorbufferedrowscount":[117,1]
,"setcursorbufferedrowscount":[117,1]
,"(15)":[117,1]
,"servers":[117,1,136,1,541,1]
,"refreshandlockrow":[118,2]
,"rereads":[118,1]
,"acquire":[118,1]
,"ilisqldatasource*sqlds":[118,1]
,"sqlds->":[118,1]
,"enableautorowlocking":[118,1]
,"(ilvtrue)":[118,1,410,1,413,1,564,3]
,":refreshandlockrow":[118,1]
,"nowait":[118,1]
,"doing":[118,1,121,1,216,1,217,1,224,1,243,1,280,1,284,1,299,1,300,1,336,1,409,1,439,1,489,1]
,"wait":[118,1,122,1]
,"locks":[118,1,566,1]
,"held":[118,1]
,":enablenowaitonlockrow":[118,1]
,"references":[119,1,304,1,560,1]
,"=:name_p":[119,1]
,"name_p":[119,3]
,"preceded":[119,1]
,"colon":[119,1,126,1,127,1,258,1]
,"appendparameter":[119,1]
,"extract":[119,1,121,3,136,1,137,1,191,1,198,1,200,1,553,1,577,2,587,1]
,"setparametervalue":[119,1]
,"ilitransactionmanager":[120,2]
,"so-called":[120,1]
,"transactions":[120,1]
,"propagation":[120,1,376,2,377,1]
,"deferred":[120,1]
,"send":[120,1,531,1,534,2]
,"retained":[120,2]
,"validates":[120,1,127,1,157,1]
,"accepted":[120,1,129,1,507,2,509,2]
,"succeeded":[120,2]
,"issue":[120,2,122,1,512,1]
,"rollback":[120,2,218,2]
,"retry":[120,1]
,"revert":[120,1,124,1,246,1,276,1]
,"effected":[120,1]
,"participate":[120,1]
,"anonymous":[120,1]
,"simplest":[120,1,516,1]
,"transactionmanagername":[120,2]
,"share":[120,1,138,1]
,"assigning":[120,1]
,"transactionmanager":[120,1]
,"transaction-manager-aware":[120,1]
,"restrictions":[120,1]
,"ilisqltable*gettableemp":[120,1]
,"ilisqltable*gettabledept":[120,1]
,"(ilvdisplay*dpy)":[120,1]
,"initpanel":[120,1]
,"{\u002F\u002Fcould":[120,1]
,"\u002F\u002Fshown":[120,1]
,"exposition":[120,1]
,"\u002F\u002Fensure":[120,1]
,"gettableemp":[120,4]
,"settransactionmanagername":[120,2]
,"trans_mgr":[120,2]
,"gettabledept":[120,3]
,"\u002F\u002Fand":[120,1,497,1,560,1,585,2]
,"=gettableemp":[120,1]
,"getsqlsession":[120,2]
,"\u002F\u002Fdo":[120,1]
,"ilitransactionmanager*gettransmgr":[120,1]
,"gettransactionmanager":[120,1]
,"ilisqlsession*getsqlsession":[120,1]
,"istransactionstarted":[120,1]
,"gettransmgr":[120,2]
,"isstarted":[120,1]
,"starttransaction":[120,1]
,"{gettransmgr":[120,3]
,"start":[120,1,127,1,187,2,189,2,193,1,195,7,238,1,284,1,322,1,486,1,524,1,560,1,568,1]
,"accepttransaction":[120,1]
,"(gettransmgr":[120,1]
,"{getsqlsession":[120,1]
,"canceltransaction":[120,1]
,"9.x)":[121,1]
,"extensible":[121,1,449,1,460,1,520,1]
,"traditional":[121,1]
,"scalar":[121,1]
,"8.x":[121,1,305,1,306,1]
,"part_t":[121,2,298,1]
,"(partno":[121,1,298,1]
,"partname":[121,5,298,2,300,1]
,"varchar":[121,1,233,3,298,2]
,"(20)":[121,1,298,1]
,"part_table_t":[121,1]
,"(prodno":[121,1,298,1]
,"prodname":[121,4,298,2,299,1]
,"varchar2":[121,1,597,1]
,"(50)":[121,1,298,1]
,"part_table_t)":[121,1]
,"product_ds":[121,10,297,1,299,5,300,2,301,5]
,"prodds":[121,2]
,"ilisqltable*prodtable":[121,3]
,"=prodds->":[121,4]
,"prodidx":[121,3]
,"<prodtable->":[121,1]
,"prodidx)":[121,1]
,"ilitable*partstable":[121,2]
,"=prodtable->":[121,9]
,"(prodidx":[121,5]
,".astable":[121,3]
,"char*prodname":[121,1]
,"(partstable":[121,1]
,"prodname)":[121,2]
,"partcount":[121,1]
,"=partstable->":[121,3]
,"partidx":[121,2]
,"<partcount":[121,1]
,"partidx)":[121,1]
,"char*partname":[121,1]
,"(partidx":[121,1]
,"partname)":[121,1]
,"partscolno":[121,2]
,"getcolumnindex":[121,2]
,"getcolumntype":[121,2]
,"(partscolno)":[121,2]
,"partstable->":[121,5]
,"ilitablebuffer*partsbuf":[121,1]
,"\u002F\u002Finsert":[121,3]
,"partsbuf->":[121,4]
,"partno":[121,3,298,1,300,1]
,"610":[121,1]
,"drawer":[121,1,298,1]
,"(partsbuf)":[121,3]
,"611":[121,1]
,"ilitablebuffer*prodbuf":[121,1]
,"prodbuf->":[121,3]
,"prodno":[121,1,298,1,299,1]
,"dresser":[121,1,298,1]
,"=partstable":[121,1]
,"prodtable->":[121,3]
,"(prodbuf)":[121,2]
,"prodtable":[121,1]
,"partstable":[121,2]
,"care":[121,1]
,"taken":[121,1,122,1,125,1,127,1,156,6,157,1,213,1,216,2,219,1,232,1,243,2,248,1,252,1,263,1,280,1,283,1,392,2,393,2,402,2,467,1,468,1,470,1,498,1,505,1,507,1,508,2,509,1,510,1,517,1,553,1,569,1,571,1,612,1]
,"inevitably":[121,1]
,"lead":[121,1,636,1]
,"inconsistencies":[121,1]
,"parts_ds":[121,9,297,1,300,6,301,4]
,"products.parts":[121,1]
,"sign":[121,1,204,6,208,2,244,1,300,1,311,8]
,"double-click":[121,1,144,1,146,1,157,1,218,1,220,1,223,1,228,1,243,2,245,1,247,1,250,1,253,1,254,1,255,1,258,1,265,2,267,1,273,1,274,1,280,1,282,1,283,1,288,1,289,1,290,2,299,1,300,1,307,1,323,1,336,1,340,1,342,1,345,1,346,1,348,1]
,"alias":[121,1,300,1]
,"partsmemorytable->":[121,2]
,"ilisqldatasource*prodds":[121,1]
,"ilitable*partsmemorytable":[121,1]
,"(partsmemorytable":[121,1]
,"==null)":[121,1]
,"partsmemorytable":[121,2]
,"(partsmemorytable)":[121,2]
,"ilisqldatasource*partsds":[121,1]
,"ilisqltable*partssqltable":[121,1]
,"=partsds->":[121,1]
,"partssqltable->":[121,1]
,"setcache":[121,1]
,"adjust":[121,1,245,1,255,1,258,1,263,1,273,1,489,1]
,"moves":[121,1,135,1,165,1,167,1,260,1,288,1,427,2,433,3,434,2,453,1,462,1,482,1,495,1,498,1]
,"normally":[122,1,203,1,310,1,411,1,462,2,482,3]
,"blocking":[122,2]
,"replies":[122,1]
,"submits":[122,1]
,"sufficiently":[122,1,558,1]
,"responsive":[122,2]
,"increase":[122,1,157,1,243,1,484,2,492,5,517,2]
,"responsiveness":[122,1]
,"responds":[122,1]
,"quickly":[122,1,396,1,397,1,451,1,479,1,487,3]
,"caller":[122,3]
,"responded)":[122,1]
,"repeat":[122,1,226,1,228,1,232,1,243,1,283,1,336,3,339,2,340,1,345,2,348,1,538,1,632,1]
,"meantime":[122,1]
,"tasks":[122,1,231,1,270,1,279,1,336,6,338,2,339,1,340,2,341,1,345,1,346,1,347,1,350,1,369,2,375,1,377,3]
,"loop":[122,1,440,2,635,1]
,"chance":[122,1]
,"events)":[122,1]
,"advantages":[122,1]
,"opportunity":[122,1]
,"long-running":[122,1]
,"task":[122,1,201,1,227,1,336,1,351,2,377,1,458,1,460,1,512,1]
,"synchronous":[122,1]
,"asynchronously":[122,2]
,"typical":[122,1]
,"timer":[122,2,439,4,440,4]
,"class)":[122,1,230,2,368,1,377,1,394,1,395,2,396,2,397,2,446,1,448,1,449,1,504,1,508,1,572,1,595,1,600,1]
,"ilisqltable*sqltable":[122,2]
,"enterasyncmode":[122,1]
,"sqltable->":[122,4]
,"continueasynccall":[122,2]
,"ontimer":[122,1]
,"(ilvgraphic*":[122,1,560,1]
,"isasynccallcompleted":[122,1]
,"release":[122,1,135,1,262,2,265,2,290,1,472,1,473,1,572,2]
,"=sqltable->":[122,1]
,"(session->":[122,1,134,1,135,1,137,1]
,"supportsasyncmode":[122,1]
,"non-completed":[122,1]
,"cursors":[122,2,135,3,331,1,356,2,359,3,366,1,377,2,379,1,423,3,424,1,425,5,431,1]
,"parallel":[122,1,482,2,489,5,490,1,492,2,619,1]
,"substitutes":[124,1,275,1,276,1]
,":switchtoquerymode":[124,1]
,"differs":[124,1,275,1,276,1]
,"regular":[124,2,276,1,340,1,586,1]
,"(nonquery)":[124,1,276,1]
,"literal":[124,1,202,1,206,4,276,1,309,1,313,4]
,"(implying":[124,2,276,1]
,"=relational":[124,1,276,1]
,"operator)":[124,2,276,2]
,"wildcard":[124,1,276,1]
,"underscore":[124,1,446,1]
,"\u201C_\u201D":[124,1,248,1]
,"pattern":[124,2,222,1,586,2]
,"_literal_value":[124,1]
,"another_literal_value":[124,1]
,"=a_literal_value":[124,1]
,"a_literal_value":[124,1]
,"<_literal_value":[124,1]
,"line":[124,1,154,3,156,1,187,1,189,1,193,1,216,1,219,2,222,2,226,1,243,1,246,2,260,3,262,5,265,2,273,4,274,2,275,2,276,1,280,1,290,2,291,1,340,1,341,1,364,2,369,1,402,1,407,3,410,1,440,1,479,1,488,3,489,5,492,2,528,3,530,1,544,1,546,1,547,2,548,1,553,10,560,1,575,1,597,2,598,1,600,2,611,1,619,2]
,":applyquerymode":[124,1]
,"portion":[124,1,276,1,410,1,438,1,451,1,548,1,559,1]
,":setqueryconjunct":[124,1]
,":cancelquerymode":[124,1]
,"reverts":[124,1,276,1,642,1]
,"upgraded":[124,1]
,"optionally":[124,1,154,2,330,2,341,1,368,1,465,1,479,1,514,1]
,"querymode":[124,3]
,"labelled":[124,1]
,"mark":[124,1,289,1,364,5,365,2,423,2,424,5,435,1,509,1]
,"(?)":[124,1]
,"switches":[124,1]
,"(v)":[124,1]
,"(x)":[124,1,340,5,355,1,372,5,553,1]
,"behave":[124,1,226,1,453,1,507,1]
,"differently":[124,1,365,1,478,1]
,"filter":[125,1,127,2,505,1,507,8,509,2,524,1,526,1,531,1,534,1,560,1,566,1]
,"prefixed":[126,1,127,1,130,1]
,"saw":[127,1,137,1,367,1,642,1,643,1]
,"adapt":[127,1,503,1]
,"resembling":[127,1]
,"i_emp":[127,1,232,1,233,3,243,6,250,2,252,1,258,4,271,3,273,6,280,4,282,1,316,3]
,"password":[127,1,133,1,137,3,144,1,157,4,223,1,237,3,316,3,539,1]
,"reconnect":[127,1]
,"converts":[127,1,339,1,548,1,596,1,597,1,615,1,618,2,627,3,630,1,636,1,641,1,642,2]
,"acts":[127,1,635,1]
,"go-between":[127,1]
,"dept_name":[127,1]
,"configured":[127,1,563,1,606,1]
,"auto":[127,1,157,5,161,1,181,1,258,1,265,1,300,2]
,"filtered":[127,1,509,1]
,":department":[127,1]
,"thing":[127,1,336,1,340,1,345,1]
,"selects":[127,1,301,1,316,2,481,2,489,1]
,"allowing":[127,1,175,1,218,1,243,1,376,1]
,"filtering":[127,1,454,3,499,1,502,1,505,2,507,3,508,1,509,2,517,1,558,2]
,"forcing":[128,1,130,2]
,"tie":[129,1]
,"calculation":[129,1,480,4,484,1,614,1]
,"limits":[129,1,332,1,386,2,401,1,404,1,531,2,534,1,563,1,566,1]
,"formula":[129,1,338,1,345,1,372,1,632,1]
,"tries":[129,1,459,2,479,4,485,12,487,3,488,1,489,1,491,1,557,2]
,"locate":[129,1,130,1,308,1,356,1,359,1]
,"acceptable":[130,1,489,1]
,"noticed":[130,1]
,"originate":[130,1,274,1]
,"naming":[130,1,212,1,557,1,586,2,587,1]
,"around":[130,1,169,1,257,1,263,2,479,2,480,1,481,2,484,2,603,1,622,1,631,1,643,1]
,"ambiguities":[130,1]
,"ambiguity":[130,1]
,"try":[131,1,289,2,485,2,517,3,527,1,534,1,557,2,618,2]
,"indicating":[131,1,246,1,330,1,336,2,338,2,365,1,369,2,377,1,403,1,409,1,410,1,418,2,640,1]
,"continue":[131,1,281,1,282,2,305,1,336,2,339,1,341,1,342,1,346,1,351,1,365,1,516,1]
,"exactly":[131,1,211,1,243,1,262,1,479,1,512,1,619,1]
,"communicating":[132,1]
,"drivers":[132,1,136,2]
,"establishes":[133,1,289,1]
,"channel":[133,1,134,1,217,1,218,3,237,1]
,"oracle10":[133,2,138,2]
,"scott\u002Ftiger@options":[133,1]
,"oracle9":[133,1]
,"oracle11":[133,1]
,"informix72":[133,1]
,"informix9":[133,1]
,"oledb":[133,1]
,"mssql":[133,1]
,"supported)":[133,1]
,"establish":[133,1,218,5,237,1,241,1,244,1,281,1]
,":getconnectionparams":[133,1]
,"obtaining":[133,1,492,2]
,"ilirefcounted":[133,1]
,":unlock":[133,1,374,2]
,":connect":[134,1]
,":isconnected":[134,1]
,"isconnected":[134,1]
,":disconnect":[134,1]
,"rolls":[134,1]
,"(uncommitted)":[134,1]
,"progress":[134,1,465,1,501,1,516,2]
,"ilisqlcursor":[135,11]
,"ilisqlcursor*cursor":[135,1]
,"(cursor":[135,1]
,"!=0)":[135,1,439,1,440,2,642,1]
,"(cursor)":[135,1]
,"(except":[135,1,216,1,328,1]
,":execute":[135,1]
,"(cursor->":[135,6]
,"=salary":[135,1]
,"*1.1":[135,1]
,"happy":[135,1]
,"days":[135,1,195,2,205,1,312,1,336,5,360,1,364,4,365,3,366,3,369,2]
,"cursor->":[135,5]
,"{while":[135,1]
,"&&cursor->":[135,1]
,"hastuple":[135,1]
,"getstringvalue":[135,4]
,"(1))":[135,1]
,"beginning":[135,1,179,2,243,1,248,1,267,1,346,1,422,1,425,1,438,1,439,1,489,1]
,"positioned":[135,4,331,2,340,1,356,1,364,2,379,1,410,1,417,1,419,1,489,1,516,1,517,1,557,1,575,1,631,1]
,":hastuple":[135,1]
,"opposed":[135,1]
,"exhausted":[135,1]
,"executed":[135,1,201,1,597,1]
,"conforms":[135,1,591,1]
,"(colno":[135,2]
,"value))":[135,2]
,"char*ilisqlcursor":[135,1]
,":getstringvalue":[135,1]
,"(ilnt":[135,1]
,":getintegervalue":[135,1]
,"ilfloat":[135,1,489,1]
,":getfloatvalue":[135,1]
,":getdoublevalue":[135,1]
,":getdatevalue":[135,1]
,":getbinaryvalue":[135,1]
,"byte":[135,1,156,2,158,1]
,"array":[135,1,402,1,403,1,508,1,537,1,553,1,577,2]
,"getbinaryvalue":[135,1]
,"(it":[135,1,479,1]
,"structure)":[135,1]
,"overwritten":[135,1]
,"value.getformatted":[135,1]
,"isnull":[135,2]
,"tests":[135,1]
,"testing":[135,1,225,1,226,1,230,1,259,1,266,1,284,1,291,1,294,1,539,1]
,"(rolled":[135,2]
,"back)":[135,2]
,"roll":[135,1]
,":commit":[135,1]
,":rollback":[135,1]
,"usage":[135,1,482,1,484,1,486,1,595,1]
,"forget":[135,1,419,1,595,1]
,"eventually":[135,1]
,"freed":[135,1,568,1]
,":getschema":[135,1]
,"=cursor->":[135,1]
,"getschema":[135,1]
,":releasecursor":[135,1]
,"executable":[136,2,525,1]
,"ildoracle":[136,2]
,"ildinformix":[136,2]
,"<ildblink\u002Fdblink.h>":[136,1]
,"<ilviews\u002Fdataccess\u002Fdbms\u002Fsession.h>":[136,1]
,"ilddbms*ilvcallback":[136,1]
,"customnewdbms":[136,1]
,"char*dbms":[136,1]
,"char*params)":[136,1]
,"ildnewdbms":[136,1,595,1]
,"(dbms":[136,1]
,"params)":[136,1]
,"{ilisqlsession":[136,1]
,":setnewdbmsfunction":[136,1]
,"(customnewdbms)":[136,1]
,"symbols":[136,1,202,2,203,2,204,5,205,2,206,1,207,1,208,1,211,1,282,3,309,2,310,1,311,4,312,1,313,1,529,1,598,1]
,"ilddb2":[136,1]
,"ildsybase":[136,1]
,"ildoledb":[136,1]
,"ildmssql":[136,1]
,"ildodbc":[136,1]
,"microsoft":[136,1,234,1,473,1,525,1,608,1,634,1]
,"platforms":[136,1,304,2]
,"(user":[137,1,244,1]
,"hard-coded":[137,1]
,":queryconnect":[137,1]
,"initializes":[137,1,557,1,610,1,637,1]
,"ilvabstractview*view":[137,1]
,"scott\u002F@options":[137,1,138,2]
,"queryconnect":[137,1]
,"iliquerypassword))":[137,1]
,":registersession":[138,3]
,"registers":[138,1]
,"setsessionname":[138,1]
,"mainsession":[138,3]
,"divided":[139,1,141,1,221,1,223,1,318,1,330,1,336,2,340,2,341,1,383,1,504,1,560,2,561,1,582,1]
,"groups":[139,1,488,1]
,"launched":[141,1,222,1,225,1,267,1,292,1,324,1,334,1]
,"closed":[141,1,216,1,223,1,260,1,290,1]
,"panes":[141,1,223,1]
,"pane":[141,1,144,3,151,1,159,1,223,5,244,1,283,2,288,1,322,4,323,2]
,"topmost":[141,1,482,1,486,1,489,1]
,"lists":[141,1,339,1,347,1,370,2,396,1,397,1,422,2,425,2,450,1,481,2,486,7,537,1,538,1,544,1,582,1]
,"user-created":[141,1,144,1,223,1]
,"presents":[141,2,358,1,453,1,546,1,551,1,559,1,597,1,631,1]
,"grapher":[141,2,143,3,159,1,193,6,222,1,223,9,234,1,305,1,451,1,454,1,460,7,462,11,465,1,466,3,467,1,468,1,472,5,473,2,474,3,480,3,482,1,488,2,489,2,491,2,493,1,494,2,495,2,497,3,498,3,499,1,500,2,502,1,504,1,505,2,506,2,507,1,510,2,511,1,512,1,515,3,516,3]
,"illustrated":[142,1,143,1,150,1,223,1,473,1,482,1,498,1,520,1,563,1,604,1]
,"appearance":[142,1,162,1,189,1,212,1,223,1,259,1,356,1,364,1,366,1,416,1]
,"(to":[142,1,223,1,511,1]
,"listing":[142,2,223,2,321,1,474,1]
,"popup":[142,2,189,4,289,5,291,3]
,"scrollable":[142,1,168,1,223,1]
,"choosing":[142,1,149,1,218,1,222,1,223,1,226,1,243,1,249,1,277,1,282,1,283,1,288,1,292,1,302,1,515,1,529,1,536,1]
,"(true":[142,1,171,1,223,1]
,"bar":[142,1,156,1,161,6,169,4,174,1,187,11,189,12,222,4,224,1,228,1,237,1,239,1,240,1,243,1,247,1,267,1,287,1,288,10,289,2,290,3,291,1,292,2,323,1,324,1,332,1,336,1,339,3,355,2,364,3,367,1,383,1,384,3,390,10,391,9,393,13,395,1,397,6,398,3,399,4,402,1,501,1,516,1,635,3,637,1]
,"periodically":[142,1,176,1,223,1,238,1,336,1,340,1,345,1,348,1]
,"datasource":[142,1,180,1,189,2,195,1]
,"parent\u002Fchild":[142,1,223,1]
,"toolbar":[144,1,223,3,226,4,227,2,244,1,245,1,254,1,260,1,262,2,265,1,266,1,267,2,283,1,284,2,290,1,294,1,316,2,332,1,340,2,474,1,526,2,527,2,534,1,536,1,537,1]
,"\u002Fdisable":[144,1,223,1,244,1]
,"trace":[144,1,223,1,244,1]
,"availability":[145,1]
,"none":[145,3,156,11,157,3,158,6,161,10,163,4,165,1,167,2,169,1,171,3,173,1,177,3,179,14,187,2,189,3,193,21,195,49,210,49,228,1,289,2,346,1,433,1,434,1,466,1,481,1,482,1,489,1,495,1,498,1,530,1]
,"explanation":[145,9,156,32,157,16,158,24,161,28,163,18,165,9,167,16,169,8,171,13,173,8,175,11,177,2,179,13,181,5,183,5,185,6,187,22,189,34,191,2,193,26,195,59,235,1,336,1,340,1,345,1,348,1,553,1]
,"tooltip":[145,2,325,1]
,"thickness":[145,1,334,2]
,"grayed":[145,2,289,2]
,"increases":[145,1,376,1,465,1,484,1]
,"border":[145,1,161,2,226,1,265,4,481,1,482,4,483,14,484,2,486,1,489,16,547,1]
,"surrounding":[145,1,334,2]
,"layer":[145,5,508,1,524,1,526,1,531,24,534,13,535,3,536,9,537,9,538,10,539,2,549,2,556,1,558,8,559,1,560,3,561,3,563,1,564,3,566,6,569,2,570,4,571,1,572,1,577,2,580,1,583,1,588,2,593,2,596,9,597,21]
,"placed":[145,1,153,1,157,1,163,1,171,2,173,1,193,1,208,2,216,1,257,1,263,1,288,1,453,1,460,1,481,6,482,8,483,4,484,1,486,4,487,1,488,2,489,18,498,1,516,1]
,"interactor":[145,2,332,2,356,4,426,1,427,13,428,4,429,2,430,3,431,2,432,4,433,2,434,2,435,3,436,24,460,1,564,1]
,"interactors":[145,1,332,6,352,1,356,3,426,3,427,5,436,11]
,"kind":[145,1,361,3,402,1,409,1,450,1,465,1,482,1,489,2,504,1,554,1,584,1,606,2,641,1]
,"inactive":[145,1,154,2,195,6]
,"focusable":[145,1]
,"receive":[145,1,454,1,501,1,504,1]
,"focus":[145,1,146,4,156,1,161,1,165,1,167,1,175,1,179,2,222,2,226,4,245,1,259,1,262,15]
,"six":[146,1,156,1,181,1,187,1,189,1,193,1,201,1,211,1,223,1]
,"ilidbchart":[146,1]
,"descriptions":[146,1,234,1]
,"right":[146,1,154,1,156,1,157,3,158,1,163,1,165,1,167,1,169,1,171,3,183,1,187,3,189,4,203,3,208,3,215,1,218,1,222,2,237,1,242,1,243,3,246,1,252,1,253,1,255,2,260,3,263,1,265,3,271,2,288,4,289,1,299,1,300,1,310,3,322,1,324,1,331,1,333,1,336,3,339,2,341,2,350,1,369,1,383,1,386,1,402,1,413,2,430,2,479,1,481,2,482,4,483,4,486,3,487,1,489,5,498,3,529,1,577,1]
,"generic":[146,1,179,1,189,1,193,1,222,1,226,1,260,1,283,3,284,1,324,1,342,1,453,1,454,4,463,6,470,1,477,5,481,5,489,5,492,5,495,5,498,5,502,1,503,2,512,1,516,3,584,1,643,1,644,1]
,"action":[146,1,222,1,332,1,427,4,428,1,429,1,430,1,431,1,432,1,433,7,434,1,435,6,568,3]
,"secondary":[146,1,179,1,189,1,193,1,330,1,531,1,558,1]
,"receives":[146,1,513,1]
,"loses":[146,1]
,"chooser":[147,3,148,4,149,5,150,4,161,4,163,2,179,3,193,5,261,3,264,4]
,"foundry":[148,1]
,"match":[148,1,245,1,254,1,260,1,339,1,597,1]
,"disk":[149,1,534,1]
,"rgb\u002Fhsv":[149,1,261,1,264,1]
,"wheel":[149,1,261,1,264,1]
,"rgb":[149,1,261,1,548,1]
,"=red":[149,1,261,1]
,"hsv":[149,1,261,1]
,"=hue":[149,1,261,1]
,"saturation":[149,1,261,1]
,"lower-right":[149,1,261,1,264,1,584,1,590,1]
,"rectangle":[149,1,183,2,256,1,257,5,261,1,263,1,264,1,379,4,380,3,417,1,418,1,423,1,454,1,466,13,484,2,498,1,513,2,527,1,553,1,563,2,572,1,597,6,635,1]
,"image":[150,1,171,1,183,2,187,3,189,2,257,1,264,1,541,1,542,1,560,2,573,1,581,1,584,4,585,3,586,2,590,8,591,1,604,1,607,1,612,1]
,"unix":[150,1,227,1,303,1,304,1,305,1,306,1,473,2,525,1,608,1,634,1]
,"(windows)":[150,1]
,"(unix)":[150,1]
,"gadget-icon":[151,1,153,1,158,1]
,"double-clicking":[153,1,158,1,216,1,226,1,271,1,324,1,334,1]
,"closes":[154,1,156,1,157,4,158,1,250,1,256,1]
,"owner":[154,1,316,2]
,"removes":[154,2,243,1,375,1,481,1]
,"synchronize":[154,2,157,1]
,"differences":[154,2,157,4,212,1,483,1,484,1]
,"representations":[154,1,216,1,219,1,243,1,331,2,332,1,339,1,354,2,355,6,360,3,362,1,363,1,364,1,365,2,367,1,368,1,370,1,379,3,382,1,383,2,400,1,402,1,404,1,407,3,421,3,424,3,440,1,476,1]
,"concerns":[154,1]
,"confirm":[154,1,157,1,161,3,175,5,189,1,536,1]
,"elements":[155,2,157,1,189,1,235,1,242,1,257,2,316,1,324,1,331,2,359,1,379,2,408,3,417,3,423,1,582,1,583,1,612,1]
,"element":[155,1,156,2,157,1,443,7,597,1]
,"checkbox":[155,2,157,1,171,1]
,"prevent":[155,1,158,1,247,1,294,1,516,1,567,1]
,"refers":[156,1,330,3]
,"(select":[156,1]
,"(operation":[156,1]
,"establishing":[156,2,157,1]
,"avg":[156,2]
,"min":[156,2,195,2,336,2,338,1,340,1,345,1,350,1,351,1,377,2]
,"max":[156,2,157,1,163,1,195,2,210,1,281,1,336,2,338,1,339,1,340,1,345,1,350,1,351,1,377,2]
,"performs":[156,2,377,1,449,1,462,1,596,1,597,1,635,1]
,"grouped":[156,2,293,1,596,2,597,2]
,"asc":[156,1,247,1,253,1,281,1]
,"desc":[156,1]
,"(no=random":[156,1]
,"asc=ascending":[156,1]
,"desc=descending)":[156,1]
,"determines":[156,1,187,4,189,2,224,1,463,1,479,1]
,"leftmost":[156,1,482,1,486,1]
,"priority":[156,1,332,1,436,1,489,13]
,"further":[156,2,248,3,337,1,476,1,481,3,482,2,484,2,486,1,533,1,548,1,643,1]
,"restrict":[156,2,248,2]
,"prefix":[156,1,206,1,273,1,313,1]
,"replaced":[156,1,203,1,204,1,207,1,240,1,252,1,310,1,311,1,375,4,412,1,586,1]
,"=the":[156,4,157,6,158,8,161,10,163,4,165,4,167,4,169,8,171,2,173,4,175,2,179,2,183,2,185,2,187,12,189,14,193,2]
,"=column":[156,2,157,1,161,2]
,"used.)":[156,1,158,1]
,"center":[156,1,158,1,163,1,165,1,167,1,171,1,183,2,187,1,479,1,481,3,482,4,483,2,489,4,517,1,602,1,606,2,613,4,619,2,622,1,632,2]
,"aligned":[156,1,158,1,252,2,255,3,479,1,482,3,486,1,489,1,572,1]
,"=prevents":[156,1,158,3]
,"=allows":[156,1,158,4]
,"referring":[156,1,158,1,379,1,577,1]
,"=can":[156,3,158,3,163,3,167,3]
,"=yes":[156,1,157,1,158,1,163,1,167,1,175,1]
,"enough":[156,1,158,1,163,1,167,1,332,1,380,1,484,2,497,1,517,1,537,1]
,"=cannot":[156,1,158,1,163,1,167,1]
,"pressing":[156,2,245,1,251,1,289,2]
,"navigation":[156,1,175,3,457,1]
,"=duplicate":[157,2]
,"merged":[157,1,553,1]
,"intact":[157,1]
,"concurr":[157,1]
,"(concurrency":[157,1]
,"control)":[157,1]
,"resubmitted":[157,1]
,"=selected":[157,1]
,"below)":[157,1,162,1,218,1,610,1]
,"implied":[157,1,443,1]
,"=all":[157,2]
,"=after":[157,1]
,"=commit":[157,1]
,"programming)":[157,1]
,"=each":[157,1]
,"verification":[157,1]
,"=row":[157,1,161,2]
,"=data":[157,2]
,"recomputes":[157,1]
,"submitting":[157,1]
,"recompute":[157,1]
,"nulls":[157,2]
,"increased":[157,1,517,1]
,"=when":[157,2,161,1]
,"vars":[157,1]
,"packaged":[157,2]
,"native":[157,1]
,"=no":[157,1,175,1]
,"greatly":[157,1,213,1,543,1]
,"unlimited":[157,1,316,1]
,"conjunct":[157,1,276,1]
,"dbms":[157,2,213,1,215,1,217,1,218,4,237,2,315,1]
,"(custom)":[157,2]
,"forces":[157,1,619,1]
,"requested":[157,1,386,3,539,1]
,"owned":[157,1]
,"<-removes":[157,1]
,"confirming":[157,1]
,"commands":[157,1,218,2,222,5,243,1,305,1,306,2,527,2,534,2]
,"tables)":[157,1,216,1,257,1]
,"(these":[157,1]
,"displayed.)":[157,1]
,"press":[157,1,225,1,226,1,246,8,247,1,252,1,255,1,262,1,272,1,273,1,275,1,282,1,289,1,291,3,301,1]
,"something":[157,1]
,"partofkey":[157,1]
,"temporary":[158,1,250,3,252,1]
,"(seen":[158,1]
,"five":[158,1,167,1,171,1,179,1,316,2,336,1,364,1]
,"=only":[158,1,161,1,189,1]
,"enterupdate":[158,1]
,"preparedeletemode":[158,1]
,"entermodifiedstate":[158,1]
,"widths":[161,5,490,1,492,1]
,"ordering":[161,2,488,1,496,2,498,5,531,1,596,1]
,"=shows":[161,1,189,1]
,"=hides":[161,1]
,"=current":[161,2]
,"fit":[161,1,226,1,243,1,251,1,263,5,265,1,292,1,324,1,334,2,364,1,418,4,419,2,439,1,454,1,462,1,466,6,479,1,482,1,484,1,485,1,534,1,597,1]
,"proportional":[161,2,265,1,390,1,392,1,491,1,492,1]
,"resized":[161,1,222,1,226,1,257,1,265,4,273,1,334,1,418,2]
,"proportionally":[161,1,265,4]
,"=sorts":[161,1]
,"alphabetical":[161,1,247,3,281,1]
,"=does":[161,1,175,4]
,"prompted":[161,2,175,2,237,1]
,"=user":[161,1]
,"(f9":[161,1]
,"=refresh":[161,1]
,"height":[161,6,171,1,187,1,195,2,222,1,260,1,334,2,418,1,466,4,480,1,482,1,484,1,485,1,486,1,493,3,496,1,497,1,498,3,560,1,577,1]
,"headers":[161,2,245,1,251,2,273,1]
,"=header":[161,2]
,"grid":[161,1,263,1,264,2,330,3,335,1,337,8,339,1,341,16,359,3,416,1,420,9,421,7,422,21,424,1,517,1,559,1,561,4,562,3,563,4,579,1]
,"=grid":[161,2]
,"=table":[161,3]
,"=cell":[161,2]
,"attempt":[161,1,217,1,224,1]
,"=selection":[161,2]
,"vertical":[161,1,169,3,187,5,189,5,332,1,386,2,440,1,453,1,479,1,482,3,483,1,487,1,489,12,492,2,498,7,547,2,619,1]
,"asneeded":[161,6]
,"=vertical":[161,3,187,1,189,1]
,"=horizontal":[161,3,187,1,189,1]
,"multi":[161,1,246,1]
,"=more":[161,1,189,1]
,"doubleclick":[161,1]
,"validatecell":[161,1]
,"entercell":[161,1]
,"quitcell":[161,1]
,"selectionchange":[161,1]
,"entryfield":[163,1]
,"relative":[163,1,171,1,187,1,189,1,224,1,330,1,331,3,336,1,338,1,379,1,380,1,407,2,409,4,421,1,424,1,479,5,481,1,482,1,486,8,488,2,489,4,491,1,557,1,560,2,632,1]
,"one-line":[164,1]
,"chars":[165,1,167,1]
,"editable":[165,1,167,1,187,1,189,1]
,"=focus":[165,2,167,2]
,"iliabstractcombobox":[167,1]
,"dbtext":[169,5]
,"scrollbars":[169,2,187,2,189,2]
,"hide":[169,5,187,4,189,4,228,2,534,1,540,1]
,"margins":[169,2,187,2,189,2,331,4,379,1,380,5,493,1]
,"scrollbar":[169,2,187,3,189,2]
,"dbtoggle":[171,5]
,"shape":[171,3,334,1,383,1,384,2,410,2,417,1,454,1,457,1,460,1,467,2,482,7,489,9,491,5,492,6,495,2,498,2,510,1,543,1,557,1,575,1,576,5,577,1,597,1,602,1,606,1,619,1,622,1,624,1,645,2]
,"radio":[171,2,274,3,289,1]
,"bounding":[171,1,183,1,331,8,364,1,365,1,367,1,368,1,369,1,379,9,380,2,394,1,498,1,511,1,512,1,513,3,553,3]
,"=checkbox":[171,1]
,"unchecked":[171,1]
,"toggleselector":[173,1]
,"navigating":[174,1]
,"=displays":[175,7,189,1]
,"<=go":[175,1]
,"<=previous":[175,1]
,"=next":[175,1]
,"=last":[175,1]
,"normal":[175,4,230,1,289,1,372,1,481,1,482,4,484,1,485,3,570,2]
,"gives":[175,1,187,1,189,1,211,1,318,1,364,1,437,1,481,2,485,1,498,1,518,1,583,1,601,1]
,"(makes":[175,1]
,"current)":[175,1]
,"(+)":[175,2]
,"confirmation":[175,1,189,1,317,1]
,"deleting":[175,1,317,1]
,"(-)":[175,2]
,"=do":[175,4]
,"=validate":[175,1]
,"=cancel":[175,2]
,"=apply":[175,1]
,"queries":[175,1,595,1,596,2,597,2]
,"(@)":[175,2]
,"empties":[175,1]
,"clearing":[175,1,283,1]
,"=display":[175,1]
,"(c)":[175,2,201,1,415,1,553,2]
,"puts":[175,1,552,1]
,"=query":[175,2]
,"dbtimer":[177,1]
,"multiplied":[177,1,204,1,311,1]
,"0.05":[177,1]
,"seconds":[177,2,195,1,205,2,312,2,409,4,464,2,585,2,615,1]
,"desired)":[177,1]
,"htmlreporter":[179,1]
,"classic":[179,3]
,"present":[179,1,208,1,284,1,512,1,529,1,537,1,553,2]
,"comments":[179,2,492,1,495,1,498,1,553,4,633,1]
,"documents":[179,1,295,1]
,"reportbegindocument":[179,1]
,"reportenddocument":[179,1]
,"reportfirstpageheading":[179,1]
,"reportfirstpagecontents":[179,1]
,"reportfirstpagefooting":[179,1]
,"reporttableheading":[179,1]
,"reporttabletitle":[179,1]
,"reporttablebeginentries":[179,1]
,"reporttableendentries":[179,1]
,"reporttablefooting":[179,1]
,"reportheading":[179,1]
,"reportbeginrows":[179,1]
,"reportrowcontent":[179,1]
,"reportendrows":[179,1]
,"reportfooting":[179,1]
,"reportlastpageheading":[179,1]
,"reportlastpagecontents":[179,1]
,"reportlastpagefooting":[179,1]
,"nothing":[181,6,201,1,228,1,289,1,377,1,517,2,640,1]
,"xmlnotificationexported":[181,1]
,"comes":[182,1,308,1]
,"dbpicture":[183,2]
,"stretched":[183,3]
,"(later)":[183,1]
,"dboptionmenu":[185,3]
,"dbstringlist":[187,3]
,"browse":[187,3,293,1,516,1,526,1,528,1,529,1,530,1,534,3]
,"full":[187,1,195,5,205,3,312,3,349,1]
,"=selects":[187,2]
,"tooltips":[187,1,189,2]
,"dropped":[187,1,189,1,244,1]
,"images":[187,1,189,2,439,1,543,1,572,2,583,1,584,1,586,2]
,"indicated":[187,1,189,1,338,1,339,1,367,1,529,1,596,1,633,1]
,"frames":[187,1,189,1,572,1,582,1,583,1]
,"dbtreegadget":[189,1]
,"child":[189,3,339,1,383,1,395,10,396,4,397,8,398,4,399,4,480,1,482,6,486,12]
,"ask":[189,1,482,1,495,1,498,1]
,"edition":[189,2,598,1]
,"desired":[189,1,216,3,219,1,220,1,226,1,237,1,246,3,386,1,459,1,469,1,486,1,488,2]
,"sorting":[189,1]
,"=lines":[189,4]
,"root":[189,1,339,1,340,9,341,1,342,1,453,1,478,1,479,6,480,7,481,41,482,4,483,1,484,1,485,7,486,1,489,1,517,1]
,"roots":[189,7,481,4,485,5]
,"expanded":[189,2,244,1]
,"visibly":[189,1]
,"larger":[189,1,380,1,482,2,488,1,489,3,498,1,517,1,537,1,569,1,586,1,643,1]
,"=there":[189,1,195,1]
,"indentation":[189,1]
,"distance":[189,1,260,1,265,1,482,4,483,2,484,3,489,9,492,1,498,6,606,1,613,3]
,"incoherenttreedata":[189,2]
,"deleteitem":[189,2]
,"insertchilditem":[189,2]
,"insertsiblingitem":[189,2]
,"edititem":[189,2]
,"ilitreegadget":[189,1]
,"shrinked":[189,1]
,"abort":[189,2]
,"dadget":[190,1]
,"chartgraphic":[191,1]
,"twelve":[191,1]
,"layout":[191,1,318,1,324,1,331,7,334,1,352,2,367,4,368,5,369,1,370,1,378,5,379,5,380,2,381,4,409,1,451,12,452,5,453,15,454,40,455,31,456,4,457,6,458,7,459,21,460,5,461,8,462,27,463,7,464,1,465,3,466,10,467,8,468,8,469,6,470,1,471,4,472,16,473,11,474,10,475,9,476,21,477,13,478,21,479,28,480,12,481,43,482,22,483,22,484,25,485,19,486,25,487,11,488,10,489,70,490,7,491,8,492,18,493,7,494,9,495,20,496,6,497,6,498,34,499,5,500,34,501,16,502,3,503,7,504,18,505,4,506,4,507,2,508,2,509,1,510,2,511,1,512,8,514,1,515,2,516,32,517,35,556,1]
,"miscellaneous":[191,1,324,1,332,4,342,1,383,1,407,1]
,"porperties":[191,1]
,"(from":[193,1,336,1,369,1,487,1,616,2]
,"oriented":[193,4,349,1,354,3,365,1,369,2,413,7,489,2,543,1,547,2,548,2]
,"black":[193,1,274,1,386,1,480,1,526,1,530,1]
,"white":[193,1,195,1,364,2,377,1,386,1,392,2,393,3,397,3,402,1,403,2,564,1,581,1]
,"straight":[193,1,340,1,410,1,489,1]
,"orientation":[193,2,329,2,354,1,369,1,413,16,480,1,548,2]
,"propagate":[193,2,195,2,376,3]
,"rename":[193,1]
,"renamed":[193,1,595,2]
,"(are)":[193,1]
,"nodemoved":[193,1]
,"preparedeleteobject":[193,1]
,"eleven":[195,1]
,"resource":[195,8,222,1,261,1]
,"light":[195,4,484,1]
,"usages":[195,1]
,"minimum":[195,2,330,1,332,2,336,13,338,6,340,3,345,2,346,2,349,1,350,4,351,3,365,1,368,2,369,3,370,5,372,5,377,6,403,1,407,3,411,1,413,1,414,8,438,1,439,1,457,1,487,2,492,3,566,1,638,1,639,1]
,"constraint":[195,11]
,"capacity":[195,4]
,"costraint":[195,2]
,"destination":[195,1,487,1,490,3,491,1,492,3,507,1,526,4,537,2]
,"relation":[195,2,215,1,222,1,277,1,285,1,455,1,490,1,619,1]
,"stops":[195,2,481,2,489,2,492,1,517,1]
,"year":[195,3,205,4,312,4]
,"1998":[195,1]
,"month":[195,4,205,7,282,1,312,7]
,"months":[195,1]
,"january":[195,1,205,2,312,2]
,"=full":[195,1]
,"=short":[195,1]
,"week":[195,2,205,4,312,4,335,1,336,5,339,1,360,4,364,7,365,5,366,2,369,2]
,"hour":[195,4,205,4,312,4,347,1,411,1]
,"minutes":[195,3,205,2,312,2,409,2,411,1,615,1]
,"hours":[195,2,347,2,348,3,349,1,350,1,351,1,409,3]
,"unit":[195,8,330,1,336,5,346,1,364,2,366,1,410,4,411,2,556,1,558,2,601,2,613,1,619,4,626,5,627,5,628,2,629,4,630,6,641,1]
,"units":[195,1,336,1,364,2,409,1,411,3,636,1]
,"day":[195,5,205,6,312,6,336,4,339,1,360,3,364,6,365,3,369,1]
,"weekday":[195,1]
,"minute":[195,2]
,"greater":[195,1,248,4,275,3,339,1,364,1,377,1,392,1,492,2,528,2,564,1]
,"exclude":[195,1,454,1]
,"monday":[195,1,336,1,366,2]
,"sunday":[195,1,366,1]
,"ignore":[195,1,218,1,265,1,597,1]
,"delimiter":[195,2,423,1,424,3,425,1,443,1,447,2]
,"darkgreen":[195,1]
,"curves":[195,1,340,1,342,1]
,"gray":[195,1]
,"constraintdoubleclicked":[195,1]
,"precedencedoubleclicked":[195,1]
,"scalenumericlabel":[195,1]
,"str":[197,3,544,2,572,6]
,"\u002F\u002Fappend":[197,1]
,"<<\u0022":[197,1,377,8]
,"\u002F\u002Fconvert":[197,1,199,1]
,"char*ptr":[197,1]
,"=str":[197,1]
,"\u002F\u002Fquery":[197,1]
,"iluint":[197,1,364,1,366,1,373,1,377,2,439,1,440,2,489,1,492,5,498,5,501,1,504,10,506,7,577,1,597,1]
,"len":[197,1]
,"=str.length":[197,1]
,"transparently":[197,1,504,2]
,"makes":[197,1,215,1,216,1,289,1,383,1,467,1,468,1,503,1,528,1,534,1,576,1]
,"(ilistring&dest":[197,1,200,1,201,1]
,"iliformat&fmt)":[197,1]
,"floating":[198,2,336,1,346,1,365,1,366,1,369,1,446,1,447,1,547,1]
,"internally":[198,1,213,1,214,1,383,1,394,1,486,1,504,1,505,1,508,1]
,"machine-dependent":[198,1]
,"dec":[198,1,201,1]
,"=somefield->":[198,1,200,1]
,".asdecimal":[198,1]
,"somefield->":[198,1,199,1]
,"(dec":[198,1]
,"(0.5))":[198,1]
,"\u002F\u002Finitialize":[199,1,516,1,557,1]
,"dt.setyear":[199,1]
,"(1998)":[199,1]
,"dt.setmonth":[199,1]
,"(6)":[199,1,410,1]
,"dt.setmonthday":[199,1]
,"=dt":[199,1]
,"(val)":[199,1,553,1]
,"ilvvalue":[199,1]
,"user-defined":[200,1,336,2,338,1,377,1,453,1,454,6,464,1,466,1,469,3,492,1,494,1,496,1,497,1]
,"aliasing":[200,1]
,"dates":[200,1,205,1,209,1,282,1,312,1,411,1,446,1,447,1]
,"myformat":[200,3]
,":addalias":[200,2,201,1]
,"ilinumberformattype)":[200,1]
,"char*txt":[200,1]
,"=val.getformatted":[200,1]
,"txt)":[200,1]
,":setdecimalpoint":[200,1]
,":setthousandsseparator":[200,1]
,":setcurrencysymbol":[200,1]
,"iliformatipl":[200,4]
,"<ctype.h>":[200,1]
,"<ilviews\u002Fdataccess\u002Fformat.h>":[200,1]
,"char*myformatalias":[200,1]
,"fancyformat":[200,5]
,"char*myformatname":[200,1]
,"\u002F\u002Fthis":[200,1]
,"reverses":[200,1]
,"alphabetic":[200,1]
,"\u002F\u002Fcharacters":[200,1]
,"lowercase":[200,1,203,1,204,1,205,1,208,4,310,1,312,1]
,"uppercase":[200,1,203,1,204,1,205,1,208,4,310,1,312,1]
,"\u002F\u002Fvice-versa":[200,1]
,"(myformatname)":[200,1]
,"iliformattype":[200,1]
,"gettype":[200,1]
,"ilistringformattype":[200,1]
,"formatstring":[200,1]
,"char*src)":[200,1,201,1]
,"(src)":[200,1]
,"(iseditmodeon":[200,1]
,"dest":[200,4,201,1]
,"<<src":[200,1,201,1]
,"(*src)":[200,3]
,"(isalpha":[200,1]
,"(*src))":[200,2]
,"(isupper":[200,1]
,"<<(char)":[200,2]
,"tolower":[200,1]
,"toupper":[200,1]
,"<<*src":[200,1]
,"src":[200,1]
,":addcustomformat":[200,1]
,"(new":[200,1,201,1,364,3,369,1,402,2,415,1,549,1,553,1,560,1]
,"(myformatalias":[200,1]
,"myformatname":[200,1]
,"ilistringformattype)":[200,1]
,"\u0022-\u0022":[201,2]
,"separates":[201,1]
,"pair":[201,1,392,1,393,1,487,1,553,1]
,"sufficient":[201,1,485,1,536,1]
,"fortunately":[201,1,458,1]
,"(manages":[201,2]
,"time)":[201,1,478,1]
,"only)":[201,1]
,"circumstances":[201,1,489,1]
,"exclusively":[201,1,532,1,576,1,580,1,583,1]
,"date-time":[201,2]
,"time-only":[201,1]
,"thought":[201,1]
,"<wctype.h>":[201,1]
,"<ilviews\u002Fdataccess\u002Finpmask.h>":[201,1]
,"char*mymaskname":[201,1]
,"mymask":[201,6]
,"1899":[201,1]
,"char*datepart":[201,1]
,"1-1-1901":[201,1]
,"(mymaskname)":[201,1]
,"_format":[201,3]
,"{setmaxcharmask":[201,1]
,"(8)":[201,1]
,"unformat":[201,1]
,"(src":[201,1]
,"&&*src)":[201,1]
,"<<datepart":[201,1]
,"isvalidchar":[201,1]
,"pos":[201,3]
,"wchar_t":[201,3]
,"editmode":[201,1]
,"=iltrue)":[201,1]
,"(isfixchar":[201,2]
,"(pos))":[201,1]
,"==l":[201,1]
,"iswdigit":[201,1]
,"isfixchar":[201,1]
,"pos)":[201,1]
,"(pos":[201,1]
,"==2":[201,1]
,"==5)":[201,1]
,"filterchar":[201,1]
,"(pos)":[201,1]
,"iliformat&getvalueformat":[201,1]
,"initialization":[201,1,303,1,308,2,469,1,639,2,640,1,643,3,644,1]
,":addcustommask":[201,1]
,"mymask)":[201,1]
,"ilidbfield*fld":[201,1]
,"(m)":[201,1]
,"specifications":[202,1,204,1,205,1,207,1,209,1,216,1,311,1,312,1,486,1,543,1,553,1,557,1]
,"<characters":[203,1,205,1]
,"symbol":[203,3,204,2,205,2,206,1,246,1,282,2,289,2,310,2,311,1,312,1,313,1,528,1]
,"@placeholder":[203,1,310,1]
,"&placeholder":[203,1,310,1]
,"scanning":[203,2,310,2]
,"<forms":[203,1,310,1]
,"<@>":[203,1,310,1]
,"<@@>":[203,1,310,1]
,"!>@<forms":[203,1,310,1]
,"!>@<@@@>":[203,1,310,1]
,"&&&&&&\u201C":[203,1]
,"formsdata":[203,1,310,1]
,"@@@@@@\u201C":[203,1]
,"@symbols":[203,1,310,1]
,"spaces":[203,1,310,1]
,"currency":[204,1,282,6,311,1]
,"amounts":[204,1,311,1]
,"placeholder":[204,6,205,27,208,28,311,6,312,27]
,"digit":[204,3,208,13,311,3]
,"thousands":[204,3,208,1,282,2,311,3]
,"separator":[204,3,205,2,208,5,282,4,291,2,311,3,312,2,446,1]
,"percentage":[204,1,311,1,390,2,392,2,482,13,483,1,484,1]
,"exponent":[204,5,208,2,311,5]
,"negative":[204,1,311,1,481,1,489,3,498,1,581,1]
,"100":[204,1,248,1,311,1,390,1,392,1,398,1,403,2,480,1,482,3,559,1,564,1,627,2]
,"zeros":[204,1,311,1]
,"1234.567":[204,2,311,2]
,"234.57":[204,2,311,2]
,"1234.5":[204,2,206,3,311,2,313,3]
,"234.50":[204,1,311,1]
,"234.5":[204,1,206,3,311,1,313,3]
,"1.5":[204,1,311,1]
,"0,000.00":[204,1,311,1]
,"001.50":[204,1,311,1]
,"1234":[204,3,311,3]
,"1.23":[204,3,311,3]
,"e-00":[204,1,311,1]
,"e03":[204,1,311,1]
,"e-#":[204,1,311,1]
,"0.5432":[204,1,311,1]
,"54.3":[204,1,311,1]
,"country":[204,1,311,1]
,"placeholders":[204,2,205,1,207,1,208,3,311,2,312,1]
,"output":[204,1,206,1,311,1,313,1,377,3,473,1,571,1,608,1,628,1,630,1,639,1,640,1]
,"\u002Fplaceholder":[205,1,208,1,312,1]
,"(1-31)":[205,1,312,1]
,"(01-31)":[205,1,312,1]
,"ddd":[205,1,312,1]
,"(sun-sat)":[205,1,312,1]
,"dddd":[205,1,312,1]
,"(sunday-saturday)":[205,1,312,1]
,"ddddd":[205,1,312,1]
,"(ex":[205,3,312,3]
,"8\u002F3\u002F96":[205,1]
,"dddddd":[205,3,312,3]
,"august":[205,1,312,1]
,"1996)":[205,1,312,1]
,"(1-7)":[205,1,312,1]
,"(1-53)":[205,1,312,1]
,"(1-12)":[205,1,312,1]
,"(01-12)":[205,1,312,1]
,"mmm":[205,1,312,1]
,"(jan-dec)":[205,1,312,1]
,"mmmm":[205,2,312,2]
,"(january-december)":[205,1,312,1]
,"quarter":[205,1,206,2,312,1,313,2,438,1]
,"(1-4)":[205,1,312,1]
,"(1-366)":[205,1,312,1]
,"(00-99)":[205,1,312,1]
,"yyyy":[205,2,312,2]
,"(1970-2099)":[205,1,312,1]
,"(0-23)":[205,1,312,1]
,"(00-23)":[205,1,312,1]
,"(0-11)":[205,1,312,1]
,"(00-11)":[205,1,312,1]
,"(0-59)":[205,2,312,2]
,"(00-59)":[205,2,312,2]
,"ttttt":[205,1,312,1]
,"05:32:12)":[205,1,312,1]
,"jan":[205,5,312,5]
,"d\u002Fm\u002Fyy":[205,1,312,1]
,"12\u002F1\u002F96":[205,1,312,1]
,"1996":[205,3,312,3]
,"separators":[205,1,208,1,312,1]
,"vary":[205,1,312,1,457,1]
,"country)":[205,1,312,1]
,"mdy":[205,1,312,1]
,"english":[205,1,312,1]
,"dmy":[205,1,312,1]
,"french":[205,1,312,1]
,"janvier":[205,1,312,1]
,"slash":[206,1,313,1]
,"abc":[206,1,276,1,313,1]
,"enclose":[206,1,313,1]
,"quotes":[206,1]
,"considered":[206,1,313,1,332,1,340,1,346,3,349,2,362,2,367,1,368,1,369,2,370,3,372,8,376,2,377,1,383,1,394,1,395,3,400,3,403,1,436,1,481,1,510,2,512,1,547,1]
,"frs":[206,5,313,5]
,"\u005Cf\u005Cr\u005Cs":[206,1,313,1]
,"jul":[206,1,313,1]
,">@<rw":[206,1,313,1]
,"talks":[207,1]
,"principles":[207,1,224,1,473,1]
,"alphanumeric":[208,1,446,1]
,"letter":[208,15,275,3,289,1]
,"[xy":[208,1]
,"{xxxx}":[208,1]
,"braces":[208,1]
,"{and":[208,1]
,"&xxxx&placeholder":[208,1]
,"\u201C&\u201D":[208,1]
,"(@#":[208,1]
,"@to":[208,1]
,"@and":[208,1]
,"ignored":[208,1,479,1,480,1,486,1,576,1]
,"\u005Cthe":[208,1]
,"(not":[208,1,257,1]
,"one)":[208,1]
,"ignores":[208,1,481,1,486,1,489,1,507,1]
,"<!>":[208,1]
,"double-quotes":[208,1,313,1]
,"representing":[209,1,329,1,336,2,339,1,340,3,343,2,344,1,347,3,349,1,362,2,363,1,364,1,365,1,369,1,372,3,383,5,402,2,406,1,410,3,415,1,422,4,425,4,493,1,520,1,544,1,622,1]
,"final":[209,1,223,1,263,1,268,1,294,1,339,2,428,1,478,1,479,1,481,1,490,1,491,1,492,4]
,"000.0":[209,5]
,"123.8":[209,2]
,"12345.789":[209,1]
,"(12)":[209,2,410,1]
,"345.789":[209,1]
,"12345.78":[209,1]
,"345.78":[209,1]
,"12345":[209,2]
,"12345.9999":[209,2]
,"mmm\u002Fdd\u002Fyyyy":[209,2]
,"mmm\u002Fdd\u002Fyy":[209,2]
,"mm\u002Fdd\u002Fyy":[209,2]
,"mm\u002Fdd\u002Fyyyy":[209,2]
,"time.)":[209,1]
,"hh:mm:ss":[209,1]
,"arguments":[210,2,504,1,640,1]
,"argument":[210,2,294,1,467,1,468,1,469,1,501,1,507,1,508,1,513,1,515,1,547,1,557,1,558,1,586,1,591,1,597,2,610,1,612,1,640,11]
,"ili_undefinederror":[210,1]
,"ili_unexpectederror":[210,1]
,"ili_incorrectvalueerror":[210,1]
,"ili_tableisreadonlyerror":[210,1]
,"ili_duplicaterowerror":[210,1]
,"ili_nullcolumnerror":[210,1]
,"ili_columnlengtherror":[210,1]
,"ili_invalidrownumber":[210,1]
,"ili_invalidtablebuffer":[210,1]
,"ili_incorrecttablealias":[210,1]
,"ili_invalidparametertype":[210,1]
,"ili_undefinedquery":[210,1]
,"ili_rowscountlimitexceeded":[210,1]
,"ili_columntypemismatch":[210,1]
,"ili_columnnotinquery":[210,1]
,"ili_fetchpendingerror":[210,1]
,"ili_sqlrownotfounderror":[210,1]
,"ili_sqlrowchangedsincefetch":[210,1]
,"ili_undefinedsqlsessionerror":[210,1]
,"ili_cannotallocatesqlcursorerror":[210,1]
,"ili_groupedqueryisreadonlyerror":[210,1]
,"ili_notallcolumnsareupdatableerror":[210,1]
,"ili_databaserowisnotuniqueupdateer":[210,1]
,"ror":[210,2]
,"ili_databaserowisnotuniqueselecter":[210,1]
,"ili_alreadyconnectederror":[210,1]
,"ili_notconnectederror":[210,1]
,"ili_tablewithoutcolumnserror":[210,1]
,"ili_tablewithoutnameerror":[210,1]
,"ili_columnwithoutnameerror":[210,1]
,"ili_columnwithouttypeerror":[210,1]
,"tutorial":[211,1,216,1,217,1,222,1,224,3,231,1,233,2,236,1,237,1,238,3,243,3,268,1,282,2,289,3,295,1,296,1,298,1,302,1,314,2,315,1,316,1,518,1]
,"learn":[211,1,256,1,318,1,335,1,339,1,343,1,456,1,461,1,479,1,487,1,490,1,493,1,496,1,524,1]
,"guides":[211,1,222,1,226,2,265,1,319,1]
,"step-by-step":[211,1,336,1,340,1]
,"designing":[211,1,259,1]
,"leading":[211,1]
,"procedures":[211,1,212,4,216,1,217,2,218,1,224,3,232,1,238,1,259,1,287,1,295,1,351,1,365,3]
,"aligning":[211,1,259,1,260,1,285,1]
,"forth":[211,1,266,1,557,1]
,"small":[211,1,246,1,268,1,274,1,294,1,334,1,339,1,380,1,434,1,482,2,484,1,485,1,487,3,488,1,489,1,492,1,517,1,528,1,529,2,531,2,534,2,537,2,558,1,563,1,598,1]
,"installation":[211,1,234,1,303,1,304,3,307,1,521,1,608,1,634,1]
,"gui":[212,1,213,2,215,1,226,1,259,1,321,1,332,1,336,1,340,1,554,1]
,"follow":[212,1,224,2,238,1,250,1,255,1,256,1,258,1,283,1,289,1,294,1,305,1,324,1,338,2,339,1,340,1,363,1,365,1,369,1,431,1,482,1,486,1,495,1,498,1,536,1,611,1,614,1]
,"architecture":[212,1,214,2,358,1,360,2,402,1]
,"connections":[212,1,217,2]
,"captures":[212,1]
,"running":[212,1,294,1,485,2,520,1,525,1,607,1,608,1,633,1,634,1]
,"platform":[212,1,227,1,234,1]
,"screens":[212,1]
,"conventions":[212,1]
,"essentially":[212,1,457,1,576,1]
,"graphic-based":[213,1]
,"building":[213,1,215,1,226,1,236,1,238,1,264,2,519,1,520,1]
,"basically":[213,1,489,1]
,"sends":[213,1]
,"(dbms)":[213,1,316,1]
,"heart":[213,1]
,"user-friendly":[213,1]
,"supplies":[213,1,543,1,560,1]
,"application-building":[213,1]
,"panel-creation":[213,1]
,"extensive":[213,1,215,1,284,1]
,"scores":[213,1]
,"viewed":[214,1,568,1]
,"viewpoints":[214,1]
,"externally":[214,1]
,"situated":[214,1,215,1]
,"component":[215,1,368,2,369,3,479,2,480,1,481,2,517,1,519,1,554,1]
,"suite":[215,1,519,1]
,"profiting":[215,1]
,"database-specific":[215,1,241,1,308,1]
,"furnished":[215,1]
,"1.1":[215,1]
,"entirely":[216,1,568,1]
,"launch":[216,1,221,1,223,1,234,1,321,2,322,1,336,1,340,1,345,1,348,1,474,3,525,1,608,1,634,1]
,"dbstudio":[216,1,234,3]
,"launching":[216,1,231,1,234,1,294,1,320,1,321,1,336,1,340,1,345,1,348,1,471,1,474,1,525,1]
,"ivfstudio":[216,1,234,1,321,1,474,1]
,"capabilities":[216,1,455,1,460,1]
,"enhance":[216,1,364,1,533,1]
,"data-source":[216,1,223,1]
,"computations":[216,1,454,1,611,1,623,1]
,"diagram":[216,1,503,1,577,2]
,"related":[216,1,293,1,327,1,328,1,330,2,335,1,338,4,339,1,346,1,356,1,394,2,418,1,457,1,461,1,490,1,507,1,517,1,537,1,545,1,549,1,553,1,559,3,560,1,568,3,598,1,601,1,619,1,621,1]
,"icon":[216,2,227,2,228,1,267,2,271,1,289,2,307,1,325,12,332,1,336,13,339,2,340,9,341,1,345,1,348,4,349,2,481,1,526,1,527,6,528,1,529,1,531,1,534,1,537,1,541,1,598,1,600,1]
,"places":[216,1,244,1,288,1,482,1,484,1,486,1,487,1,489,1,494,1,560,1]
,"presented":[217,1,324,1,369,1,549,1,557,1]
,"future":[217,1,227,1,316,1]
,"opened":[218,1,227,2,230,1,236,1,239,1,243,1,244,1,271,1,280,1,288,1,299,1,332,1,539,1]
,"filling":[218,2,332,2]
,"previously":[218,1,222,1,240,1,346,2,614,1]
,"established":[218,3]
,"besides":[218,1]
,"loaded":[218,1,224,1,227,1,332,1,340,1,520,1,524,2,526,4,527,1,529,2,533,1,534,3,536,1,537,4,542,1,549,1,556,1,560,3,562,2,563,1,564,4,566,1,567,2,568,4,571,1,572,3,592,1,597,1,635,2,637,1]
,"buffers":[218,1,224,2,243,1,332,1,534,1,637,1]
,"saved":[218,1,225,3,226,1,229,1,230,1,236,1,238,2,239,2,240,4,249,2,258,1,267,1,277,2,283,2,292,2,302,1,316,1,427,1,545,1,549,5,553,1,554,5,558,1,560,1,570,1,571,1,577,1,588,1,593,1,635,1]
,"asterisk":[219,1,243,1,253,1,409,1]
,"corner":[219,1,222,3,243,2,253,1,339,1,402,1,481,2,493,1,498,2,577,2,585,2,590,1]
,"areas":[222,1,331,7,332,1,379,8,380,3,606,3]
,"menu)":[222,2]
,"often-used":[222,1]
,"modes":[222,2,226,3,262,1,265,1,266,1,290,1,332,1,354,2,432,1,437,3,438,2,439,3,478,1,479,4,480,4,481,8,482,3,484,1,485,8,486,1,537,1]
,"chain":[222,1,226,2,259,1,262,10,630,3]
,"(own":[222,1]
,"focus)":[222,1]
,"pressed":[222,1,262,1,431,1]
,"attachments":[222,1,226,2,259,2,265,11,266,4,277,1,285,1,288,1,292,1]
,"attach":[222,1,226,1,277,1,285,1,289,1,290,1,291,1,292,1,336,1,422,1,436,2,462,4,472,1,473,1,480,1,488,1,489,1,491,1,494,1,497,1,528,1,529,2,530,1,545,1,554,1,557,1,635,5]
,"rectangular":[222,1,336,5,356,1,359,2,362,2,368,3,410,14,412,3,422,5,425,5,561,1,582,1]
,"(gadgets":[222,2]
,"application)":[222,1,289,1]
,"grapher)":[222,1,466,1]
,"top-right":[222,1]
,"maximize":[222,1,267,1]
,"minimize":[222,1,230,1,243,1,271,1,280,1,288,1,487,2,491,2,492,1,602,1]
,"rule":[222,1,507,1,515,1,575,1]
,"arc":[222,1,394,1,533,1,582,1]
,"alpha":[222,1]
,"antialiasing":[222,1]
,"upper":[222,1,223,1,244,1,283,1,288,1,322,2,323,1,339,2,370,1,464,1,577,1]
,"recognizes":[222,1,289,1,557,1]
,"procedural":[222,1]
,"together":[223,1,367,2,545,1,600,1]
,"reopened":[223,1]
,"dockable":[223,1]
,"illustration":[223,1,498,1]
,"composed":[223,1,330,1,339,1,353,1,383,2,392,2,393,2,394,1,396,1,397,4,408,1,417,2,420,1,423,1,453,1,492,1,520,1,537,1,538,1,598,1,607,1]
,"purchased":[223,1]
,"packages":[223,1,304,1,305,4,556,1,595,2]
,"arrow":[223,1,246,3,262,2,330,1,356,1,366,3,408,1,409,4,427,1,429,1,486,2]
,"integrate":[224,2,227,2,228,1,283,1,560,1]
,"notes":[224,1,243,1,289,1,332,1,402,1]
,"submenu":[224,1]
,"drop-down":[224,1,330,2,336,8,338,2,341,3,342,1,345,1,346,1]
,"numbered":[224,1]
,".iva":[225,3,229,1,249,1,258,1,277,1,283,1,292,1,294,3]
,"extension":[225,3,226,1,284,1,318,1,320,2,321,2,322,1,324,1,334,1,336,1,340,1,345,1,348,1,351,1,471,1,474,4,486,1,532,1,553,1,557,3,558,1,577,1,590,2,595,2]
,"valid":[225,1,227,1,316,1,482,5,483,1,489,5,492,1,495,1,498,2,536,1]
,"override":[225,1,450,2,464,1,465,1,466,1,467,1,468,1,469,1,500,2,515,1,557,1,560,1,586,1,596,1,597,1]
,"exit":[225,2,228,1,289,1,294,1]
,"separate":[225,1,227,1,340,1,356,1]
,"terminate":[225,1]
,"compiling":[225,1,307,1]
,"accessors":[225,1,644,1]
,"readers":[225,1,518,2,520,2,522,1,524,1,537,1,538,1,541,7,551,3,552,1,553,2,557,2,559,2,560,2,572,1,573,2,576,2,598,1]
,"wish":[225,1,257,1,262,1,273,1,552,1]
,"jsstudio":[225,2]
,"applicable":[226,2,316,1,481,1,489,1,492,1,495,1,498,1,528,1]
,"align":[226,2,255,1,260,4,285,1,612,1]
,"borders":[226,1,260,3,265,3,339,1,482,1,524,1,526,8]
,"align\u002Fdistribute":[226,1,260,1]
,"2-7":[226,1]
,"middle":[226,1,242,1,265,2,394,1,485,1]
,"guide":[226,1,265,5]
,"windowing":[226,1,266,1]
,"choice":[226,1,284,1,459,1,476,1,481,2,482,4,484,1,489,3,492,1,495,1,498,1,536,1]
,"ascii":[226,1,553,4]
,"(data":[227,1,293,1,355,5,438,1,443,1,490,1]
,"callbacks)":[227,1,291,1,324,1]
,"ms-windows":[227,1]
,"returning":[227,1,643,1]
,"declarations":[227,3]
,"ilvgraphiccallback":[227,2]
,"declares":[227,1,609,1,639,2]
,"invokes":[227,1]
,"body":[227,1]
,"letting":[227,1]
,"redefine":[227,1]
,"deselect":[227,1]
,"derive":[227,1,450,1,557,1]
,"erased":[227,1,325,1]
,"registering":[227,1]
,"(name":[228,1]
,"destroy":[228,1,507,1]
,"happen":[228,1,517,1]
,"<application>":[229,1,236,1,284,1,294,3]
,"processes":[230,1,642,1]
,"(.iva":[230,2]
,"(.ilv":[230,3,556,1]
,"(.h":[230,1]
,"(.cc":[230,1]
,"makefile":[230,1]
,"introd":[231,1]
,"uction":[231,1]
,"going":[231,1,232,1,235,2,237,1,238,1,242,2,247,1,252,2,253,1,255,2,256,1,258,1,260,1,261,1,262,3,264,1,267,1,269,1,270,1,272,1,273,1,275,1,278,1,279,1,281,1,282,1,283,1,286,1,287,1,288,1,297,2,301,1,336,8,338,1,339,3,340,3,341,7,345,6,346,2,347,2,348,3,349,2,362,1,364,4,365,2,369,1,370,1,372,1,377,2,402,1,436,3,440,2,463,1,526,1,528,1,529,1,532,1,533,1,534,2,535,1,536,1,537,1,538,1,557,1,639,1]
,"employdb":[231,1,232,3,235,1,236,2,238,1,241,1,242,1,247,1,267,3,277,1,285,1,292,1]
,"saving":[231,1,238,2,239,1,249,3,270,1,277,3,279,2,283,1,285,1,292,1,297,1,302,1,532,1,545,1,559,2,570,1]
,"opening":[231,1,238,1,240,1,246,1,249,1,277,1]
,"i_dept":[232,1,233,3,243,1,253,3,256,3,271,2,273,6,280,4,316,1]
,"major":[232,1,330,4,336,2,341,4,364,6,365,2,366,2,408,2,409,2,411,2,420,2,421,3,484,1]
,"3-5":[232,1]
,"quits":[232,1]
,"(employee)":[233,1,291,2]
,"(department)":[233,1]
,"sql2":[233,1]
,"(empno":[233,1]
,"(25)":[233,3]
,"(empno))":[233,1]
,"(deptno":[233,1]
,"(deptno))":[233,1]
,"programs>":[234,1]
,"wave>":[234,1]
,"program)":[234,1]
,"plug-ins":[234,2,321,3,336,1,474,3]
,"dbmdstud":[234,1]
,"-rogue":[234,2]
,"license":[234,6,521,1]
,"dbmdsql":[234,1]
,"dbmdgrap":[234,1]
,"-specific":[234,3]
,"dbmdgant":[234,1]
,"dbmdchart":[234,1]
,"dbmdchart30":[234,1]
,"old":[234,2,305,1,372,2,479,3]
,"dbmdinform30":[234,1]
,"install":[234,1,304,1,305,3,482,1,489,2,492,1,521,1,595,1,635,1]
,"(bin\u002Fdbstudio":[234,1]
,"start-up":[234,1,320,1]
,"subdirectory":[236,4,238,2]
,"testapp":[236,1]
,"employdb.iva":[236,2,267,1]
,"dataaccess":[237,1]
,"\u201C--**--\u201D":[237,1]
,"disappears":[237,1,247,1,252,1,258,2,290,1]
,"prefaced":[237,1]
,"idea":[238,1,336,1,340,1,345,1,348,1,510,1]
,"taking":[238,1,288,1,482,2,491,1,505,1]
,"reopen":[238,1]
,"filename.ilv":[238,1,556,1]
,"employee.ilv":[238,1,249,1,258,1,271,1]
,"empmgr.ilv":[238,1,269,1,277,1,280,1]
,"dpmaxsal.ilv":[238,1,278,1,283,1,288,1]
,"control.ilv":[238,1,286,1,292,1]
,"typed":[238,1,248,1,257,1,282,2,486,1]
,"edited)":[239,1]
,"replacing":[240,1,250,1,366,1,377,1]
,"redisplayed":[240,1]
,"begin":[241,1,280,1,351,1,358,1,577,1]
,"emp_ds":[241,2,242,1,243,5,245,4,247,2,252,3,253,2,255,2,256,1,258,3,271,2,272,1,273,1,280,1,282,2]
,"status_mds":[241,2,242,1,250,3,251,5,252,6]
,"dept_ds":[241,3,242,1,253,4,254,4,255,2,256,6,258,4]
,"icons":[242,1,324,2,325,2,482,1,484,1,598,2,600,1]
,"unnamed":[243,2]
,"room":[243,1,571,1]
,"earlier":[243,1,517,1,642,1]
,"filled":[243,1,261,1,332,2,384,3,385,1,386,1,387,2,388,1,389,2,390,2,391,3,392,1,393,2,394,3,417,1,418,1,423,1,440,1,486,1,531,1]
,"<-button":[243,1]
,"enlarge":[243,1]
,"deactivated":[243,1]
,"empno":[243,2,247,1,271,1,275,2]
,"(which":[243,1,487,2]
,"highlighted)":[243,1]
,"mistake":[243,1,273,1,291,1]
,"adjusting":[243,2]
,"expand":[244,1]
,"instantly":[244,1]
,"reflect":[245,1,375,1,376,1,439,1,554,1]
,"buttons)":[245,1]
,"@button":[245,2,246,1,258,1]
,"shift-tab":[246,1]
,"backwards":[246,1]
,"letters":[246,1,611,1]
,"up\u002Fdown":[246,1]
,"keys":[246,1,289,2,294,1,356,1,427,1,429,1]
,"anywhere":[246,1,262,1]
,"escape":[246,2]
,"right-arrow":[246,1]
,"dots":[246,1]
,"column\u002Frow":[246,1]
,"row\u002Fcolumn":[246,3,517,1,586,1]
,"adjacent":[246,1,487,1]
,"holding":[246,1,558,1]
,"shift":[246,1,332,2,354,1,438,3,439,8,631,1,632,3]
,"rows\u002Fcolumns":[246,1]
,"enabled)":[246,3]
,"ascending":[246,1,498,1]
,"open)":[247,1,250,1]
,"(ascending)":[247,1]
,"operators":[248,1]
,"expressions":[248,1]
,"<56":[248,1]
,"<=8979":[248,1]
,">=876":[248,1]
,"\u0027abcd":[248,1]
,"(all":[248,3,481,2]
,"abcd":[248,1]
,"\u0027a_b":[248,1]
,"character)":[248,1]
,"choices":[248,1,481,1,483,1]
,"200":[248,1]
,"2000":[248,1]
,"1000":[248,1]
,"blank":[248,1,553,1]
,"met":[248,1,458,1]
,"permanent":[250,1,252,1]
,"course":[250,1,315,1,461,1,516,1,560,1,614,1]
,"solution":[250,1,458,1,459,1,464,1,548,1]
,"anymore":[255,1,480,2,488,2,491,2,494,2,497,2]
,"buttons.)":[256,1]
,"rearrange":[256,1,453,1]
,"wanted":[256,1,577,2]
,"panel)":[257,1,283,1]
,"visible)":[257,1]
,"<go":[257,2]
,"(revert":[257,1]
,"state)":[257,1]
,"-delete":[257,1]
,"(same":[257,1]
,"lines)":[257,1]
,"the_dept":[258,2]
,"matches":[258,1,586,1]
,"=:the_dept":[258,1]
,"(department":[258,1]
,"finish":[259,1]
,"(employee.ilv":[260,1,267,1]
,"tops":[260,1]
,"shift-click":[260,1]
,"margin":[260,1,263,4,288,1,498,4]
,"fonts":[261,1]
,"(you":[261,1,263,1,267,1,336,1,517,1]
,"verify":[261,1,290,1,534,1]
,"field.)":[261,1]
,"top-left":[261,1,280,1]
,"colored":[261,1,341,1,544,1,546,1,548,2,553,1]
,"circle":[261,1,262,1,349,1,410,1,484,4,529,1,541,1,597,2]
,"chose":[261,1,294,1]
,"path":[262,1,306,1,307,6,457,2,473,1,560,4]
,"linking":[262,1,332,1,403,1]
,"due":[262,1,374,1,568,1]
,"arrows":[262,1,324,1,336,1,360,2,366,1,367,2]
,"releasing":[262,1,441,1]
,"tip":[262,1,479,1,481,4,482,2,485,13]
,"(but":[262,2,271,2,299,1,514,1]
,"filled-in":[262,1]
,"signifying":[262,1]
,"succession":[262,1,376,1]
,"section.)":[263,1]
,"perimeter":[263,1,531,1]
,"prompt":[263,2]
,"requesting":[263,1,536,1,537,1]
,"adjusts":[263,1,641,4,642,1]
,"correspond":[265,1,336,1,361,1,370,2,372,2,436,1,577,1,580,1,582,1]
,"weight":[265,1,492,2]
,"delimited":[265,1]
,"attachment":[265,2]
,"(fixed":[265,1]
,"elastic":[265,2]
,"fixed)":[265,1,467,1,468,1]
,"resizes":[265,1]
,"keeping":[265,1]
,"appearing":[265,1]
,"respective":[265,1,554,1]
,"attachements":[265,1]
,"half":[267,1,439,1]
,"minimized":[267,1]
,"tutorial.)":[267,1]
,"deactivate":[267,1,288,1]
,"invisible":[267,1,294,1,560,1]
,"addi":[268,1]
,"tional":[268,1]
,"practicing":[268,1]
,"learned":[268,1,295,1,339,1,342,1,351,1]
,"acquainted":[268,1]
,"empmgr_ds":[269,1,270,2,271,7,272,2,273,3,275,1]
,"joining":[270,1,273,1,280,1,619,1]
,"finishing":[270,1,277,1,279,1,285,1,287,1,292,1]
,"columns)":[271,1]
,"inner":[273,2,274,2,418,1,484,1]
,"employee\u2019s":[273,1]
,"reflects":[273,1]
,"placing":[273,1]
,"distinguishing":[273,1]
,"outer":[274,2,484,1]
,"(left":[274,1]
,"joined":[274,4]
,"dot":[274,1,446,1,600,1]
,"thomasson":[275,4]
,">=8":[275,1]
,"switching":[276,1,340,3]
,"_(implying":[276,1]
,"front":[276,1,336,16,337,2,338,2,339,1,340,4,341,2,342,1,345,3,349,1,350,1,391,1]
,"canceling":[276,1]
,"synthesized":[276,1]
,"practice":[277,1,285,1,292,1,351,1]
,"deptmaxsal_ds":[278,1,279,2,280,6,281,1,282,4,283,1]
,"i_dept.name":[280,1,281,2]
,"highest":[281,1,282,1,339,1,402,5,481,2,489,4,581,1]
,"departments":[281,1]
,"$currency":[282,1]
,"$3.14":[282,1]
,"word":[282,1]
,"whatever":[282,1,363,1,373,1,410,1,540,1,541,1,551,1,598,1]
,"numerous":[282,1]
,"placement":[282,1,493,1,494,1]
,"updating":[283,1,371,1,375,1,376,1,439,1]
,"ilvbutton":[283,3]
,"(deptmaxsal_ds)":[283,2]
,"deptmaxsal_ds)":[283,1]
,"2-4":[283,1]
,"successively":[283,1]
,"\u0022@select":[284,1]
,"scripting":[284,1,372,4]
,"intrinsic":[284,1]
,"loops":[284,1]
,"selectdeptmaxsal":[284,1]
,"alternative":[284,1,645,1]
,".js":[284,1]
,"runner":[284,1,294,3]
,"recommend":[284,1,308,1,622,1]
,"browser":[287,1,293,6]
,"ilvmenubar":[288,1]
,"flush":[288,2]
,"right-most":[288,1]
,"ampersand":[288,1]
,"(&file":[288,1]
,"&menu_file":[288,1]
,"multilingual":[288,1]
,"localize":[288,1]
,"languages":[288,1]
,"ilvpopupmenu":[289,3,290,1,291,3]
,"---separator---to":[289,1]
,"---separator---item":[289,1]
,"underlined":[289,1]
,"highlighting":[289,1]
,"equivalent":[289,1,338,1,346,1,372,1,379,2,402,1,543,1,596,1,629,1,641,2]
,"command)":[289,1]
,"accelerator":[289,7,294,1]
,"ctrl":[289,2,294,1]
,"<ctrl>":[289,1]
,"<key":[289,1]
,"tried":[289,1,485,1]
,"(ctrl":[289,1]
,"selectionable":[289,2]
,"dimmed":[289,1]
,"aspect":[289,1,478,1,479,4,480,1,482,2,484,7,485,5,638,1]
,"inverted":[289,1]
,"continuing":[289,1]
,"stretches":[290,1]
,"reappear":[290,1]
,"reattached":[290,1]
,"reappears":[290,1]
,"bring":[290,1,336,11,337,2,338,2,340,2,341,2,342,1,345,2]
,"functioning":[290,1]
,"ick":[290,1]
,"(empmgr)":[291,1]
,"(dpmaxsal)":[291,1]
,"(because":[291,1]
,"(labeled":[291,3]
,"clean":[291,2,325,1,336,1,348,1,486,1,489,2]
,"probably":[292,1,486,1,489,2]
,"closer":[293,1,481,1,482,1,483,2,485,5,489,1,603,1]
,"clause)":[293,1]
,"page)":[293,1,327,1,328,1]
,"disappear":[294,1]
,"deliver":[294,1]
,"$ilvhome\u002Fbin\u002Frunner\u002F<system>\u002F<database>\u002Frunner":[294,1]
,"-noexitpanel":[294,2]
,"compiler":[294,1,486,1]
,"summary":[295,1,346,1,463,1,471,1,472,1]
,"hesitate":[295,1]
,"consult":[295,1]
,"services":[295,1,453,2,592,1]
,"sted":[296,1]
,"supplement":[296,1,302,1,596,1]
,"interested":[296,1]
,"parts_t":[298,2]
,"parts_table_t":[298,3]
,"(prodno))":[298,1]
,"1001":[298,1]
,"1002":[298,1]
,"showcase":[298,1]
,"2001":[298,1]
,"2002":[298,1]
,"wood":[298,1]
,"shelf":[298,3]
,"glass":[298,1]
,"wardrobe":[298,1]
,"3001":[298,1]
,"3002":[298,1]
,"3003":[298,1]
,"meter":[298,1,526,1,581,1,630,1]
,"rod":[298,1]
,"basket":[298,1]
,"product.parts":[300,1]
,"holds":[300,1,541,1,554,1,570,1,577,1]
,"designated":[300,1]
,"combination":[300,1,383,2,395,1,469,1,476,1]
,"(product_ds)":[301,1]
,"products":[301,2,304,2]
,"product.ilv":[302,1]
,"instructions":[303,1,336,1,340,1,534,1,536,1]
,"configuration":[303,1,304,1,307,1,598,1,600,3]
,"vista":[303,2,304,1,305,1,307,1,308,1]
,"latest":[304,1]
,"\u002Fusr\u002Froguewave\u002Fviewsxx":[304,2,306,1]
,"stands":[304,6]
,"number)":[304,6]
,"\u002Fusr\u002Froguewave\u002Fdblinkxx":[304,1,306,1]
,"c:\u005Crogue":[304,3,307,3]
,"wave\u005Cviewsxx":[304,2,307,2]
,"wave\u005Cdblinkxx":[304,1]
,"please":[304,2]
,"foundation":[305,1,460,1,545,1,589,1]
,"sun":[305,1,306,1]
,"ultra":[305,1,306,1]
,"sparc":[305,1,306,1]
,"bit":[305,1]
,"solaris":[305,1,306,1]
,"6.2":[305,1]
,"ultrasparc32_8_6.2":[305,1]
,"<system>":[305,1]
,"<subsystem>":[305,1]
,"subsystem":[305,1]
,"environments":[305,2]
,"ilvhome":[306,3,307,3,308,1,608,1,634,1]
,"dblink_home":[306,3]
,"derivatives":[306,2]
,"ksh":[306,1]
,"bash":[306,1]
,"$ilvhome=\u002Fusr\u002Froguewave\u002Fviewsxx":[306,1]
,"$dblink_home=\u002Fusr\u002Froguewave\u002Fdblinkxx":[306,1]
,"$export":[306,2]
,"csh":[306,4]
,"tcsh":[306,3]
,"setenv":[306,8]
,"automated":[306,2]
,"putting":[306,2,377,1]
,"shell":[306,3]
,"startup":[306,2]
,"(either":[306,2,356,1,427,1,495,1,498,1,575,1]
,".profile":[306,2]
,".login":[306,2]
,"ld_library_path":[306,11]
,"$ld_library_path=$ilvhome\u002Flib\u002F<system>\u002Fshared:$ld_library_path":[306,1]
,"$ld_library_path=$ilvhome\u002Fstudio\u002F<system>":[306,1]
,"shared:$ld_library_path":[306,1]
,"$ld_library_path=$dblink_home\u002Flib\u002F<system>\u002Fshared:$ld_library_path":[306,1]
,"$ilvhome\u002Flib\u002F<system>\u002Fshared":[306,1]
,"$ilvhome\u002Fstudio\u002F<system>\u002Fshared:$ld_library_path":[306,2]
,"$dblink_home\u002Flib\u002F<system>\u002Fshared:$ld_library_path":[306,2]
,"$ilvhome\u002Flib\u002F<system>\u002Fshared:$ld_library_path":[306,1]
,"csh)":[306,1]
,"views.ini":[307,1]
,"[rogue":[307,1]
,"views]":[307,1]
,"ilvhome=c:\u005Crogue":[307,1]
,"dlls":[307,2]
,"wave\u005Cviewsxx\u005Clib\u005C<system>\u005C<subsystem>":[307,1]
,"wave\u005Cdblinkxx\u005Clib\u005C<system>\u005C<subsystem>":[307,1]
,"loader":[308,1,540,1,555,1,557,6,559,1,560,5,570,1,572,4,583,2,586,3,587,3,592,2,596,1,597,2]
,"dblink.ini":[308,2]
,"%\u005Cbin\u005C<system>\u005Cmulitdb\u005Cdblink.ini":[308,1]
,"indifferently":[308,1]
,"database-related":[308,1]
,"db2dir":[308,1]
,"oracle_home":[308,1,595,1]
,"informixdir":[308,1]
,"informixserver":[308,1]
,"software":[308,1,455,1,457,1,479,1,487,1,490,1,521,1]
,"<following":[310,1,312,1]
,"&&&&&\u201C":[310,1]
,"@@@@@\u201C":[310,1]
,"(displayed":[311,2]
,"uppercase)":[311,1]
,"lowercase)":[311,1]
,"8\u002F3\u002F96)":[312,1]
,"wether":[312,1]
,"prefer":[315,1,336,1,624,1]
,"warning":[315,1,316,1,411,2,415,2,489,1,549,1,611,1]
,"lost":[315,1,545,1,552,1]
,"composing":[316,1]
,"system)":[316,1,328,1]
,"(click":[316,1,346,1]
,"connect.)":[316,1]
,"dependent":[316,1]
,"correct":[316,1,422,1,425,1,486,1,512,1,584,1,597,1,614,1]
,"salary.)":[316,1]
,"4-8":[316,1]
,"employdb.ilx":[316,1]
,"it.)":[316,1]
,"reproduce":[316,1]
,"rebuild":[316,1]
,"lose":[316,1]
,"presenting":[318,1]
,"decorations":[318,1,352,1,356,2,416,3]
,"interacting":[318,1,352,1,354,1,426,1]
,"real-time":[318,1,352,2,376,1,437,3,438,1,439,1]
,"ilvxmlchartdata":[318,1,442,2,443,2,449,4,450,4]
,"tudio":[319,1,320,1,321,3,322,1,324,1,334,1,335,1,336,1,340,2,345,1,348,1,351,2,354,1,372,1]
,"teaches":[319,1]
,"cartesian":[319,1,322,2,324,1,328,1,329,4,331,3,335,1,336,8,339,1,340,4,341,1,351,1,354,3,355,1,359,8,362,1,363,3,364,7,365,10,366,3,367,1,368,1,369,8,377,1,379,4,385,4,386,4,387,4,388,4,389,4,390,4,391,4,392,4,393,4,396,4,397,4,398,5,399,4,410,5,412,3,413,8,422,8,425,8,601,1,618,2,619,2,632,1,636,1,641,1,642,1]
,"quick":[320,1,322,1,474,1]
,"legend":[320,2,322,4,323,2,332,1,334,20,335,1,339,1,340,1,342,12,356,1,359,3,364,21,365,5,366,1,367,3,368,7,369,1,383,4,394,1,416,1,417,14,418,23,419,12,531,2,534,1,582,1]
,"$ilvhome\u002Fstudio\u002F<system>":[321,1,474,1]
,"istribution":[321,1]
,"-selectplugins":[321,1,474,1]
,"plug-in":[321,1,332,1,340,1]
,"window)":[322,1]
,"subitem":[322,1,339,3]
,"ilvchartlegend":[322,1,342,1,364,1,368,1,417,1]
,"legends":[322,1,352,1,356,1,359,1]
,"ilvchartgraphic":[322,1,323,1,362,4,364,1,368,4,369,8,373,1,386,2,394,1,403,1,412,2,414,2,419,1,422,2,425,2,438,4,440,1,441,2]
,"expressed":[322,2,328,2,329,2,330,1,336,2,338,2,343,8,344,2,345,9,346,2,349,1,350,1,354,2,355,1,359,2,362,3,364,1,365,1,366,1,368,3,369,2,370,2,394,4,409,1,526,1,541,1,542,1,547,2,553,2,557,2,558,1,563,1,611,1,613,1,619,2,624,1,628,2,631,1]
,"coordinates":[322,2,329,3,343,1,345,1,354,2,355,3,359,2,361,2,362,5,364,1,365,1,367,2,368,4,369,2,370,13,372,2,394,2,406,1,410,2,413,2,425,2,460,2,466,7,469,1,486,1,488,1,489,1,493,2,495,1,497,1,504,1,510,3,511,2,513,1,516,2,520,1,526,2,547,1,548,2,553,3,554,2,558,1,563,1,584,1,585,1,601,1,607,1,611,1,612,2,613,1,614,1,615,2,618,2,619,3,631,3,632,3,633,1,635,3,636,10,637,2,641,1,642,4]
,"circular":[322,1,329,2,343,4,346,2,347,1,354,2,356,1,359,2,362,2,365,1,368,1,410,14,412,1,422,2,425,2,453,1,479,2,484,5,486,2,517,1]
,"(2d":[323,1,336,1]
,"surrounded":[323,1,417,1,418,3]
,"harts":[323,1,332,1]
,"(general":[324,1]
,"hidden":[324,1,531,1,560,1,566,2]
,"illustrations":[324,1,353,1,357,1,476,2]
,"general-purpose":[324,1]
,"ordinate":[325,4,329,2,330,1,335,2,336,34,338,25,339,10,341,4,347,1,348,1,351,4,354,3,355,2,359,2,360,1,362,2,364,6,365,7,366,6,367,4,368,4,369,17,370,12,372,2,394,1,400,9,406,1,407,2,410,3,412,13,413,5,414,2,422,7,425,7,434,1,439,4]
,"scales\u002Fsteps":[325,2]
,"up\u002Fmove":[325,1]
,"erases":[325,2]
,"set)":[327,1,372,4,394,1,402,1]
,"(top":[327,1,328,1,490,1]
,"representations)":[328,1]
,"displayer)":[328,1,396,1,397,1]
,"matter":[328,1,343,1,384,1,395,1,491,1,501,1]
,"coordinate":[328,4,345,2,350,1,367,11,368,13,369,21,370,6,400,2,406,1,408,1,410,9,411,2,412,5,414,7,415,7,422,12,425,10,438,4,439,12,486,6,526,1,547,2,548,3,554,1,557,1,575,1,590,3,601,1,614,2,618,1,622,1,631,2,635,2,636,2,641,2]
,"manner":[329,1,482,1,489,1,495,1,498,1,513,1,596,1,597,1]
,"abscissa":[329,3,330,1,336,11,338,1,341,4,343,10,344,2,345,17,346,18,347,1,348,1,349,4,350,5,354,3,355,2,359,2,360,1,361,1,362,2,364,6,365,16,366,6,367,2,368,3,369,20,370,12,372,8,394,1,407,2,410,4,412,5,413,6,414,1,415,3,422,7,425,7,434,1,438,5,439,6,443,1,445,1]
,"x-\u00A0":[329,1]
,"y-coordinates":[329,1]
,"orthogonal":[329,1,369,1,413,1,454,1,455,2,458,1,473,1,475,1,476,2,477,1,478,1,479,3,482,10,484,1,486,1,487,1,489,12,490,8,491,5,492,9,501,1,517,1]
,"radial":[329,1,354,1,394,2,422,1,425,1,479,4,480,2,481,5,482,1,484,26,485,2,486,4,517,1]
,"(clockwise":[329,1]
,"counterclockwise)":[329,1]
,"subpages":[330,1,336,1,341,1,350,1]
,"subpage":[330,6,336,1,338,1,339,1,341,3,342,1,350,1]
,"transformation":[330,9,338,7,339,1,341,18,343,1,344,1,345,10,346,6,368,1,411,1,413,1,415,21,466,1,513,1]
,"transformations":[330,2,415,3]
,"elementary":[330,4,338,1,341,4,345,1,346,1,415,3]
,"logarithmic":[330,3,335,1,339,1,340,1,341,10,342,1,356,1,411,2,415,16]
,"identity":[330,1,341,3,415,1,510,2,512,1]
,"drawn":[330,11,331,1,332,2,334,1,336,2,338,2,340,1,346,2,349,3,364,1,365,3,366,1,369,4,376,2,377,1,379,1,384,2,385,3,386,4,387,2,388,3,389,2,390,2,391,2,392,4,393,3,394,5,396,1,397,1,402,3,404,1,408,3,409,9,410,2,411,2,412,1,418,3,420,2,421,3,424,6,425,1,435,1,440,4,453,1,486,1,511,1,530,1,580,1]
,"ticks":[330,7,336,1,338,1,341,2,408,3,409,13,420,2]
,"graduations":[330,2,336,4,338,3,350,2,356,2,369,1,405,1,409,1,411,5,415,2]
,"substep":[330,3,364,3,408,1,409,2,410,2,411,1]
,"tick":[330,1,336,2,364,10,365,3,366,2,411,2]
,"minor":[330,2,341,3,364,4,408,1,409,2,420,2,421,4,489,1]
,"(outside":[330,1]
,"inside":[330,1,331,2,379,2,409,3,453,1,493,2,494,1,508,1,513,1,516,1,540,1,560,1,564,1]
,"centered":[330,1,355,1,482,2,489,1,553,1]
,"axis)":[330,1]
,"axes":[330,1,336,3,338,3,365,3,366,1,369,2,409,4,410,1]
,"crossings":[330,1,336,3,338,3,365,1,409,4,410,1,458,3,481,1,487,5,488,1,489,1,490,2,491,2,492,6]
,"overlapping":[330,1,409,3,453,1,454,1,479,1,481,1,482,1,484,2,489,3,496,1,517,2]
,"box)":[331,1]
,"grids":[331,2,352,1,356,2,359,1,365,1,366,1,379,2,422,4]
,"cursors)":[331,1,379,1]
,"points":[331,1,332,11,340,3,345,7,348,2,355,1,356,4,359,1,361,4,364,2,367,1,370,16,372,16,379,1,386,12,394,7,401,1,402,7,403,2,404,5,413,1,414,2,427,3,435,5,437,1,439,2,440,17,460,1,482,4,488,2,489,12,492,1,495,3,497,1,498,4,526,1,547,1,548,1,553,5,575,1,602,1,612,1,631,1,643,1]
,"lies":[331,2,379,3,558,1]
,"extent":[331,1,379,1]
,"chart)":[331,1,364,2,367,1,377,1,379,1]
,"sides":[331,1]
,"amount":[331,1,370,1,379,1,537,1]
,"ratio":[332,1,438,4,439,8,478,1,479,4,480,2,482,2,484,7,485,5,606,1]
,"fly":[332,1,375,1,438,1,439,5]
,"shifts":[332,1,438,1,439,1]
,"towards":[332,1,413,4,484,1]
,"cyclic":[332,2,372,4,476,2,479,1,486,1]
,"scrolls":[332,1,438,5,439,1]
,"shifted":[332,1,372,1,439,1,632,1]
,"erasing":[332,1,438,1]
,"out-of-bounds":[332,3,386,7,401,1,404,2]
,"projected":[332,3,343,1,346,1,349,1,362,3,365,2,370,1,386,6,404,1,435,3,602,1,605,1,607,1,611,1,612,3,614,2,633,1,641,3,643,1]
,"continuous":[332,2,386,1,403,1]
,"polylines":[332,1,340,1,360,1,364,1,367,1,383,1,544,1,547,1,548,1,553,3,557,1,598,1]
,"polyline":[332,2,336,5,340,8,347,1,349,4,355,2,364,6,367,1,383,3,384,1,386,20,395,1,396,21,400,2,403,1,404,1,439,1,489,5,497,1,553,5,557,1]
,"details.)":[332,1,368,2]
,"scatter":[332,1,336,6,345,3,355,1,384,1,385,9,396,7,400,4]
,"dispatching":[332,1,436,1]
,"chartinfoview":[332,1,434,1]
,"(gadgets)":[332,1]
,"allbacks":[333,1]
,"pertain":[334,1]
,"shadow":[334,4,391,1,417,1,418,3]
,"dimensions":[334,1,466,3,478,4,624,1,641,1]
,"spacing":[334,3,364,2,410,2,411,2,418,1,482,9,483,2,484,6,489,9]
,"charting":[335,2,336,1,340,4,342,1]
,"temperatures":[335,1,336,30,338,3,339,13,347,4,348,5,349,5,351,3,360,9,364,27,365,5,366,7,367,9,369,4,370,5,377,19,402,7]
,"pressures":[335,1,336,16,339,2]
,"stacked":[335,1,339,6,355,5,360,1,383,2,395,3,398,23,399,1,406,1]
,"side-by-side":[335,1,339,2,355,1,395,1,399,10]
,"analytic":[335,1,339,1,340,3,342,1]
,"mean":[336,4,339,1,360,5,364,14,365,1,367,2,370,2,377,2,402,4,489,1,510,1]
,"afternoon":[336,13,339,8,360,4,364,12,365,1,367,1,370,2,377,4,402,9]
,"pressure":[336,10,339,1,579,1]
,"millibars":[336,6,339,1]
,"(millibars)":[336,1]
,"1012":[336,1]
,"995":[336,1]
,"1015":[336,1]
,"1020":[336,1]
,"1022":[336,1]
,"1025":[336,2]
,"(degrees":[336,1]
,"millibars)":[336,1]
,"marked":[336,5,347,1,349,4,355,1,364,3,383,2,395,1,396,9,400,1,435,2]
,"broken":[336,1,340,1,428,1,553,1]
,"stage":[336,5,339,3,340,3,345,1,348,2,349,1]
,"indexes":[336,4,361,1,364,1,365,2,366,2,369,2,372,2,400,1,402,2,412,1,436,1,498,1,575,1]
,"ranging":[336,1,566,1]
,"third":[336,3,339,1,345,2,397,1,398,1,399,1,498,1,533,1,640,2]
,"min\u002Fmax":[336,5,338,3]
,"understanding":[336,1,356,1,359,1,416,1]
,"&defaultsteplabel":[336,2]
,"overlap":[336,1,409,1,479,3,482,6,483,1,484,1,489,1,491,1,493,1]
,"graduated":[336,2,338,1,343,3,345,4,346,1,356,1,415,1]
,"labeling":[336,4,338,2]
,"respect":[336,1,457,1,458,2,480,1,498,1,507,1,517,1,569,1,606,1]
,"scales\u002Fgeneral":[336,1]
,"every":[336,2,347,2,348,2,351,1,364,2]
,"substeps":[336,2,338,1,350,1,364,8,368,1,409,2,410,3,411,8]
,"unlike":[336,1,570,1]
,"existed":[336,1]
,"(ordinate":[336,2]
,"stage)":[336,1]
,"positioning":[336,1,380,1,407,1,488,1,584,1,631,2]
,"990":[336,1]
,"1030":[336,1]
,"correspondence":[338,1]
,"-60":[338,1]
,"affine":[338,1,345,1,415,2]
,"1.8":[338,1]
,"multiplicative":[338,1,345,1]
,"coefficient":[338,2,345,2]
,"stack":[339,1,534,1]
,"stacked-bar":[339,8]
,"(displayers":[339,1]
,"listed.)":[339,1]
,"indented":[339,1]
,"seemingly":[339,1]
,"seem":[339,1]
,"merge":[339,1,554,1]
,"differentiate":[339,1,517,1]
,"yellow":[339,1,564,2,581,1]
,"orange":[339,1]
,"(cumulated":[339,1]
,"learning":[339,1]
,"suppose":[340,1,347,1,480,1,548,1]
,"square":[340,24,341,2,342,2,372,10,379,3,484,1,559,2,564,2]
,"different-colored":[340,1]
,"right-hand":[340,1]
,"x*x":[340,1,372,2]
,"evaluated":[340,2]
,"force":[340,4,492,1]
,"evaluation":[340,3]
,"redrawing":[340,1,440,2,441,1,465,1]
,"square-root":[340,1]
,"squareroot":[340,3]
,"math.sqrt":[340,1]
,"deselected":[341,2,346,1,349,1,435,1]
,"alternate":[341,1,600,1]
,"(instance":[342,1,368,1]
,"mychartlegend":[342,2]
,"segments":[342,1,489,9,490,2,491,1,492,6,547,1]
,"illustrate":[342,1,360,2,364,1,516,1]
,"completes":[342,1]
,"angle":[343,2,344,1,346,6,349,5,354,1,365,3,383,1,394,5,409,1,458,1,484,5,606,1,619,2]
,"non-angle":[343,1]
,"projector":[343,2,346,1,349,1,367,2,368,4,369,4,370,3,394,1,413,6]
,"tell":[343,1,346,1]
,"bear":[343,1]
,"radians":[343,2,344,4,345,15,346,7,611,2,620,1]
,"consisting":[345,1,569,1]
,"x-coordinate":[345,1,483,1,488,1,489,1]
,"simplify":[345,1,481,1]
,"exercise":[345,2,346,1,351,1]
,"0.78":[345,1]
,"1.57":[345,2]
,"4.71":[345,1,346,1]
,"57.3":[345,1]
,"compare":[346,2,398,1]
,"paste":[346,1]
,"paste.)":[346,1]
,"disabling":[346,1]
,"degree":[346,1,364,1,484,2,538,2,553,1,579,3]
,"270":[346,3,365,2,489,1]
,"\u2011degree":[346,1,349,2]
,"(=starting":[346,1,349,1]
,"range)":[346,1,349,1]
,".2f":[346,1,365,1,369,1]
,"expresses":[346,1]
,"angles":[346,1,602,1,606,1,612,1]
,"clock":[347,1,350,2,495,1,517,1]
,"cell)":[348,2]
,"450":[349,1,364,2,365,1,369,2,394,1,635,3]
,"clockwise":[349,2,354,1,365,2,413,2,481,1]
,"round":[351,1]
,"annotations":[352,1,356,2,359,2]
,"complex":[353,1,383,1,453,1,457,1,458,1,490,1,623,1,641,1,642,1]
,"manners":[354,1]
,"separation":[354,1,360,2,372,1]
,"vertically":[354,1,453,1,479,2,480,1,482,1,483,1,489,3]
,"counterclockwise":[354,1,413,1,481,1]
,"data-aware":[354,1,375,1]
,"(stop":[354,1]
,"cyclic)":[354,1]
,"plotted":[355,2,359,3,364,1]
,"markers)":[355,2,383,1]
,"polygon":[355,1,384,1,387,10,398,2,440,1,526,1,557,1,575,1,595,1]
,"(polyline":[355,1]
,"stairs)":[355,2]
,"stair":[355,1,384,1,389,7,440,1]
,"data)":[355,1,439,1]
,"stock":[355,1,436,1]
,"high-low":[355,3,360,2,364,6,367,3,383,1,384,2,392,18,393,14,395,1,397,21,400,5,402,1]
,"open-close":[355,1,395,1,397,9,400,4]
,"bubble":[355,1]
,"bubbles)":[355,1]
,"(100":[355,1]
,"polygons":[355,1,398,2,540,1,548,1,575,1,598,1]
,"straight-line":[356,1,482,1,489,2,492,1,495,2,498,2]
,"axes)":[356,1]
,"(can":[356,1]
,"charts)":[356,1,479,1,487,1,490,1,496,1]
,"linear":[356,1]
,"kinds":[356,1,359,1,367,1,383,1,455,1,489,1,556,1]
,"improve":[356,1,366,1,416,1,440,3,459,1,464,1,505,1,553,1]
,"explain":[356,1,359,1,608,1]
,"zoom":[356,2,390,1,392,1,415,1,427,3,428,6,436,2,510,1,511,2,527,4,528,1,529,1,534,3,566,3,569,1]
,"unzoom":[356,1]
,"pan":[356,1,427,1,430,3,436,2,527,1,531,1,534,2,569,1]
,"crosshair":[356,2,427,2,431,4]
,"point)":[356,1,427,1,612,1]
,"(markers":[359,1]
,"-and":[359,1]
,"-coordinates":[359,2]
,"orthogonally":[359,1,410,1,489,1]
,"radially":[359,1,365,1,410,1,413,1,480,1]
,"aid":[359,1]
,"annotation":[359,1,401,1,402,2]
,"model-view":[360,1]
,"listeners":[360,1,375,2,376,25,377,12,451,1,454,1,460,1,461,1,499,1,501,3,516,2,568,1,572,1]
,"variation":[360,1,364,1]
,"(polylines":[360,1,367,1]
,"solid-line":[360,1]
,"dotted-line":[360,1]
,"ilvabstractchartdata":[361,1,362,1,368,1,372,1,373,1,374,3,375,8,443,1]
,"ilvmemorychartdata":[361,1,362,1,363,1,368,1,372,3,373,1]
,"ilvchartdataset":[361,2,363,1,368,1,372,2,374,3,375,6,376,10,440,5,449,2]
,"ilvchartpointset":[361,1,364,2,372,4,373,3]
,"ilvdoublepoint":[361,1,372,3,394,1,439,2,440,4]
,"ilvchartyvalueset":[361,1,372,5,373,3,394,2]
,"ordinates":[361,1,372,1,597,2]
,"ilvabstractchartfunction":[361,1,372,2]
,"ilvcallbackchartfunction":[361,1,372,6]
,"ilvscriptchartfunction":[361,1,372,9]
,"(inherited":[362,1,377,1]
,"predefine":[362,1]
,"ilvcartesianchart":[362,1,363,1,364,1,368,3,369,5,412,2]
,"ilvpolarchart":[362,1,363,1,365,1,368,3,394,1,412,2]
,"cartesian.cpp":[364,1]
,"$ilvhome\u002Fsamples\u002Fcharts\u002Fuserman\u002Fsrc":[364,1,365,1,366,1,369,1,377,1,394,1,398,1,402,1,439,1,440,2]
,"\u002F\u002F==create":[364,4]
,"ilvchartdataset*datasets":[364,1,373,1,400,1]
,"[2]":[364,1,373,1,399,1,400,1]
,"datasets":[364,20,373,8,377,4,400,4,402,4]
,"[1]":[364,2,373,1,377,1,399,1,400,1,402,2,597,1]
,"\u002F\u002F==put":[364,2]
,"[0]->":[364,7,373,3,377,1]
,"addpoint":[364,14,372,6,373,6,439,1,440,2]
,"(ilvdoublepoint":[364,14,372,6,373,6,394,1]
,"8))":[364,1]
,"12))":[364,2]
,"15))":[364,1,635,1]
,"14))":[364,2]
,"13))":[364,1]
,"[1]->":[364,7,373,3,377,1,402,3]
,"16))":[364,1]
,"20))":[364,1]
,"25))":[364,1]
,"24))":[364,1]
,"26))":[364,1]
,"ilvchartgraphic*chart":[364,1,365,1,369,2,377,2]
,"300))":[364,1,369,2,394,1]
,"passed":[364,3,365,1,369,5,370,1,372,1,377,1,394,3,400,3,403,1,410,2,422,3,425,3,462,1,597,1]
,":getdata":[364,1,373,1]
,"datasetscount":[364,2,373,1]
,"chart->":[364,7,369,5,373,4,377,2,394,14,400,2,410,2,439,4,440,2]
,"getdata":[364,1,373,3,394,1]
,"setdatasets":[364,1,373,1]
,"(datasetscount":[364,1,373,1]
,"datasets)":[364,2,373,1,400,1]
,"adddisplayer":[364,3,400,4]
,"ilvpolylinechartdisplayer":[364,2,386,3,387,1,396,1,404,1]
,"[0])":[364,1,373,2]
,"[1])":[364,1,373,2,402,1]
,"ilvpalette*risepalette":[364,1]
,"=display->":[364,2,394,5,403,3,560,1]
,"(display->":[364,4,402,1,557,1,635,1]
,"getcolor":[364,6,377,1,385,1,386,1,387,2,388,1,389,2,390,2,391,2,392,4,393,4,394,5,396,2,397,4,399,4,402,2,403,3,548,1,557,1,636,1]
,"display->":[364,2,394,5,402,2]
,"ilvpalette*fallpalette":[364,1]
,"ilvhilobarchartdisplayer":[364,2,393,2,397,1]
,"(12":[364,1]
,"risepalette":[364,2]
,"fallpalette)":[364,1]
,"low":[364,2,392,4,393,2,397,1,489,1]
,"temperature)":[364,2]
,"smaller":[364,1,377,1,482,1,488,5,489,2,493,1,498,1,579,1]
,"high":[364,2,392,4,393,2,397,1,482,2,484,1,485,2,487,1,489,1]
,"fallpalette":[364,1]
,"getdisplayer":[364,2,402,3]
,"(0)->":[364,1,394,12]
,"setforeground":[364,2,383,1,385,1,386,1,387,1,388,1,390,1,547,1,548,1,550,1,557,1,636,1]
,"(1)->":[364,1]
,"seven":[364,1]
,"computation":[364,1,368,3,380,1,381,1,409,2,411,3,454,1,464,3,465,1,487,3,492,1,517,2,618,1,641,1]
,"updater":[364,6,368,2,409,2,410,4,411,2,415,3]
,"ilvsinglescaledisplayer*abscissascale":[364,1,415,1]
,"=chart->":[364,2,377,1,414,1,415,1,439,1,440,2]
,"getabscissascale":[364,1,415,1]
,"ilvconstantscalestepsupdater*updater":[364,1,410,2]
,"ilvconstantscalestepsupdater":[364,2,410,2,411,6]
,"(abscissascale)":[364,1,369,1,415,1]
,"ilvscalestepsupdater":[364,2,368,1,410,2,411,1,415,1]
,":set":[364,2,410,2,415,1,436,1]
,"(abscissascale":[364,1,415,1]
,"updater)":[364,2,410,2]
,"updater->":[364,2,410,2]
,"fixstepscount":[364,1,410,1]
,"ilvsinglescaledisplayer*ordinatescale":[364,1]
,"getordinatesinglescale":[364,1]
,"(ordinatescale)":[364,1,369,1]
,"(ordinatescale":[364,1]
,"fixstepunit":[364,1,410,1]
,"ilvchartlegend*legend":[364,1]
,"330":[364,1]
,"50))":[364,1]
,"setlegend":[364,1]
,"(legend)":[364,1]
,"polar.cpp":[365,1]
,"300)":[365,1]
,".0f":[365,2,369,2,410,2]
,"abscissascale->":[365,2,366,2,369,2]
,"setsteplabelformat":[365,1,369,1,409,1,410,1]
,"intersection":[365,2,366,1,369,2,562,2]
,"flag":[365,2,369,4,413,4,418,2]
,"intersect":[365,1,369,2,563,1,595,1,597,3]
,"drawlabeloncrossings":[365,1,369,2,409,1,410,1]
,"(iltrue)":[365,1,366,2,369,2,486,1]
,"quite":[366,1,458,2]
,"improvements":[366,1]
,"cartesian_custom.cpp":[366,1]
,"polar_custom.cpp":[366,1]
,"referencing":[366,1]
,"understandable":[366,1,453,1]
,"char*labels":[366,1]
,"[7]":[366,1]
,"={\u0022":[366,1]
,"tuesday":[366,1]
,"wednesday":[366,1]
,"thursday":[366,1]
,"friday":[366,1]
,"saturday":[366,1]
,"labelscount":[366,1]
,"setsteplabels":[366,1]
,"(labelscount":[366,1]
,"labels)":[366,1]
,"ordinatescale->":[366,2,369,1]
,"setaxislabel":[366,1,409,1]
,"setaxisoriented":[366,2,409,1]
,"customization":[366,4,461,1,496,1]
,"instruction":[366,3]
,"partially":[366,1,486,1]
,"covered":[366,1,452,1,456,1,471,1,475,1,499,1,542,1,597,1]
,"rovides":[366,1]
,"(example":[367,1]
,"transforms":[367,1,547,1,614,1]
,"describing":[367,1,597,1]
,"bar)":[367,1,465,1]
,"instantiation":[368,7,500,1]
,"ilvabstractchartdisplayer":[368,1,383,3,395,1,403,1]
,"pointers":[368,1]
,"considers":[368,1,482,1,507,1]
,"ilvabstractscaledisplayer":[368,1,406,1,407,3,409,7,414,1]
,"project":[368,3,370,1,457,1,601,1,612,2,641,1]
,"ilvrectangularscaledisplayer":[368,2,369,3,410,2,412,5,422,3,425,3]
,"ilvcircularscaledisplayer":[368,1,410,2,412,2,422,1,425,1]
,"ilvautoscalestepsupdater":[368,1,409,1,411,6]
,"ilvchartlayout":[368,2,379,1,380,4,381,1]
,"ilvabstractprojector":[368,1]
,"ilvcartesianprojector":[368,1,369,2,412,1,413,4,422,1,425,1]
,"projects":[368,2,370,1]
,"ilvpolarprojector":[368,1,412,1,413,3,422,1,425,1]
,"ilvcoordinateinfo":[368,2,369,2,410,2,414,6]
,"transformer":[368,2,370,2,411,1,415,3,466,3,510,5,511,2,512,8,513,4,514,2,515,14]
,"ilvcoordinatetransformer":[368,1]
,"hand":[369,1,376,1,380,7,394,1,402,1,409,4,411,3,412,2,414,1,422,1,425,1,433,1,435,1,459,1,467,1,468,1,486,1,613,1]
,"paragraph":[369,1]
,"chartgraphic.cpp":[369,1]
,"setprojector":[369,1]
,"(ilvcartesianprojector":[369,1,413,1]
,":ilvxrightytop))":[369,1]
,"toward":[369,2]
,"orientations":[369,1,413,2]
,"ilvcoordinateinfo*abscissacoordinfo":[369,1]
,"(ilvabscissacoordinate)":[369,1,410,1]
,"ilvrectangularscaledisplayer*abscissascale":[369,1]
,"(abscissacoordinfo":[369,1]
,"setabscissascale":[369,1,412,1]
,"graduation":[369,2]
,"ilvcoordinateinfo*ordinatecoordinfo":[369,1]
,"(ilvordinatecoordinate)":[369,1,410,1]
,"ilvrectangularscaledisplayer*ordinatescale":[369,1]
,"(ordinatecoordinfo":[369,1]
,"addordinatescale":[369,1,412,1]
,"readily":[369,1]
,"transforming":[370,3]
,"transformed":[370,7,415,1,466,3,612,1]
,"transformers":[370,1,512,2]
,"pointer)":[370,1]
,"projecting":[370,2,401,1,404,1,601,2,602,1,607,2,612,1,641,3]
,"124":[370,1]
,"bounds":[370,1]
,"maps":[370,1,455,1,518,9,519,4,520,9,521,4,522,3,524,1,526,1,533,1,534,2,535,2,537,1,540,7,541,4,543,1,545,1,547,1,551,1,553,1,554,2,555,2,557,1,559,3,560,1,571,1,573,1,575,2,576,1,577,1,580,2,582,1,590,1,591,1,595,1,596,1,597,1,598,2,601,1,606,1,609,1,621,1,622,2,623,1,625,1,630,1,631,3,632,1,636,1,638,1]
,"occupy":[370,1]
,"largest":[370,1,379,3,569,1]
,"(once":[370,1]
,"example.)":[370,1]
,"sharing":[371,1,374,4]
,"(set-of-points":[372,1]
,"(set-of-values":[372,1]
,"(function":[372,1]
,"(cyclic":[372,1]
,"set-of-points":[372,6,394,1]
,"0.5":[372,1,439,1,486,2,489,1,641,2,643,1]
,"1.0":[372,1,443,2,484,1,489,2,553,2,630,1]
,"1.2":[372,2]
,"2.3":[372,1]
,"1.6":[372,1]
,"3.1":[372,2,598,1]
,"ilvchartpointset*dataset":[372,1]
,"dataset->":[372,10,377,1,394,5,439,1,440,4]
,"(0.5":[372,1,373,1]
,"1.0))":[372,1,373,1]
,"(1.2":[372,1,373,1]
,"2.3))":[372,1,373,1]
,"(1.6":[372,1,373,1]
,"3.1))":[372,2,373,2]
,"set-of-values":[372,3]
,"abscissas":[372,1]
,"4.6":[372,1]
,"y-value":[372,1]
,"-values":[372,2,394,3]
,"ilvchartyvalueset*dataset":[372,2,394,1]
,"addvalue":[372,3,394,5]
,"(1.2)":[372,1]
,"(3.1)":[372,1]
,"(4.6)":[372,1]
,"(0.0":[372,1]
,"1.2))":[372,1,373,1]
,"(1.0":[372,1]
,"(2.0":[372,1,407,1]
,"4.6))":[372,1,373,1]
,"y=f":[372,1]
,"=((_xmax":[372,1]
,"-_xmin)":[372,1]
,"\u002F(_datacount":[372,1]
,"-1))":[372,1]
,"_xmin":[372,3]
,"_xmax":[372,2]
,"_datacount":[372,2]
,"ilvdoublefunction":[372,1]
,"typedef":[372,1,409,1,433,1,435,1]
,"(*ilvdoublefunction)":[372,1]
,"(ilvdouble)":[372,1]
,"computing":[372,2,378,1,379,1,411,1,492,1,505,1]
,"ilvcallbackchartfunction*function":[372,1]
,"(ilvcoordinterval":[372,2,414,1,439,2]
,",5.)":[372,2,410,1]
,"square)":[372,1]
,"assumed":[372,1,597,2,624,1]
,"ilvsymbol*scriptlanguagename":[372,1]
,"jvscript":[372,1]
,"ilvscriptlanguage*jvscript":[372,1]
,"=ilvscriptlanguage":[372,1]
,":get":[372,1,554,1,635,1,636,2]
,"(scriptlanguagename)":[372,2]
,"ilvjvscriptcontext*jvscriptcontext":[372,1]
,"ilvjvscriptcontext":[372,1]
,"(jvscript":[372,1]
,"setscriptcontext":[372,1]
,"(jvscriptcontext)":[372,1]
,"ilvscriptcontext*context":[372,1]
,"=(cont->":[372,1]
,"())->":[372,1]
,"getscriptcontext":[372,2]
,"context->":[372,1]
,"loadscript":[372,1]
,".\u002Fdata\u002Fscriptfile":[372,1]
,"contexts":[372,1]
,"(javascript":[372,1]
,"scriptfile":[372,1]
,"ilvscriptchartfunction*function":[372,1]
,"scriptlanguagename)":[372,1]
,"scriptlanguagename":[372,1]
,"ilvchartcyclicpointset":[372,3,440,1]
,"discarded":[372,1]
,"kept":[372,1,597,1]
,"grow":[372,1,487,1]
,"ones":[372,1,450,1,597,1]
,"setmaxcount":[372,2]
,"infinite":[372,1]
,"ilvchartdataset*dataset":[372,1,377,2,400,1,433,1,435,1,439,1,440,2]
,"dataset":[372,1,439,1,440,2,598,1]
,"(100)":[372,1]
,"shiftcar":[372,1]
,"samples\u002Fcharts\u002Fscrolling":[372,1]
,"\u002F\u002F==creating":[373,2]
,"adddataset":[373,4,394,1]
,"(datasets":[373,4,402,2]
,"ilvabstractchartdata*mychartdata":[373,1]
,"mychartdata->":[373,2]
,"setdata":[373,1]
,"(mychartdata)":[373,1]
,"lock\u002Funlock":[374,1]
,":lock":[374,2]
,"unlocked":[374,2]
,"information.)":[374,1]
,":setpoint":[375,2]
,":addpoint":[375,1]
,":insertpoint":[375,1]
,":removepointandinfo":[375,1]
,":removepointsandinfo":[375,1]
,":setdataset":[375,2]
,":adddataset":[375,1]
,":insertdataset":[375,1]
,":setdatasets":[375,1]
,":replacedataset":[375,1]
,":removedataset":[375,1]
,":removedatasets":[375,1]
,"eners":[376,1]
,"listener":[376,4,377,13,461,1,501,3,504,4,516,1,568,5]
,"catches":[376,1]
,"notifies":[376,3,560,1,568,1]
,"data-set":[376,3]
,"chart-data-object":[376,3]
,":arelistenersenabled":[376,1]
,":enablelisteners":[376,1]
,"propagated":[376,2,377,1]
,"batching":[376,1,440,3]
,"batch":[376,4,440,3]
,":startbatch":[376,5,440,3]
,":endbatch":[376,3,440,2]
,"batched":[376,1,440,1]
,"occurred":[377,1,462,2,500,2,517,2]
,"ilvchartdatasetlistener":[377,11]
,"watch":[377,1]
,"removing":[377,2]
,":datapointadded":[377,3]
,":datapointchanged":[377,2]
,":datapointremoved":[377,2]
,"ilvchartdatalistener":[377,12]
,"listen":[377,1]
,":datasetadded":[377,1]
,":datasetchanged":[377,1]
,":datasetremoved":[377,1]
,"printed":[377,5,608,1]
,"listener.cpp":[377,1]
,"temperaturedatasetlistener":[377,9]
,"declare":[377,1,449,1,462,1,639,1]
,"(ildouble":[377,2,409,2,484,1,485,1]
,"ilvpalette*cursorpalette":[377,1]
,"datapointadded":[377,3]
,"position)":[377,2]
,"_min":[377,2]
,"_max":[377,2]
,"ilvchartgraphic*_chart":[377,1]
,"ilvpalette*cursorpalette)":[377,1]
,"(min)":[377,1]
,"(max)":[377,1]
,"(chart)":[377,1]
,"{ilvdisplay*dpy":[377,1]
,"ilvpalette*palette":[377,1,389,1,391,1]
,"=cursorpalette":[377,1]
,"cursorpalette":[377,1]
,"(dpy->":[377,1,385,1,386,1,387,2,388,1,389,1,390,2,391,1,392,2,393,2,396,2,397,2,399,2]
,"addordinatecursor":[377,2]
,"(_min":[377,1]
,"palette)":[377,2,391,1]
,"(_max":[377,1]
,"{ilvdoublepoint":[377,1]
,"datapoint":[377,1]
,"getpoint":[377,1,439,1,440,2,550,1]
,"(position":[377,1]
,"datapoint)":[377,1]
,"(datapoint.y":[377,2]
,"<_min)":[377,1]
,"cout":[377,2]
,"<<dataset->":[377,2]
,"<<position":[377,2]
,"<<datapoint.y":[377,2]
,"(<\u0022":[377,1]
,"<<_min":[377,1]
,"<<endl":[377,2]
,"_max)":[377,1]
,"<<_max":[377,1]
,"compares":[377,1]
,"temperaturedatasetlistener*listener":[377,1]
,"addlistener":[377,2]
,"(listener)":[377,2,501,1]
,"(22":[377,1]
,"(<10":[377,1]
,"=25":[377,1]
,"=24":[377,1]
,"=26":[377,1]
,"speak":[379,1,457,1]
,"figure)":[379,1]
,"smallest":[379,1,458,1,498,1]
,"ranges":[379,1]
,"isautolayout":[380,1]
,"setautolayout":[380,1]
,"isautographarea":[380,1]
,"setautographarea":[380,1]
,"isautodatadisplayarea":[380,1]
,"setautodatadisplayarea":[380,1]
,"getleftmargin":[380,1]
,"setleftmargin":[380,1]
,"getrightmargin":[380,1]
,"setrightmargin":[380,1]
,"gettopmargin":[380,1]
,"settopmargin":[380,1]
,"getbottommargin":[380,1]
,"setbottommargin":[380,1]
,"getgrapharearelatively":[380,1]
,"setgrapharearelatively":[380,1]
,"getgrapharea":[380,1]
,"setgrapharea":[380,1]
,"getdatadisplayarearelatively":[380,1]
,"setdatadisplayarearelatively":[380,1]
,"getdatadisplayarea":[380,1]
,"setdatadisplayarea":[380,1]
,"fix":[380,2,407,1]
,":setgrapharearelatively":[380,1]
,":setdatadisplayarearelatively":[380,1]
,"changed)":[380,1]
,":setgrapharea":[380,1]
,":setdatadisplayarea":[380,1]
,"getlayout":[381,1]
,"setlayout":[381,1]
,"composite":[382,1,383,8,395,14,396,1,397,2,398,2,399,2]
,"rendering":[383,2,526,1,528,3,529,1,530,1,537,1,540,1,544,1,547,2,553,3,560,1,576,1,578,1,581,1,598,1,600,3]
,"shapes":[383,1,480,3,482,2,488,2,489,4,490,1,491,2,492,1,504,1,602,2,606,1]
,"(one":[383,1,402,1,412,1,440,1]
,"transform":[383,1,540,1,541,2,547,3,553,1,599,1]
,"isvisible":[383,1,407,1,421,1,424,1]
,"setvisible":[383,1,407,1,421,1,424,1]
,"setpalette":[383,1,424,1]
,"getforeground":[383,1,550,1]
,"getbackground":[383,1]
,"setbackground":[383,1,387,1,390,1]
,"setname":[383,1,407,1,636,1]
,"flags":[383,1,407,1,462,1]
,"getflags":[383,1,407,1]
,"setflags":[383,1,407,1]
,"getlegendtext":[383,1]
,"setlegendtext":[383,1]
,"getparentdisplayer":[383,1]
,"setparentdisplayer":[383,1]
,":setpalette":[383,1]
,":getparentdisplayer":[383,1]
,"ilvsinglechartdisplayer":[384,1]
,"isdrawingfilled":[384,1]
,"drawfilled":[384,1]
,"rendered":[384,1,526,1,550,1,560,2,581,1,591,1,598,1]
,"outlined":[384,1,387,1,389,1,390,1,391,1,393,2,394,1,397,1]
,"ilvscatterchartdisplayer":[385,2,396,1]
,"projections":[385,2,386,2,387,2,388,2,389,2,390,2,391,2,392,2,393,2,394,1,396,2,397,2,398,2,399,2,410,2,518,2,520,1,524,1,526,1,541,3,542,2,547,2,548,4,552,2,554,3,601,4,602,9,603,1,604,3,605,3,606,11,609,1,610,2,612,1,618,1,619,5,621,1,622,4,623,3,626,1,628,1,631,1,632,1,635,1,638,1,643,1]
,"getmarker":[385,1]
,"setmarker":[385,1]
,"ilvmarkerfilledsquare":[385,1]
,"getmarkersize":[385,1]
,"setmarkersize":[385,1]
,"ilvdefaultmarkersize":[385,1]
,"(using":[385,2,386,2,387,2,388,2,389,2,390,2,391,2,392,2,393,2,394,3,396,2,397,2,398,2,399,2,410,5,422,2,425,2,466,3,596,1,597,1]
,"projection)":[385,2,386,2,387,2,388,2,389,2,390,2,391,2,392,2,393,2,394,4,396,2,397,2,398,2,399,2,410,6,422,2,425,2,554,1,606,2]
,"triangles":[385,1]
,"ilvscatterchartdisplayer*displayer":[385,1]
,"(ilvmarkerfilledtriangle":[385,1]
,"ilvdefaultmarkersize)":[385,1]
,"displayer->":[385,1,386,1,387,2,388,1,390,2,396,2]
,"getprojectedpointspalette":[386,1]
,"setprojectedpointspalette":[386,1]
,"exist)":[386,1,404,1]
,"extending":[386,2,546,1,550,1,553,1,557,3]
,"clipped":[386,2,404,1,489,3]
,"squares":[386,1]
,"(out-of-bounds":[386,1]
,"points)":[386,1]
,":setprojecthorizontally":[386,1]
,":setprojectvertically":[386,1]
,"(those":[386,1]
,"circles)":[386,1]
,":getprojectedpointspalette":[386,1]
,"ilvpolylinechartdisplayer*displayer":[386,1]
,"ilvpolygonchartdisplayer":[387,2,398,2]
,"cyan":[387,2]
,"ilvpolygonchartdisplayer*displayer":[387,1]
,"ilvstepchartdisplayer":[388,2,389,1]
,"ilvstepchartdisplayer*displayer":[388,1]
,"ilvstairchartdisplayer":[389,2]
,"stairs":[389,3]
,"gold":[389,2,390,2,391,2,394,1,396,2,399,1]
,"0,0,0,0,2)":[389,1,397,2]
,"ilvstairchartdisplayer*displayer":[389,1]
,"(palette)":[389,1,398,1]
,"ilvbarchartdisplayer":[390,2,391,1]
,"getwidth":[390,1,392,1]
,"setwidth":[390,1,392,1]
,"ilvchartdisplayerwidth":[390,1,392,1]
,"getwidthpercent":[390,1,392,1]
,"setwidthpercent":[390,1,392,1]
,"ilvbarchartdisplayer*displayer":[390,1]
,"(ilvchartdisplayerwidth)":[390,1]
,"ilv3dbarchartdisplayer":[391,2]
,"depth":[391,1,485,1]
,"getdepth":[391,1]
,"setdepth":[391,1]
,"ilvchartdisplayerdepth":[391,2]
,"ilv3dbarchartdisplayer*displayer":[391,1]
,"(ilvchartdisplayerwidth":[391,1,392,1,393,1,397,1]
,"face":[391,1]
,"faces":[391,1]
,"ilvhilochartdisplayer":[392,2,393,1,397,2]
,"low-high":[392,1,393,1]
,"rise":[392,4,393,1,397,2]
,"getrisepalette":[392,1]
,"setrisepalette":[392,1]
,"getfallpalette":[392,1]
,"setfallpalette":[392,1]
,"ilvpalette*risepal":[392,1,393,1]
,",0,0,0,0,2)":[392,2,393,2]
,"ilvpalette*fallpal":[392,1,393,1]
,"ilvhilochartdisplayer*displayer":[392,1]
,"risepal":[392,1,393,1]
,"fallpal)":[392,1,393,1]
,"ilvhilobarchartdisplayer*displayer":[393,1]
,"ilvpiechartdisplayer":[394,1]
,"visualized":[394,1,399,1,453,1]
,"(use":[394,1,410,1]
,"lie":[394,1]
,"extremities":[394,1]
,"arcs":[394,1,575,1]
,"ilvpiechartgraphic":[394,4]
,"pies":[394,1]
,"encapsulates":[394,1,636,1]
,"radius":[394,1,484,1,622,1,624,8,641,2]
,"getradius":[394,1]
,"setradius":[394,1]
,"getstartingangle":[394,1]
,"setstartingangle":[394,1]
,"getrange":[394,1]
,"setrange":[394,1]
,"offset":[394,4,402,1,407,2,409,2,478,3,479,2,480,1,482,9,483,1,484,5,487,1,489,21,491,1,492,4,498,10,619,1,642,2]
,"torn":[394,2]
,"gettearoffdelta":[394,1]
,"settearoffdelta":[394,1]
,"getoffset":[394,1,409,1]
,"setoffset":[394,2,409,1]
,"(0,0)":[394,1]
,"getslicepalette":[394,1]
,"setslicepalette":[394,6]
,"isslicetornoff":[394,1]
,"tearoffslice":[394,2]
,"getslicegraphic":[394,1]
,"setslicegraphic":[394,6]
,"getslicelegendtext":[394,1]
,"setslicelegendtext":[394,1]
,"ilvpiesliceinfo":[394,1]
,"annotation)":[394,1]
,"ilvlabel":[394,6,402,2,550,2]
,"pie.cpp":[394,1]
,"(1.)":[394,1]
,"(2.)":[394,2]
,"(3.)":[394,1]
,"(4.)":[394,1]
,"ilvpiechartgraphic*chart":[394,1]
,"(dataset)":[394,2]
,"addpiedisplayer":[394,1]
,"ilvpalette*bluepal":[394,1]
,"lightblue":[394,1]
,"ilvpalette*redpal":[394,1]
,"ilvpalette*darkbluepal":[394,1]
,"ilvpalette*greenpal":[394,1]
,"ilvpalette*goldpal":[394,1]
,"getpiedisplayer":[394,12]
,"bluepal)":[394,1]
,"redpal)":[394,1]
,"darkbluepal)":[394,1]
,"greenpal)":[394,1]
,"goldpal)":[394,1]
,",0,0":[394,5]
,"5))":[394,1]
,"tear":[394,1]
,"(3)":[394,1]
,"ilvcompositechartdisplayer":[395,6]
,":setdisplayermodel":[395,1]
,"ilvstackedbarchartdisplayer":[395,1,398,1]
,"ilvstackedchartdisplayer":[395,1,398,8]
,"factory":[395,6,397,2,398,5,399,3]
,"ilvchartdisplayerfactory":[395,1,398,2]
,":setdisplayerfactory":[395,1]
,":getdisplayer":[395,1]
,"individually":[395,1,396,1,397,1,427,2,509,1]
,"ilvmarkedpolylinechartdisplayer":[396,6]
,":getmarkerdisplayer":[396,1]
,":getlinedisplayer":[396,1]
,"ismarkervisible":[396,1]
,"setmarkervisible":[396,1]
,"islinevisible":[396,1]
,"setlinevisible":[396,1]
,"getmarkerpalette":[396,1]
,"setmarkerpalette":[396,1]
,"getmarkerforeground":[396,1]
,"setmarkerforeground":[396,2]
,"getmarkerbackground":[396,1]
,"setmarkerbackground":[396,1]
,"getlinepalette":[396,1]
,"setlinepalette":[396,1]
,"getlineforeground":[396,1]
,"setlineforeground":[396,2]
,"getlinebackground":[396,1]
,"setlinebackground":[396,1]
,"ilvmarkedpolylinechartdisplayer*displayer":[396,1]
,"ilvhiloopenclosechartdisplayer":[397,6]
,"fourth":[397,1,482,1,498,1,640,1]
,"pairs":[397,1,504,1]
,":gethilodisplayer":[397,1]
,"low-values":[397,1]
,"high-values":[397,1]
,":getopenclosedisplayer":[397,1]
,"open-values":[397,1]
,"close-values":[397,1]
,"low-values\u002Fhigh-values":[397,1]
,"sethilorisepalette":[397,1]
,"sethilofallpalette":[397,1]
,"open-values\u002Fclose-values":[397,1]
,"setopencloserisepalette":[397,1]
,"setopenclosefallpalette":[397,1]
,"ilvpalette*hilorisepal":[397,1]
,"ilvpalette*opencloserisepal":[397,1]
,"=hilorisepal":[397,1]
,"ilvpalette*hilofallpal":[397,1]
,"ilvpalette*openclosefallpal":[397,1]
,"=hilofallpal":[397,1]
,"ilvhiloopenclosechartdisplayer*displayer":[397,1]
,"hilorisepal":[397,1]
,"opencloserisepal":[397,1]
,"hilofallpal":[397,1]
,"openclosefallpal)":[397,1]
,"contribution":[398,1]
,"3d-bar":[398,1]
,"ilvstacked3dbarchartdisplayer":[398,1]
,"ilvstackedpolygonchartdisplayer":[398,3]
,"isstacked100percent":[398,1]
,"setstacked100percent":[398,1]
,"stackedpolygon.cpp":[398,1]
,"llvstackedchartdisplayer":[398,1]
,"ilvstackedchartdisplayer*stackeddisplayer":[398,2]
,"palettes)":[398,3,399,1]
,"ilvabstractchartdisplayer*model":[398,1]
,"(model":[398,1]
,"polygondisplayerfactory*factory":[398,1]
,"polygondisplayerfactory":[398,4]
,"stackeddisplayer":[398,1]
,"(factory":[398,1]
,"ilvchartdisplayerfactory*copy":[398,1]
,"ilvabstractchartdisplayer*createdisplayer":[398,1]
,"(ilvcompositechartdisplayer*parent":[398,1]
,"ilvuint":[398,2,400,3,409,4,412,1,433,1,435,1,436,2,553,1]
,"idx":[398,1,577,1]
,"ilvpalette":[398,2]
,"*palette)":[398,2]
,"ilvchartdisplayerfactory*polygondisplayerfactory":[398,1]
,":copy":[398,1]
,"ilvabstractchartdisplayer*polygondisplayerfactory":[398,1]
,"createdisplayer":[398,1]
,"(ilvcompositechartdisplayer*\u002F*parent":[398,1]
,"\u002F*idx":[398,1]
,"ilvsidebysidechartdisplayer":[399,4]
,"ilvsidebysidebarchartdisplayer":[399,4]
,"ilvpalette*palettes":[399,1]
,"palegreen":[399,1]
,"ilvsidebysidechartdisplayer*sidebysidedisplayer":[399,1]
,"(ilvabstractchartdisplayer*displayer":[400,2]
,"ilvchartcoordinateinfo*ordinateinfo":[400,2,414,1]
,"=ilvlastpositionindex)":[400,2]
,"ilvchartdataset*const*datasets":[400,1]
,"passing":[400,1,411,1,414,1,428,1,430,1,432,1,435,1,449,1,481,1,501,1,619,1]
,"(scatterdisplayer":[400,1]
,"dataset)":[400,1]
,"[4]":[400,1]
,"=lowvaluesdataset":[400,1]
,"=highvaluesdataset":[400,1]
,"=openvaluesdataset":[400,1]
,"[3]":[400,1]
,"=closevaluesdataset":[400,1]
,"(hilodisplayer":[400,1]
,"(available":[401,1]
,"displayers)":[401,1]
,"treated":[402,1,486,1]
,"ilvchartdatapointinfo":[402,2]
,"ilvchartdatagraphicinfo":[402,3]
,"ilvchartgradientpointinfo":[402,1,403,3]
,"gradient":[402,1,403,1]
,"ilvpointinfocollection":[402,1]
,"ilvpointinfomap":[402,4]
,"arrays":[402,1]
,"ilvpointinfoarray":[402,3]
,"ilvpointinfosingleton":[402,1]
,"introduced":[402,1,541,1,563,1,570,1]
,"pointinfo.cpp":[402,1]
,"ilvchartdatapointinfo*pointinfo":[402,1]
,"ilvtopright":[402,1]
,"\u0022)))":[402,1]
,"setpointinfocollection":[402,2]
,"setpointinfo":[402,3]
,"pointinfo)":[402,3]
,"getpointinfocollection":[402,2]
,"chart1->":[402,3]
,"(2)->":[402,2]
,"(2)":[402,1,547,1,603,1]
,"figures":[402,1]
,"(point":[402,2,481,2]
,"determined":[403,1,413,2,587,1]
,":graphicalrepresentationbydatapoint":[403,1]
,":setapplypaletteafterpoint":[403,1]
,"gradations":[403,1]
,"ilarray":[403,2]
,"={0":[403,1]
,"100}":[403,1]
,"ilvcolor":[403,1]
,"*col":[403,1]
,"colors.add":[403,3]
,"(col)":[403,3]
,"col":[403,2,562,6,577,2]
,"gradientinfo":[403,1]
,"(values":[403,1]
,"colors)":[403,1]
,"intermediate":[403,1,436,1,465,1,482,3,489,1,495,3,498,3]
,"updaters":[405,1,409,2,411,1]
,"ilvsinglescaledisplayer":[406,1,408,1,409,3,422,1,425,1]
,"isfixedtoposition":[407,1]
,"getrelativeposition":[407,1]
,"setrelativeposition":[407,3]
,"getcrossingvalue":[407,1]
,"setcrossingvalue":[407,2]
,"ilvmindataposition":[407,1]
,"getdraworder":[407,1,421,1,424,1]
,"setdraworder":[407,1,421,1,424,1]
,"ilvdrawabove":[407,1,421,1,424,1]
,"isalwaysvisible":[407,1]
,"setalwaysvisible":[407,1]
,"fixing":[407,2,411,2]
,":setrelativeposition":[407,1]
,"fixes":[407,3]
,"-10":[407,1]
,"scaledisplayer->":[407,3,409,1,422,1,425,1]
,"(ilvmindataposition":[407,1]
,"-10)":[407,1]
,"(ilvmaxdataposition)":[407,1]
,":setcrossingvalue":[407,1]
,"scaledisplayer":[407,1]
,"2.0":[407,1,447,1]
,"otherscaledisplayer":[407,1]
,"otherscaledisplayer)":[407,1]
,"repre":[407,1]
,"sentations":[407,1]
,"(ilvdrawabove":[407,1,421,1,424,1]
,"underneath":[407,1,421,1,424,1,440,1,531,2,534,1]
,"(ilvdrawbelow":[407,1,421,1,424,1]
,":setdraworder":[407,1,421,1,424,1]
,"(*)":[409,1]
,"getstepsupdater":[409,1]
,"getstepscount":[409,1]
,"getsubstepscount":[409,1]
,"gettotalsubstepscount":[409,1]
,"getstepunit":[409,1]
,"getsubstepunit":[409,1]
,"getsteplabelscount":[409,1]
,"getsteplabel":[409,1]
,"getsteplabels":[409,1]
,"setsteplabel":[409,1]
,"*setsteplabels":[409,1]
,"getsteplabelformat":[409,1]
,"getvaluetolabelcb":[409,1]
,"getvaluetolabelcbdata":[409,1]
,"setvaluetolabelcb":[409,2]
,"ilvdefaultsteplabelformat":[409,1]
,"getticklayout":[409,1]
,"setticklayout":[409,1]
,"getlabellayout":[409,1]
,"setlabellayout":[409,1]
,"tickoutside":[409,3]
,"labeloutside":[409,3]
,"ilvdefaultscaleoffset":[409,1]
,"getmajorticksize":[409,1]
,"setmajorticksize":[409,1,410,1]
,"getminorticksize":[409,1]
,"setminorticksize":[409,1,410,1]
,"getsteplabelsizes":[409,1]
,"ilvdefaultscalemajorticksize":[409,1]
,"ilvdefaultscaleminorticksize":[409,1]
,"getsteplabelangle":[409,1]
,"setsteplabelangle":[409,1]
,"getsteplabelspalette":[409,1]
,"setsteplabelspalette":[409,1]
,"isdrawinglabeloncrossings":[409,1]
,"isdrawingoverlappinglabels":[409,1]
,"drawoverlappinglabels":[409,1]
,"aremajorticksvisible":[409,1]
,"setmajorticksvisible":[409,1]
,"areminorticksvisible":[409,1]
,"setminorticksvisible":[409,1]
,"aresteplabelsvisible":[409,1]
,"setsteplabelsvisible":[409,1]
,"isaxisoriented":[409,1]
,"getarrowwidth":[409,1]
,"setarrowwidth":[409,1]
,"getarrowlength":[409,1]
,"setarrowlength":[409,1]
,"ilvdefaultscalearrowwidth":[409,1]
,"ilvdefaultscalearrowlength":[409,1]
,"getaxislabel":[409,1]
,"getaxislabeloffset":[409,1]
,"setaxislabeloffset":[409,1]
,"getaxislabelsizes":[409,1]
,"2*ilvdefaultscaleoffset":[409,1]
,"getaxispalette":[409,1]
,"setaxispalette":[409,1]
,"getaxislabelpalette":[409,1]
,"setaxislabelpalette":[409,1]
,"isaxisvisible":[409,1]
,"setaxisvisible":[409,1]
,":getstepsupdater":[409,1]
,"numerical":[409,1,598,1]
,":getsteplabelformat":[409,1]
,":setsteplabels":[409,1]
,"ilvvaluetolabelcb":[409,1]
,"char*(*ilvvaluetolabelcb":[409,1]
,":setvaluetolabelcb":[409,1]
,"hours-minutes-seconds":[409,1]
,"char*hours_minutes_seconds":[409,1]
,"cbdata)":[409,1]
,"{char":[409,1,553,1,637,1]
,"[126]":[409,1]
,"modulo":[409,2]
,"(value":[409,1]
,">=3600)":[409,1]
,"{hours":[409,1]
,"=(ilvuint)":[409,2]
,"\u002F3600":[409,1]
,"3600":[409,1]
,"{modulo":[409,1]
,"=value":[409,1]
,"(modulo":[409,1]
,">=60)":[409,1]
,"{minutes":[409,2]
,"=modulo":[409,3]
,"\u002F60":[409,1]
,"(buffer":[409,1,553,1,644,1]
,"d-%":[409,2]
,"seconds)":[409,1,485,1]
,"ilcopystring":[409,1]
,"(buffer)":[409,1]
,"(hours_minutes_seconds)":[409,1]
,"ticklayout":[409,1]
,"tickinside":[409,1]
,"extend":[409,5,489,1,504,1,540,2,546,1,550,1,638,1]
,"tickcross":[409,1]
,"cross":[409,1,479,1,487,1,488,2,489,2,541,1]
,":setticklayout":[409,1]
,"labellayout":[409,1]
,"labelinside":[409,1]
,":setlabellayout":[409,1]
,":drawlabeloncrossings":[409,1]
,":drawoverlappinglabels":[409,1]
,"ilvcoordinateinfo*coordinfo":[410,2]
,"ilvrectangularscaledisplayer*ordinatescaledisplayer":[410,1]
,"(coordinfo":[410,2]
,"ordinatescaledisplayer->":[410,1]
,"(ordinatescaledisplayer)":[410,1]
,"(ordinatescaledisplayer":[410,1]
,"0.1)":[410,1]
,"0.1":[410,1,630,1]
,"ilvcircularscaledisplayer*abscissascaledisplayer":[410,1]
,"abscissascaledisplayer->":[410,3]
,"(abscissascaledisplayer)":[410,1]
,"(abscissascaledisplayer":[410,1]
,"(45":[410,1]
,":fixstepscount":[411,2]
,"dat":[411,1]
,":setfirststepdata":[411,1]
,":setlaststepdata":[411,1]
,":setprecision":[411,2,427,1]
,":setautosubsteps":[411,1]
,":setstepsspacing":[411,1]
,"ilvlogscalestepsupdater":[411,1,415,1]
,"ilvzoomscalestepsupdater":[411,2,415,1]
,"zoomed":[411,1,415,1,428,2,511,1,531,1,558,1]
,"ilvzoomcoordinatetransformer":[411,2,415,2]
,"lens.cpp":[411,1,415,1]
,"$ilvhome\u002Fsamples\u002Fcharts\u002Flens\u002Fsrc":[411,1,415,1]
,"ilvtimescalestepsupdater":[411,3]
,"(seconds":[411,1]
,"calendar":[411,1,446,1,447,1]
,"(with":[411,1]
,"settimeunit":[411,1]
,"charts\u002Fdate.h":[411,1]
,":setautounit":[411,1]
,"stock.cpp":[411,1,436,1]
,"$ilvhome\u002Fsamples\u002Fchart\u002Finteractors\u002Fsrc":[411,1]
,"coordinate)":[412,1]
,"(ilvsinglescaledisplayer*scale)":[412,1]
,"(ilvabstractscaledisplayer*scale)":[412,1]
,"insertordinatescale":[412,1]
,"(ilvabstractscaledisplayer*scale":[412,1]
,"setordinatescale":[412,1]
,"(ilvuint":[412,1,440,1,544,1]
,"ilvabstractscaledisplayer*scale)":[412,1]
,"responsible":[413,1]
,":orientation":[413,1]
,"keeps":[413,1,470,1,481,1,487,1]
,"ilvxrightytop":[413,1]
,":setorientation":[413,1]
,"ilvcartesianprojector*projector":[413,1]
,"=(ilvcartesianprojector*)":[413,1]
,"(chart->":[413,2]
,"getprojector":[413,2]
,"projector->":[413,2]
,"setorientation":[413,1]
,":ilvxrightybottom)":[413,1]
,":getorientedclockwise":[413,1]
,":setorientedclockwise":[413,1]
,"ilvpolarprojector*projector":[413,1]
,"=(ilvpolarprojector*)":[413,1]
,"setorientedclockwise":[413,1]
,":getcoordinateinfo":[414,1]
,":getabscissainfo":[414,1]
,":getordinateinfo":[414,1]
,"considering":[414,2]
,":setuserdatamin":[414,1]
,":setuserdatamax":[414,1]
,":setuserdatarange":[414,1]
,":getdatamin":[414,1]
,":getdatamax":[414,1]
,":getdatarange":[414,1]
,"ilvabstractscaledisplayer*ordinatescale":[414,1]
,"getordinatescale":[414,1]
,"=ordinatescale->":[414,1]
,"getcoordinateinfo":[414,1,415,1]
,"ordinateinfo->":[414,1]
,"setuserdatarange":[414,1,439,2]
,"4))":[414,1]
,"ilvchartcoordinatetransformer":[415,2]
,"permitting":[415,1]
,"possibly":[415,1]
,"ilvsimplecharttransformer":[415,2]
,"defined)":[415,2]
,"ilvaffinecharttransformer":[415,1]
,"c_transformed":[415,2]
,"=log":[415,1]
,"\u002Flog":[415,1]
,"(base)":[415,1]
,"log":[415,1,539,1]
,"natural":[415,1,510,1]
,"logarithm":[415,1]
,"ilvchartcoordinateinfo*abscissainfo":[415,1]
,"=abscissascale->":[415,1]
,"abscissainfo->":[415,1]
,"settransformer":[415,1]
,"ilvlogscalestepsupdater*logupdater":[415,1]
,"logupdater)":[415,1]
,"ilvshadowrectangle":[417,1]
,"ilvchartlegenditem":[417,1]
,"isshowingframe":[418,1]
,"showframe":[418,1]
,"istransparent":[418,1]
,"settransparent":[418,1]
,"isautorecomputing":[418,1]
,"setautorecompute":[418,1]
,"isautofitting":[418,1]
,"setautofit":[418,1]
,"getitempalette":[418,1]
,"setitempalette":[418,1]
,"getlabelspacing":[418,1]
,"setlabelspacing":[418,1]
,"getitemspacing":[418,1]
,"setitemspacing":[418,1]
,"getboxwidth":[418,1]
,"setboxwidth":[418,1]
,"getboxheight":[418,1]
,"setboxheight":[418,1]
,"rearranged":[418,1]
,"arranged":[418,1,480,2,482,4,496,1,498,3]
,"systematically":[418,1,512,1]
,":setlegend":[419,1]
,"indicator":[420,1,423,1]
,"ilvabstractgriddisplayer":[420,1,421,2]
,"getmajorpalette":[421,1]
,"setmajorpalette":[421,1]
,"getminorpalette":[421,1]
,"setminorpalette":[421,1]
,"isdrawingminorlines":[421,1]
,"drawminorlines":[421,1]
,"(like":[421,1,424,1,553,1]
,"scale)":[421,1,424,1]
,":drawminorlines":[421,1]
,"ilvrectangulargriddisplayer":[422,2]
,"ilvradialgriddisplayer":[422,1]
,"ilvcirculargriddisplayer":[422,1]
,":creategriddisplayer":[422,1]
,"ilvabstractgriddisplayer*griddisplayer":[422,1]
,"=scaledisplayer->":[422,1,425,1]
,"creategriddisplayer":[422,1]
,"(referencescaledisplayer)":[422,1,425,1]
,"setgriddisplayer":[422,1]
,"(griddisplayer)":[422,1]
,"encapsulate":[422,1,425,1]
,":addabscissagrid":[422,1]
,":addordinategrid":[422,1]
,"crosses":[423,1,487,1]
,"ilvabstractchartcursor":[423,1,424,4]
,"isdrawingaxismark":[424,1]
,"drawaxismark":[424,1]
,"isdrawingdelimiter":[424,1]
,"drawdelimiter":[424,1]
,"xor":[424,2]
,"isdrawingghost":[424,1]
,"drawghost":[424,1]
,"getlabel":[424,1]
,"setlabel":[424,1,637,1]
,":getlabel":[424,1]
,"speed":[424,1,492,1]
,"crosshair)":[424,1]
,":drawghost":[424,1]
,"ilvrectangularchartcursor":[425,2]
,"ilvradialchartcursor":[425,1]
,"ilvcircularchartcursor":[425,1]
,":createcursor":[425,1]
,"ilvabstractchartcursor*cursordisplayer":[425,1]
,"createcursor":[425,1,438,1]
,"cursordisplayer->":[425,1]
,"(datavalue)":[425,1]
,"addcursor":[425,1]
,"(cursordisplayer)":[425,1]
,":addabscissacursor":[425,1]
,":addordinatecursor":[425,1]
,"response":[427,1,533,1,534,1]
,"ilvchartinteractor":[427,3]
,"ilvchartzoominteractor":[427,1,428,2,436,1]
,"ilvchartscrollinteractor":[427,1,429,1]
,"ilvchartpaninteractor":[427,1,430,1]
,"ilvchartcrosshairinteractor":[427,1,431,1]
,"ilvchartdatainteractor":[427,3,432,1,433,1,435,1]
,"deals":[427,1]
,"interactions":[427,1]
,"ilvchartdragpointinteractor":[427,1,432,2]
,"ilvcharthighlightpointinteractor":[427,2,433,3,434,1]
,"ilvchartinfoviewinteractor":[427,1,434,1]
,"ilvchartselectinteractor":[427,1,435,3]
,":getprecision":[427,1]
,"nonshared":[427,1,436,1]
,"drag-point":[427,1,432,4]
,"highlight-data-point":[427,1,433,2]
,"information-view":[427,1,434,2]
,"select-data-points":[427,1,435,2]
,"chartzoom":[428,1]
,"-left":[428,1]
,"-shift":[428,1]
,"zoom-in":[428,2]
,"zoom-out":[428,2]
,"zoom-in\u002Fzoom-out":[428,1,436,1]
,"render":[428,1,549,1]
,"smooth":[428,1,439,1,440,2]
,"transition":[428,1]
,":setzoomsteps":[428,1]
,"chartscroll":[429,1,436,1]
,"chartpan":[430,1,436,1]
,"chartcrosshair":[431,1]
,"movement":[431,1,486,1]
,"chartdragpoint":[432,1]
,"opaque":[432,2]
,"ghost":[432,2]
,"setopaque":[432,1]
,"charthighlightpoint":[433,1]
,":setaction":[433,1,435,1]
,":action":[433,1,435,1]
,"(*action":[433,1,435,1]
,"(ilvchartgraphic*chart":[433,1,435,1]
,"ilvabstractchartdisplayer*disp":[433,1,435,1]
,"pointindex":[433,1,435,1]
,"highlight)":[433,1]
,"chartselect":[435,1]
,"select)":[435,1]
,"ilvchartinteractormanager":[436,3]
,"addinteractor":[436,5]
,"(ilvchartinteractor*interactor":[436,1]
,"position=ilvlastpositionindex)":[436,2]
,"char*name":[436,1,544,1,553,1,637,1]
,"demonstrates":[436,1,533,1]
,"$ilvhome\u002Fsamples\u002Fcharts\u002Finteractors\u002Fsrc":[436,1]
,"ilvchartinteractormanager*intermgr":[436,1]
,"ilvchartzoominteractor*zinter":[436,1]
,"\u002F\u002Fnot":[436,1]
,"zinter->":[436,1]
,"setzoomsteps":[436,1]
,"(4)":[436,1,636,1]
,"intermgr->":[436,3]
,"(zinter)":[436,1]
,"(chart":[436,1,438,1]
,"intermgr)":[436,1]
,"improving":[437,1,440,1]
,"arriving":[438,1,439,2]
,"reacts":[438,1]
,":scrollmode":[438,1]
,"ilvscrollmodestop":[438,2]
,"ilvscrollmodeshift":[438,1,440,1]
,"decreasing":[438,1,482,1]
,"ratios":[438,2]
,"mode.)":[438,1,486,1]
,"ilvscrollmodecycle":[438,2]
,"cycle":[438,2,439,1,489,1]
,"cyclically":[438,1]
,"arrives":[438,1]
,":setscrollmode":[438,2]
,"0.25":[438,1]
,"scrolled":[438,1,439,1]
,":setscrollratio":[438,1]
,"(real-time":[439,1]
,"constantly":[439,1]
,"(shift":[439,1]
,"mode)":[439,1,481,1,485,1]
,"scroll1.cpp":[439,1]
,"coming":[439,1,543,1,554,1,631,1]
,"getabscissainfo":[439,1]
,"(0,8))":[439,1]
,"getordinateinfo":[439,1]
,"(minord":[439,1]
,"maxord))":[439,1]
,"setscrollmode":[439,1]
,"(ilvchartgraphic":[439,1]
,":ilvscrollmodeshift)":[439,1]
,"setscrollratio":[439,1]
,"(.5)":[439,1]
,"addpoints":[439,1,440,2]
,"(ilvtimer*timer":[439,1,440,2]
,"arg)":[439,1,440,2,637,1]
,"\u002F\u002Ftimer":[439,1,440,2]
,"{ilvchartgraphic*chart":[439,1,440,2]
,"=(ilvchartgraphic*)":[439,1,440,2]
,"=timer->":[439,1,440,2]
,"previouspoint":[439,1,440,2]
,"nextpoint":[439,1,440,2]
,"(iluint":[439,1,440,2,492,5,498,5]
,"<chart->":[439,1,440,2]
,"getdatasetscount":[439,1,440,2]
,"{dataset":[439,1,440,2]
,"getdataset":[439,1,440,2]
,"=dataset->":[439,1,440,2]
,"getdatacount":[439,1,440,2]
,"\u002F\u002Fget":[439,1,440,1,516,1]
,"(count":[439,1,440,2,553,1]
,"{dataset->":[439,1,440,2]
,"(count-1":[439,1,440,2]
,"previouspoint)":[439,1,440,2]
,"generatepoint":[439,1,440,2]
,"(previouspoint":[439,1,440,2]
,"nextpoint)":[439,1,440,2]
,"{nextpoint.x":[439,1,440,2]
,"nextpoint.y":[439,1,440,2]
,"0.5)":[439,1,440,2]
,"(nextpoint)":[439,1,440,2]
,"invalidated":[440,2]
,"redrawn":[440,2]
,"ilvgraphicholder":[440,1]
,"modified)":[440,1]
,"initredraws":[440,5]
,"redrawviews":[440,6]
,"redraw":[440,3,454,1,465,2,637,1]
,"fast":[440,7,458,1,480,1,481,1,485,3,487,2,572,1]
,"port":[440,2]
,"alone":[440,1]
,"scroll2.cpp":[440,1]
,":enablefastscroll":[440,1]
,"speeds":[440,1]
,"limitations":[440,1,479,1,487,1,490,1,493,1]
,"polygonal":[440,2,492,2]
,"drastically":[440,1]
,"additions":[440,2]
,"processed":[440,1,448,1,449,1,450,1,553,1]
,"startbatch":[440,1]
,"<nbaddedpts":[440,1]
,"{\u002F\u002Fget":[440,1,560,1]
,"endbatch":[440,1]
,"scroll3.cpp":[440,1]
,":redrawwhennotified":[441,1]
,":updateandredraw":[441,1]
,"derives":[443,1,549,1]
,"dtd":[443,1]
,"version=\u0022":[443,3]
,"encoding=\u0022":[443,2]
,"utf-8":[443,2]
,"chartdata":[443,2]
,"+)>":[443,2]
,"attlist":[443,6]
,"xmlns:ilvchart":[443,1]
,"cdata":[443,6]
,"http:\u002F\u002Fwww.roguewave.com\u002Fproducts\u002Fjviews\u002Fchart":[443,1]
,"required>":[443,3]
,"(series":[443,1]
,"xseries":[443,1,445,1]
,"idref":[443,2]
,"implied>":[443,3]
,"((value":[443,1]
,"valueslist)*":[443,1]
,"property*)>":[443,1]
,"dateformat":[443,1]
,"(double":[443,1]
,"date)":[443,1]
,"pcdata)>":[443,2]
,"valueslist":[443,2,444,1,447,1]
,"entity":[443,1,455,1]
,"propertyext":[443,2]
,"pcdata":[443,1]
,";)*>":[443,1]
,"seriesref":[443,2]
,"empty>":[443,1]
,"ref":[443,1]
,"(ds_a":[443,1]
,"ds_b)":[443,1]
,"xvalues":[443,1]
,"(ds_c)":[443,1]
,"<pre>":[443,1]
,"<chartdata":[443,1]
,"0.3":[443,1]
,"<data>":[443,1,445,1]
,"<series":[443,4,445,1,449,1,450,2]
,"id=\u0022":[443,4,445,1,450,2]
,"ds_a":[443,1]
,"type=\u0022":[443,4,450,2]
,"<valueslist>":[443,4,445,1,447,2,449,1,450,2]
,"0.0,8.0,6.0,13.0,22.0,21.0,19.0,28.0,27.0,23.0":[443,1]
,"<\u002Fvalueslist>":[443,4,445,1,447,3,449,1,450,2]
,"<\u002Fseries>":[443,4,445,1,446,1,449,1,450,2]
,"ds_b":[443,1]
,"0.0,9.0,11.0,14.0,11.0,16.0,19.0,21.0,12.0,12.0":[443,1,447,1]
,"<\u002Fdata>":[443,2,445,1]
,"<data":[443,1,445,1]
,"xseries=\u0022":[443,1,445,1]
,"x_ds_c":[443,2,445,2,449,1,450,2]
,"0.0,2.0,4.0,6.0,8.0,10.0,12.0,14.0,16.0,18.0":[443,1]
,"ds_c":[443,1]
,"0.0,0.0,6.0,3.0,0.0,2.0,9.0,18.0,9.0,5.0":[443,1]
,"<\u002Fchartdata>":[443,1]
,"<\u002Fpre>":[443,1]
,"tags":[444,2,590,4]
,"paragraphs":[444,1,481,1,489,1]
,"valueoperator":[444,1,448,1]
,"attribute":[445,1,447,1,467,1,468,1,537,1,538,1,544,3,545,1,548,2,550,1,553,1,576,2,577,2,579,1,580,1,585,1,597,2,600,2]
,"<series>":[446,1]
,"formed":[446,1,458,1,598,1,619,2]
,"(\u2019_\u2019)":[446,1]
,"dd\u002Fmm\u002Fyy":[446,1,447,1]
,"(31\u002F12\u002F2001)":[446,1]
,"ilvxmlvaluelistprocessor":[446,1,450,1]
,"format)":[447,1,590,1]
,"<valueslist":[447,1]
,"delimiter=\u0022":[447,1]
,"6.0":[447,1]
,"9.0":[447,2]
,"18.0":[447,1]
,"5.0":[447,1]
,"<valueoperator>":[448,2]
,"ilvxmlpropertyreader":[448,1,449,2]
,"<property":[448,1,449,1]
,"name=\u0022":[448,1]
,"<\u002Fproperty>":[448,1,449,1]
,"<\u002Fvalueoperator>":[448,1]
,"id=\u201D":[449,1]
,"name=\u201D":[449,1]
,"<property>":[449,1]
,"reader":[449,5,518,1,520,1,521,1,533,1,540,5,551,2,553,6,557,9,560,2,573,6,574,1,576,10,577,5,578,1,580,1,582,1,584,3,585,1,589,2,591,4,592,1,596,1,597,1,598,3,599,1]
,"registerpropertyreader":[449,1]
,"prior":[449,1]
,":parse":[449,1]
,"encounters":[449,1]
,"readproperty":[449,3]
,"ilvxmlproperty":[449,3]
,"invoke":[449,1]
,"deriving":[449,1]
,"overriding":[449,1]
,"turns":[449,1]
,"ilxmlelement":[449,1]
,"processing":[450,1,455,1,479,1,487,1,490,1]
,"treatment":[450,1,486,2]
,"processor":[450,2]
,"processvaluelist":[450,1]
,":registervaluelistprocessor":[450,1]
,"my_type":[450,3]
,"parsed":[450,1]
,"myvaluelistprocessor":[450,1]
,"xmlchartdata->":[450,2]
,"registervaluelistprocessor":[450,2]
,"(ilstring":[450,2]
,"myvaluelistprocessor)":[450,1]
,"particularly":[450,1,455,1,486,1,489,1,564,1,582,1]
,"parse":[450,2]
,"(dd\u002Fmm\u002Fyy":[450,1]
,"ilvxmldatelistprocessor":[450,2]
,":parsedate":[450,1]
,"supposing":[450,1]
,"01dec90,12jan91,14jul91,25sep91,15aug92":[450,1]
,"mydatelistprocessor":[450,1]
,"parsedate":[450,1]
,"mydatelistprocessor)":[450,1]
,"samples\u002Fxml":[450,1]
,"developing":[451,1,518,1]
,"incorporate":[451,1,518,1]
,"fundamentals":[451,1,518,1]
,"underlie":[451,1,518,1]
,"algorithms":[451,3,453,2,454,8,458,4,459,3,461,3,463,2,464,2,465,1,466,1,469,1,471,1,472,3,473,1,475,2,476,7,477,4,478,3,499,1,502,3,503,3,504,6,505,1,506,2,510,1,512,4,516,2,517,9]
,"layouts":[451,2,454,1,455,1,461,1,469,1,473,1,474,2,479,1,481,4,482,1,486,2,489,4,492,3,495,4,498,3,517,1]
,"laying":[451,3,458,1,460,2,489,1,499,2,505,2,506,1,507,1,510,1]
,"non-views":[451,1,454,1,460,1,499,1,503,1,505,1,506,1,507,1]
,"graphs":[451,1,453,3,455,2,457,2,458,3,460,1,464,1,476,10,479,3,484,1,485,1,487,7,489,1,490,3,493,2,496,1,499,1,501,1,502,1,503,1,505,1,506,2,510,1,517,3]
,"nonzoomable":[451,1,499,1,505,1,510,2,511,3,512,4,513,2,515,3]
,"interconnecting":[453,1]
,"commonly":[453,1,623,1,627,1]
,"organizational":[453,1]
,"flow":[453,2,455,2,479,3,480,2,481,2,482,18,483,7,486,7,487,2,488,2,489,18]
,"diagrams":[453,1,455,10,457,1,479,1,487,6,490,1]
,"telecom":[453,1,455,1,496,1]
,"genealogical":[453,1]
,"trees":[453,1,455,1,458,1,476,2,479,3,484,1,485,1,486,4]
,"heavily":[453,1]
,"interconnected":[453,1]
,"relationships":[453,1]
,"(also":[453,1,480,1]
,"edges":[453,1]
,"ready-to-use":[453,1,454,2,476,1]
,"visualization":[453,1,460,1]
,"messy":[453,1]
,"sophisticated":[453,1,520,1]
,"algorithm":[453,7,454,10,458,3,459,7,462,6,463,3,467,1,468,1,469,1,470,1,472,2,475,1,476,5,477,2,478,2,479,8,480,6,481,13,482,4,484,1,485,3,486,5,487,9,488,7,489,25,490,3,491,4,492,9,493,3,494,6,495,7,496,1,497,2,498,16,500,2,501,3,504,8,505,1,506,1,507,1,512,1,516,2,517,11,559,2,569,5,571,2]
,"readable":[453,2,457,1,458,1,460,1,494,1,615,1]
,"ilvlayout":[453,1]
,"ilvbus":[453,1,496,1]
,"bus":[453,2,454,1,455,1,475,1,476,2,477,1,478,1,496,10,497,6,498,31,517,6]
,"topologies":[453,1,476,1,496,2,497,1,498,1]
,"node)":[453,1,468,1,481,1,482,1,486,3,487,1,489,4,490,2,498,1,504,9,506,3]
,"ilvhierarchical":[453,1,487,1]
,"arranges":[453,2,479,4,480,1,482,1,483,1,484,1,486,1,487,1,490,1]
,"levels":[453,1,478,1,479,6,483,5,484,6,487,6,489,21,498,2]
,"ilvorthlink":[453,1,490,1]
,"reshapes":[453,1,479,1,490,1,498,1]
,"ilvrandom":[453,1,469,2,493,1,516,4]
,"randomly":[453,2,469,1,493,1,494,1]
,"region":[453,1,454,1,462,2,463,1,466,8,477,1,493,4,494,1,495,9,497,1,498,12,516,3,517,7,533,3,534,2,624,1]
,"ilvtree":[453,1,479,1]
,"drawings":[453,1,455,1,458,1,479,1,481,1,487,3,490,1]
,"distributed":[453,1,489,1,560,1]
,"exposed":[453,1]
,"symmetries":[453,1,458,1,487,1]
,"developed":[454,1,458,1,503,1,602,1]
,"hierarchical":[454,1,455,3,475,1,476,2,477,1,478,1,487,4,488,1,489,7,517,2]
,"views.)":[454,1]
,"meet":[454,1,458,2,477,1,516,1,520,1,571,1,582,1]
,"graphers":[454,1,460,1,503,2]
,"reports":[454,1,500,2]
,"layout-event":[454,1]
,"algorithm.)":[454,1]
,"exceeded":[454,1,464,2]
,"animation":[454,1,463,1,465,2,477,1]
,"iteration":[454,1,465,2,501,3]
,"preserve":[454,4,459,1,463,2,467,1,468,1,479,1,481,6,489,8,492,3,495,6,498,6,602,1,606,2]
,"pin":[454,2,459,1,489,1]
,"reshaped":[454,1,462,1,482,6,489,4,492,5,495,1,498,1,517,1]
,"generator":[454,1,463,1,469,4,477,1,478,1,495,5,516,3,517,1]
,"seed":[454,3,463,1,469,8,477,1,495,4,516,2,517,1]
,"randomly-generated":[454,1]
,"well-suited":[455,1,489,3]
,"networking":[455,1,496,1]
,"lan":[455,1]
,"(bus":[455,2]
,"electrical":[455,1,487,1,490,1,496,1]
,"engineering":[455,4,479,2,487,4,490,4,496,2]
,"(hierarchical":[455,10]
,"circuit":[455,1,487,1]
,"block":[455,1,487,1,490,1,496,1]
,"industrial":[455,2,487,1,490,1,496,1]
,"schematic":[455,1,487,1]
,"(orthogonal":[455,4]
,"equipment\u002Fresource":[455,1,490,1]
,"workflow":[455,1]
,"organization":[455,1,598,1]
,"(tree":[455,3]
,"pert":[455,1,487,1]
,"management\u002Fsoftware":[455,1,479,1,487,1,490,1]
,"(re-)":[455,1,479,1,487,1,490,1]
,"uml":[455,1]
,"knowledge":[455,1,479,1,487,1,490,1]
,"decision":[455,1]
,"wide":[455,1,457,1,460,1,476,1,479,1,482,1]
,"web":[455,2,479,1,645,6]
,"site":[455,1,479,1]
,"ilvgraphlayout":[456,3,461,7,462,16,463,6,464,6,465,4,466,9,467,7,468,7,469,8,470,2,472,3,477,1,481,4,485,1,489,4,492,3,495,5,498,4,500,7,501,2,504,4,505,2,516,3,517,2]
,"vertex":[457,1]
,"edge":[457,1]
,"connection.)":[457,1]
,"practical":[457,2,458,1]
,"frequently":[457,1,567,1]
,"networks":[457,1,517,1]
,"structures":[457,1]
,"benefit":[457,1,502,1,520,1,610,1,612,1]
,"theory":[457,1]
,"research":[457,1,575,1]
,"efficient":[457,1,479,1,487,1,490,1,552,1,569,1,572,1]
,"shortest":[457,1]
,"cost":[457,1,491,2,492,1,501,1]
,"lay":[457,1,460,1,462,1,476,2,489,1,499,1,502,1,505,1,507,1,516,1,517,2,633,1]
,"determining":[457,1,475,1,476,1]
,"(based":[457,1]
,"geographical":[457,1,498,1,533,1,612,1,614,1,637,1]
,"graph)":[457,1,515,1]
,"unreadable":[457,1]
,"meant":[457,1,596,1]
,"often":[457,2,458,2,462,1,478,1,481,1,487,1,489,2,503,1,526,1,575,1,610,1]
,"quality":[457,1,458,2]
,"subjective":[457,1]
,"qualifying":[457,1]
,"goal":[457,1]
,"behind":[457,1]
,"standards":[457,1,458,1,600,1]
,"easy":[457,2,496,1]
,"addresses":[458,1]
,"minimizing":[458,5]
,"bends":[458,1,487,2]
,"drawings)":[458,1]
,"maximizing":[458,2]
,"incident":[458,1,481,1,489,2,491,2]
,"meets":[458,1]
,"relatively":[458,1,487,3]
,"cycles)":[458,1]
,"mathematical":[458,1]
,"np-complete":[458,1,479,1,487,2]
,"grows":[458,1]
,"graph.)":[458,1]
,"optimal":[458,2,479,1,485,1,491,1,506,1,515,1]
,"mutually":[458,1]
,"contradictory":[458,1]
,"time-consuming":[458,2,485,2,487,1]
,"trade-offs":[458,1]
,"trivial":[458,1]
,"weights":[458,1,492,1]
,"multicriteria":[458,1]
,"optimization":[458,1,491,1,492,4,597,1]
,"heuristics":[458,1,479,1,485,1]
,"solutions":[458,1]
,"reasonably":[458,1]
,"employed":[459,1]
,"everything":[459,1]
,"intervention":[459,1]
,"perhaps":[459,1]
,"dynamically)":[459,1]
,"laid":[459,1,479,1,481,1,486,3,489,4,502,1,505,1,507,2,510,1,517,2]
,"semi-automatic":[459,1,467,1,468,1]
,"redone":[459,1]
,"scratch":[459,2,550,1]
,"incremental":[459,3,467,1,468,1,479,2,486,3]
,"stability":[459,1,479,1]
,"economize":[459,1]
,"cpu":[459,1]
,"nature":[459,1,569,1]
,"impossible":[459,1,487,2,489,2,602,1,606,1]
,"ilvgrapher":[460,1,462,1,480,1,482,2,488,1,489,4,491,1,492,2,494,1,495,1,497,1,498,1,499,1,502,2,503,1,504,3,505,5,507,4,508,2,510,4,511,3,512,4,513,1,514,1,515,3,540,1,556,1]
,"ilvlinkimage":[460,1,482,2,489,1,492,1,495,1,498,1,504,1]
,"arbitrary":[460,1,469,1,496,1,498,1]
,"manipulation":[460,1]
,"professional":[460,2,521,1]
,"core":[460,1,480,1,517,1]
,"customizable":[460,1,520,1]
,"contact":[460,1,536,1]
,"selections":[460,1]
,"printing":[460,1,607,2,613,1,615,1]
,"facilities":[460,1,547,1]
,"input\u002Foutput":[460,1,638,1,643,2]
,"(ilvtreelayout":[461,1]
,"ilvhierarchicallayout":[461,1,487,1,488,2,489,41,500,1,517,1]
,"ilvorthogonallinklayout":[461,1,462,1,473,1,490,1,491,2,492,16,500,1,501,1,517,1]
,"ilvrandomlayout":[461,1,469,2,493,1,494,2,495,4,500,2]
,"ilvbuslayout":[461,1,496,1,497,2,498,19,500,1,517,1]
,"despite":[461,1,479,1]
,"inherited":[461,1]
,"overridden)":[461,1]
,"instantiating":[462,1,472,1,597,1]
,"ilvorthogonallinklayout*layout":[462,1,473,1,491,1,501,1]
,"ilvgraphlayoutreport*layoutreport":[462,1,473,1,480,1,488,1,489,1,491,1,494,1,497,1,500,1,516,2]
,":attach":[462,1,504,1,505,1]
,"(ilvgrapher*grapher)":[462,1]
,"ilvgrapher*grapher":[462,1,480,1,488,1,491,1,494,1,497,1]
,"layout->":[462,1,473,2,480,5,481,3,482,3,483,1,484,3,485,5,486,2,488,3,489,10,491,3,494,2,497,3,501,2]
,"(grapher)":[462,1,466,1,473,1,480,1,488,1,489,1,491,1,494,1,497,1]
,"detaches":[462,1]
,":getgrapher":[462,1]
,":performlayout":[462,1,500,3,517,1]
,"ilvgraphlayoutreport*performlayout":[462,1]
,"verifies":[462,1]
,"performlayout":[462,1,472,1,473,1,480,1,486,1,488,1,489,2,491,1,494,1,497,1,500,2,516,2]
,":layout":[462,1,469,1,516,1]
,"implementing":[462,1,501,1,516,1,520,2,541,1,559,2,564,1,569,1,572,1,596,1,639,2]
,":performl":[462,1]
,"ayout":[462,1]
,"ilvgraphlayoutreport":[462,3,500,11,517,1]
,"subclass)":[462,1]
,"algorithm-dependent":[462,1]
,"detaching":[462,1,472,1]
,":detach":[462,1]
,"detach":[462,2,472,1,473,1,480,1,488,1,489,1,491,1,494,1,497,1]
,"cleaning":[462,1]
,"(properties":[462,1]
,"grapher\u2019s":[462,1]
,"reinitializes":[462,1]
,"decide":[463,1,600,1]
,"interprets":[463,1]
,"security":[464,1]
,"measure":[464,1]
,"iteratively":[464,1]
,":setallowedtime":[464,1,485,1]
,"(ilvruntimetype":[464,1]
,"ilvruntimetype":[464,1,500,1]
,":getallowedtime":[464,1]
,":islayouttimeelapsed":[464,1]
,"32.0":[464,1]
,":supportsallowedtime":[464,1]
,"iterative":[465,1]
,"pleasant":[465,1]
,"evolution":[465,1]
,"duration":[465,1,500,1]
,"step)":[465,1]
,":setanimate":[465,1]
,"(ilboolean":[465,1,467,1,468,1,469,1,470,1,492,1]
,"option)":[465,1,467,1,468,1,469,1,470,1,492,1]
,":isanimate":[465,1]
,":supportsanimation":[465,1]
,"(exactly":[466,4]
,"approximately)":[466,4]
,":setlayoutregion":[466,6]
,"(ilvview*view)":[466,1]
,"(ilvview*view":[466,1,564,1,637,2]
,"ilvrect&rect)":[466,2,484,1,485,1,504,1]
,":getlayoutregion":[466,1]
,"(ilvrect&rect)":[466,1]
,"ilvrect&)":[466,2]
,"(ilvview*":[466,1]
,"view)":[466,3,514,1,637,1]
,"(ilvview*)":[466,1]
,"x=0":[466,2]
,"y=0":[466,2]
,"behavior.)":[466,1]
,":supportslayoutregion":[466,1]
,"ilvview":[466,1,480,1,495,1,498,1,503,1,564,2,635,1]
,"pinned":[467,1,468,1,490,1]
,"performed)":[467,1,468,1]
,"reshape":[467,1,481,1,489,1,490,1,492,1,495,1,498,1]
,"fine":[467,1,468,1,513,1]
,"tunes":[467,1,468,1]
,"completed)":[467,1,468,1]
,"again)":[467,1,468,1]
,":setfixed":[467,1,468,1]
,":isfixed":[467,1,468,1]
,"link)":[467,1,482,1,489,2,504,4,596,1,597,1]
,":unfixalllinks":[467,1]
,"consideration":[467,1,468,1,470,1]
,":setpreservefixedlinks":[467,1]
,":ispreservefixedlinks":[467,1]
,":supportspreservefixedlinks":[467,1]
,":unfixallnodes":[468,1]
,":setpreservefixednodes":[468,1]
,":ispreservefixednodes":[468,1]
,":supportspreservefixednodes":[468,1]
,"parameters)":[469,1]
,"initializing":[469,1,607,1,610,1,643,1]
,"re-performing":[469,1]
,"chooses":[469,1,479,1,480,1,481,2,489,3,491,1,515,1,528,1]
,"ilvrandomlayout*layout":[469,1,494,1]
,"ilvrandom*random":[469,1,516,2]
,"=(layout->":[469,1]
,"isuseseedvalueforrandomgenerator":[469,1]
,"(layout->":[469,1,489,1]
,"getseedvalueforrandomgenerator":[469,1]
,":setseedvalueforrandomgenerator":[469,1]
,"(ilushort":[469,1]
,"seed)":[469,1]
,"ilushort":[469,1,583,1]
,":getseedvalueforrandomgenerator":[469,1]
,":setuseseedvalueforrandomgenerator":[469,1]
,":isuseseedvalueforrandomgenerator":[469,1]
,":supportsrandomgenerator":[469,1]
,":setusedefaultparameters":[470,1]
,":isusedefaultparameters":[470,1]
,"(ilvgrapher":[472,1,506,1]
,"(any":[472,1]
,"layoutsample1.cpp":[473,2]
,"<installdir>\u002Fsamples\u002Flayout\u002Fuserman\u002Flayoutsample1.cpp":[473,1]
,"<installdir>\u002Fsamples\u002Flayout\u002Fuserman\u002F<system>":[473,1]
,"<installdir>\u002Freadme.htm":[473,1]
,"nmake":[473,1,608,1,634,1]
,"dos":[473,1]
,"console)":[473,1]
,"workspace":[473,1]
,"userman.dsw":[473,1]
,"layoutsample1":[473,1]
,"\u002F\u002Fdeclare":[473,1]
,"\u002F\u002Fattach":[473,1,560,1]
,"\u002F\u002Fperform":[473,1,480,1,488,1,489,1,491,1,494,1]
,"=layout->":[473,1,480,1,481,1,486,1,488,1,489,5,491,1,494,1,497,1,500,1]
,"\u002F\u002Fprint":[473,1]
,"(optional)":[473,1]
,".8g":[473,1]
,"sec":[473,1]
,"layoutreport->":[473,2,480,1,488,1,491,1,494,1,497,1,500,1,516,4]
,"getlayouttime":[473,1]
,"getcode":[473,1,480,2,488,2,491,2,494,2,497,2,500,2]
,"\u002F\u002Fdetach":[473,1]
,"produces":[473,1,479,1,487,4,598,1]
,"populate":[474,1]
,"poor":[476,1]
,"suited":[476,2,533,1,582,1,602,1]
,"classifications":[476,1]
,"identifying":[476,1]
,"domain-independent":[476,2]
,"graphs\u002Ftrees":[476,1]
,"narrow":[476,1]
,"telecom-oriented":[476,1]
,"cycles":[476,1,480,1,486,1,487,3,489,1]
,"n\u002Fa":[477,1]
,"indices":[478,2,488,6,489,8,517,2,577,1]
,"priorities":[478,1,489,4]
,"segment":[478,1,489,1,492,4,498,2,541,1,542,1,548,1]
,"dimensional":[478,1,492,5,496,1,498,7]
,"ilvtreelayout":[479,1,480,2,481,19,482,24,483,3,484,11,485,7,486,5,500,1,517,1]
,"tip-over":[479,5,480,2,481,1,482,18,483,1,484,1,485,23,486,1]
,"leaf":[479,1,481,1,482,1,489,7]
,"1.3":[479,1,482,1,484,1]
,"non-trees":[479,1]
,"spanning":[479,4,480,9,481,1,486,2]
,"ignoring":[479,1,597,1]
,"directed":[479,2,481,1,486,1,487,1]
,"undirected":[479,2]
,"canonical":[479,1,481,1]
,"disconnected":[479,1,480,1,481,2,487,1,489,1,490,1,493,1,517,2]
,"treats":[479,1]
,"forest":[479,1]
,"domains":[479,2,487,2,490,2,496,2,606,1]
,"(organizational":[479,1]
,"(uml":[479,1,487,1]
,"graphs)":[479,1,487,2]
,"(decision":[479,1]
,"trees)":[479,1]
,"(web":[479,1]
,"maps)":[479,1]
,"(alternating":[479,1,482,1]
,"segments)":[479,1,482,1]
,"recursively":[479,1,482,1]
,"uniformly":[479,1,487,2]
,"partitions":[479,2,483,1,484,1]
,"circles":[479,1,480,1,484,7,529,1]
,"ellipses":[479,1,480,1,484,3]
,"neighbored":[479,1,482,3,486,2]
,"stable":[479,2]
,"scalable":[479,1,487,1,490,1]
,"nice":[479,1,487,1]
,"huge":[479,1,482,2]
,"hence":[479,1,481,2,484,1]
,"heuristic":[479,2,481,3,482,2,485,4,487,2]
,"calculate":[479,2,484,1,614,1]
,"neither":[479,1,484,1,486,1]
,"preserving":[479,1,489,1]
,"rare":[479,1]
,"perfectly":[479,1,534,1]
,"rotate":[479,1]
,"preserved":[479,1,485,1,486,1,489,1]
,"picks":[479,1,485,1]
,"fits":[479,1,480,1,485,1,516,1,596,1,597,2]
,"absolutely":[479,1]
,"fitting":[479,1]
,"computationally":[479,1]
,"infeasible":[479,1]
,"problem)":[479,1,487,2]
,"variations":[480,1]
,"pick":[480,1]
,"area)":[480,1]
,"slower":[480,1,517,2,597,1,623,1]
,"traverses":[480,1]
,"non-tree":[480,2,486,4]
,"4.1":[480,1,535,1,560,1]
,"4.2":[480,1,563,1,564,1]
,"4.3":[480,1]
,"siblings":[480,1,482,3,483,1]
,"subtree":[480,1,486,1]
,"branch":[480,1,482,4,484,1]
,"tree)":[480,1]
,"sketch":[480,2]
,"roughly":[480,1,482,1]
,"away":[480,1,481,1,484,1,613,1,631,1]
,"calculated":[480,1,481,2,488,2,489,16,614,1]
,"ilvview*view":[480,1,635,2]
,"100))":[480,1]
,"grapher->":[480,1,497,1]
,"addview":[480,1,564,1]
,"(view)":[480,1]
,"rootnode":[480,1]
,"ilvgraphic*rootnode":[480,1]
,"ilvtreelayout*layout":[480,1]
,"setroot":[480,1]
,"(rootnode)":[480,1]
,"setflowdirection":[480,1,488,1]
,"(ilvright)":[480,1]
,"setglobalalignment":[480,1]
,"(ilvlayoutcenteralignment)":[480,1]
,"(layoutreport->":[480,1,488,1,491,1,494,1,497,1,500,1]
,"!=ilvlayoutreportlayoutdone)":[480,1,488,1,491,1,494,1,497,1]
,"ilvwarning":[480,1,488,1,491,1,494,1,497,1,500,1,547,1,549,1,553,1,557,2]
,"d\u005Cn":[480,1,488,1,491,1,494,1,497,1,500,1]
,"\u002F\u002Fif":[480,1,488,1,489,1,491,1,494,1,497,1,557,1]
,"subject":[480,1,488,1,491,1,494,1,497,1]
,"\u002F\u002Fonce":[480,1,488,1,491,1,494,1,497,1]
,"topic":[481,1,489,1,492,1,495,1,498,1,540,1]
,"modes)":[481,2]
,"elapsed":[481,2,489,2,492,1,517,1]
,"early":[481,1,489,1]
,"route":[481,1,489,1]
,"undesired":[481,1,489,1]
,"experts":[481,2,482,2,484,2,486,1]
,"compass":[481,6,482,4,483,1,484,2,486,1,554,1]
,"directions":[481,6,482,5,483,2,484,1,486,1,489,3,602,1]
,"influenced":[481,1,482,1]
,"prominent":[481,1]
,"top-down":[481,1,482,1]
,"calculates":[481,1,489,5]
,"preferences":[481,1]
,"preference":[481,11]
,"incoming":[481,1,489,1]
,"outgoing":[481,1]
,"lowest":[481,1,489,2]
,"influence":[481,1]
,":setroot":[481,3]
,"maximal":[481,1,484,2,486,3,489,3]
,"illist*ilvtreelayout":[481,2,486,3]
,":getspecroots":[481,1]
,"necessarily":[481,1,485,1,489,1,553,1,576,1]
,":getcalcroots":[481,1]
,"iterate":[481,1,486,1,489,1,552,1,553,1,576,1]
,"ilvlink*link":[481,1,486,1]
,"getcalcroots":[481,1]
,"getfirst":[481,1,486,1,516,2]
,"(link)":[481,1,486,1]
,"{root":[481,1]
,"=(ilvgraphic*)":[481,1]
,"link->":[481,1,486,1]
,"=link->":[481,1,486,1]
,"getnext":[481,1,486,1,516,1,571,1]
,":setrootpreference":[481,1]
,"preference)":[481,1]
,"heuristically":[481,1]
,"10000":[481,2]
,"becoming":[481,1]
,"recalculate":[481,1]
,"setpreference":[481,1]
,"(node":[481,1,489,5,516,2]
,"-1)":[481,1,489,1]
,"10)":[481,2,585,1]
,":setposition":[481,2]
,"ilfalse)":[481,1,516,2,585,1,591,1,615,1,616,1,635,1,636,1,637,1]
,"ilvpoint*ilvtreelayout":[481,1]
,":getposition":[481,1]
,":isrootposition":[481,1]
,"explanations":[481,1]
,"north":[481,7,483,5,484,2,486,1,553,1,585,2,612,1]
,"south":[481,6,483,5,484,2,524,1,553,1,612,1]
,"east":[481,4,482,2,486,10,585,2]
,"west":[481,4,482,2,486,5]
,"pole":[481,2,553,2,641,2,643,1]
,"nonradial":[481,1]
,"cartographic":[481,1,518,1,519,1,520,2,524,1,540,7,541,5,542,2,548,1,551,3,552,1,555,1,556,1,557,2,560,1,564,1,567,1,572,1,590,1,619,1,635,1]
,"globe":[481,2,602,1,603,1,604,1,605,1]
,"looking":[481,1]
,"justification":[481,1,483,7,484,5,488,1,489,7]
,"east-west":[481,1,486,8]
,"neighboring":[481,1,482,1]
,":setlayoutmode":[481,1,482,1,483,1,484,2,485,4]
,"(ilvtreelayoutmode":[481,1]
,"ilvtreelayoutmode":[481,2]
,":getlayoutmode":[481,1]
,"illist":[481,2,504,7,571,1]
,"ilviews\u002Flayout\u002Ftree.h":[481,1]
,"freemode":[481,1]
,"levelmode":[481,1]
,"radialmode":[481,1]
,"alternatingradialmode":[481,1]
,"alternating":[481,1,484,8,492,1]
,"tipovermode":[481,1]
,"tiprootsovermode":[481,1]
,"tipleavesovermode":[481,1]
,"tiprootsandleavesovermode":[481,1]
,"parent)":[482,1,483,1]
,"justified":[482,2,483,5,489,2]
,"branches":[482,3]
,"parents)":[482,1]
,"(ilvtreelayoutfreemode)":[482,1]
,":setflowdirection":[482,1,489,1]
,"(ilvdirection":[482,1,489,2]
,"direction)":[482,1,489,1]
,"ilvright":[482,1,489,2]
,"ilvleft":[482,1,489,2]
,"ilvbottom":[482,1,489,2]
,"ilvtop":[482,1,489,2]
,"ilvdirection":[482,1,489,2]
,":getflowdirection":[482,1,489,1]
,"alignments":[482,6,485,1]
,":setglobalalignment":[482,2]
,"(ilvlayoutalignment":[482,1,483,1]
,"alignment)":[482,2]
,"ilvlayoutcenteralignment":[482,2,483,1]
,"ilvlayoutbordercenteralignment":[482,2]
,"varies":[482,1]
,"ilvlayouteastalignment":[482,2]
,"easternmost":[482,1]
,"ilvlayoutwestalignment":[482,2]
,"westernmost":[482,1]
,"ilvlayouttipoveralignment":[482,2]
,"sequentially":[482,1]
,"ilvlayoutmixedalignment":[482,2]
,"ilvlayoutalignment":[482,3,483,1]
,":getglobalalignment":[482,1]
,"mixed":[482,6,489,1]
,":setalignment":[482,2]
,":getalignment":[482,1]
,"arrangement":[482,2]
,"sequential":[482,1,576,1]
,"balance":[482,1,485,1]
,"(ilvlayoutmixedalignment)":[482,1]
,"(parent":[482,1]
,"ilvlayouttipoveralignment)":[482,1]
,"furthermore":[482,1,485,1]
,"offers":[482,1,596,1]
,"yielding":[482,1]
,"ilvpolylinelinkimage":[482,2,489,1,492,1,495,1,498,1]
,"ilvdoublesplinelinkimage":[482,2,489,1,492,1,498,1]
,"ilvgrapheradapter":[482,1,504,2,505,6,507,10,508,6,512,2,513,4,514,3,515,11]
,":ensurereshapeablelinks":[482,1,489,1,492,1]
,"connector":[482,1,489,11,492,1]
,":setgloballinkstyle":[482,1,489,1]
,"(ilvlayoutlinkstyle":[482,1,489,1,492,1,495,1,498,1]
,"style)":[482,2,489,3,492,1,495,1,498,1]
,"ilvlayoutnoreshapelinkstyle":[482,2,489,2,495,1,498,1]
,"ilvlayoutstraightlinelinkstyle":[482,2,489,2,495,2,498,2]
,"ilvlayoutorthogonallinkstyle":[482,2,489,2,492,1]
,"ilvlayoutmixedlinkstyle":[482,1,489,1]
,"occurring":[482,1,486,1]
,"ilvlayoutlinkstyle":[482,3,489,3,492,1,495,1,498,1]
,"getlinkstyle":[482,1]
,"ilvlayoutmixedstyle":[482,1]
,":setlinkstyle":[482,1,489,1,492,1,495,1,498,1]
,":getlinkstyle":[482,1,489,1,492,1,495,1,498,1]
,"ilvonelinkimage":[482,1,489,1,492,1]
,"ilvdoublelinkimage":[482,1,489,1,492,1]
,"ilvonesplinelinkimage":[482,1,489,1,492,1]
,"minimal":[482,3,483,1,484,3,489,12,576,1]
,"sibling":[482,1,484,1,486,1]
,":setparentchildoffset":[482,1,484,1]
,"(ilvpos":[482,4,484,3,489,6]
,"offset)":[482,4,484,3,489,6,492,1,498,3]
,":setsiblingoffset":[482,1,484,1]
,":setbranchoffset":[482,1,484,1]
,":settipoverbranchoffset":[482,1]
,"ilvpos":[482,4,489,6,516,6,572,2]
,":getparentchildoffset":[482,1]
,":getsiblingoffset":[482,1]
,":getbranchoffset":[482,1]
,":gettipoverbranchoffset":[482,1]
,"fork":[482,4]
,"bend":[482,1,487,1,488,3,489,9]
,"forks":[482,2]
,":setorthforkpercentage":[482,1]
,"percentage)":[482,2]
,":getorthforkpercentage":[482,1]
,"deficiency":[482,2,484,2]
,"increasing":[482,1,484,1]
,"influences":[482,1,484,1]
,":setoverlappercentage":[482,1]
,":getoverlappercentage":[482,1]
,"(ilvtreelayoutlevelmode)":[483,1]
,"offsets":[483,1,484,2,641,1]
,"parent-child":[483,1,484,2]
,"exact":[483,1,491,1,554,1]
,"approximately":[483,2,489,2,495,1,498,1,559,1,622,1]
,"y-coordinate":[483,2,488,3,489,2]
,"converse":[483,1,486,1]
,":setleveljustification":[483,1,489,1]
,"justification)":[483,1,489,1]
,":getleveljustification":[483,1,489,1]
,"ilvlayoutnorthalignment":[483,1]
,"ilvlayoutsouthalignment":[483,1]
,"(ilvtreelayoutradialmode)":[484,2]
,"root)":[484,3]
,"justifications":[484,1]
,"circumference":[484,1]
,"considerable":[484,1]
,"(ilvtreelayoutalternatingradialmode)":[484,1]
,"arranging":[484,1]
,"ilvabstractview":[484,1]
,":setaspectratio":[484,3,485,3]
,"ilvabstractview*view)":[484,1,485,1]
,"aspectratio":[484,1]
,"=width\u002Fheight":[484,1]
,"aspectratio)":[484,1,485,1]
,":getaspectratio":[484,1]
,"distances":[484,1,489,1,602,2,606,1,612,1,613,1,643,2]
,"tangential":[484,1]
,"4.17":[484,1]
,"cover":[484,1]
,"nearly":[484,1]
,"rays":[484,1]
,"outermost":[484,1]
,":setmaxchildrenangle":[484,1]
,"angle)":[484,1]
,":getmaxchildrenangle":[484,1]
,"180":[484,2,489,1,597,1]
,"unrestricted":[484,1]
,"(60)":[485,1]
,"short":[485,1,487,1,489,1]
,"iterations":[485,1,492,5,642,1]
,"possibilities":[485,2,596,2]
,"strategies":[485,7]
,"strategy":[485,8,600,1]
,"(ilvtreelayouttipleavesovermode)":[485,1]
,"additionally":[485,3,505,1]
,"(ilvtreelayouttiprootsovermode)":[485,1]
,"(ilvtreelayouttiprootsandleavesoverm":[485,1]
,"ode)":[485,1]
,"slowest":[485,1]
,"compromise":[485,1,606,1]
,"(ilvtreelayouttipovermode)":[485,1]
,"fastest":[485,1]
,"yield":[485,1]
,"disjoint":[485,1]
,"unusual":[485,1]
,"configurations":[485,1]
,"tricks":[486,1]
,"featured":[486,1]
,"neighbors":[486,7]
,"sequences":[486,2,489,3]
,"interactive":[486,4,527,1]
,"perpendicular":[486,1]
,"neighbor":[486,14]
,"technically":[486,2]
,"annotated":[486,2]
,"[25]":[486,2]
,"[24]":[486,2]
,":seteastwestneighboring":[486,1]
,"eastnode":[486,1]
,"westnode)":[486,1]
,":setwesteastneighboring":[486,1]
,"westnode":[486,1]
,"eastnode)":[486,1]
,":geteastneighbor":[486,1]
,":getwestneighbor":[486,1]
,"maximally":[486,1]
,"(strictly":[486,1]
,"nonetheless":[486,1]
,"chains":[486,3]
,"visualize":[486,3]
,"backward":[486,1]
,"permanently":[486,1,552,1]
,"sake":[486,1]
,"efficiency":[486,1,490,1,491,1,505,1,506,2,522,1]
,"links)":[486,1,489,1]
,":setcategorizinglinks":[486,1]
,"setcategorizinglinks":[486,1]
,":getcalcforwardtreelinks":[486,1]
,":getcalcbackwardtreelinks":[486,1]
,":getcalcnontreelinks":[486,1]
,"categorizing":[486,1]
,"getcalcnontreelinks":[486,1]
,"{linkimage":[486,1]
,"=(ilvlinkimage*)":[486,1,509,1]
,"linkimage":[486,1]
,"out-of-date":[486,1,489,1]
,"preserves":[486,1]
,"reverse":[486,1,620,1]
,"((w":[486,1]
,"1)*i":[486,1]
,"bottom)":[486,1,489,1]
,"1)*i)":[486,1]
,"diagonal":[486,1]
,"=w2":[486,1]
,"d*i":[486,1]
,"movements":[486,1]
,"depth-first":[486,1]
,"traversal":[486,1]
,"self-loops":[487,1]
,"flowchart":[487,1]
,"preferably":[487,1]
,"account.)":[487,1]
,"planar":[487,1,490,1,493,1,605,1]
,"nonplanar":[487,1,489,1,490,1,493,1]
,"(logic":[487,1]
,"diagrams)":[487,3,490,4,496,2]
,"(industrial":[487,1]
,"(workflow":[487,1]
,"flowcharts":[487,1]
,"(database":[487,1]
,"(designs":[487,1]
,"organizes":[487,1]
,"overlaps":[487,1]
,"majority":[487,1,489,1]
,"balanced":[487,1,488,1]
,"emphasize":[487,1]
,"self-links":[487,1,490,1]
,"sparse":[487,1]
,"medium-dense":[487,1]
,"mathematically":[487,1]
,"solve":[487,1,489,1]
,"obtains":[487,1]
,"theoretical":[487,2]
,"significantly":[487,1]
,"span":[487,1]
,"dense":[487,1]
,"nodes)":[487,1,490,1,492,2,507,1]
,"leveling":[488,1,489,2]
,"partitioned":[488,1,489,2]
,"objective":[488,1,492,1]
,"crossing":[488,1,489,5,492,2]
,"reduction":[488,1,489,2,619,1,641,1,642,1]
,"(approximately)":[488,1]
,"higher":[488,2,581,1]
,"routing":[488,1]
,"bypass":[488,1]
,"top-to-bottom":[488,1]
,"index)":[488,1,489,5,498,1,504,1,506,1,577,1]
,"ilvhierarchicallayout*layout":[488,1,489,1]
,"e.g":[488,1,491,1]
,"(ilvbottom)":[488,1]
,"ilvcenter":[489,2,572,1]
,"routes":[489,1]
,"ilvgraphmodel":[489,1,492,1,495,1,498,1,502,1,504,45,505,3,506,8,512,1,513,2]
,"ilvlayoutpolylinelinkstyle":[489,2]
,":getgloballinkstyle":[489,1]
,"mixed_style":[489,2]
,"(lvany":[489,1]
,"pins)":[489,1]
,":setconnectorstyle":[489,1]
,"(ilvlayoutconnectorstyle":[489,1]
,"ilvlayoutcenteredpins":[489,1]
,"ambiguous":[489,1]
,"ilvlayoutclippedpins":[489,1]
,"pointing":[489,1]
,"pins":[489,4]
,"ilvlayoutevenlyspacedpins":[489,1]
,"evenly":[489,2]
,"guarantees":[489,1]
,"ilvlayoutautomaticpins":[489,1]
,"spaced":[489,1,492,1]
,"connectors":[489,3]
,"ilvlayoutconnectorstyle":[489,1]
,":getconnectorstyle":[489,1]
,"freely":[489,1]
,"ilvrelativelinkconnector":[489,1]
,"against":[489,1]
,"likely":[489,1]
,"low-priority":[489,1]
,"crossed":[489,1]
,":setlinkpriority":[489,1]
,"priority)":[489,1]
,":getlinkpriority":[489,1]
,"a->":[489,1]
,"b->":[489,1]
,"c->":[489,2]
,"d->":[489,1]
,"e->":[489,2]
,"reversing":[489,1]
,"c-d":[489,1]
,"phase)":[489,2]
,"indexed":[489,1]
,":setspecnodelevelindex":[489,1]
,":getspecnodelevelindex":[489,2]
,"arbitrarily":[489,1]
,"100000":[489,1]
,"100,000":[489,1,531,1,534,1]
,"fewer":[489,1]
,"unnecessarily":[489,1]
,"4.33":[489,1]
,"left-most":[489,1]
,":setspecnodepositionindex":[489,1]
,":getspecnodepositionindex":[489,2]
,":sethorizontalnodeoffset":[489,1]
,":sethorizontallinkoffset":[489,1]
,":sethorizontalnodelinkoffset":[489,1]
,":setverticalnodeoffset":[489,1]
,":setverticallinkoffset":[489,1]
,":setverticalnodelinkoffset":[489,1]
,":gethorizontalnodeoffset":[489,1]
,":gethorizontallinkoffset":[489,1]
,":gethorizontalnodelinkoffset":[489,1]
,":getverticalnodeoffset":[489,1]
,":getverticallinkoffset":[489,1]
,":getverticalnodelinkoffset":[489,1]
,"non-orthogonal":[489,1]
,"node-link":[489,4]
,"play":[489,2]
,"deficiencies":[489,2]
,"routings":[489,1]
,"absolute":[489,1]
,"refinements":[489,2]
,":getcalcnodelevelindex":[489,2]
,"getcalcnodelevelindex":[489,6]
,"(node)":[489,3,516,1]
,"setspecnodelevelindex":[489,4]
,"detached":[489,2]
,"getspecnodelevelindex":[489,2]
,":getcalcnodepositionindex":[489,2]
,"(node))":[489,3,516,1]
,"setspecnodepositionindex":[489,3]
,"getcalcnodepositionindex":[489,2]
,"refine":[489,1]
,"(highest":[489,2]
,"\u002F\u002Fcalculate":[489,1]
,"\u002F\u002Ffor":[489,1]
,"maxlevelindex":[489,2]
,"ilvgraphic*const*allobjects":[489,1]
,"=grapher->":[489,1]
,"getobjects":[489,1]
,"(count)":[489,1,583,1]
,"{ilvgraphic*node":[489,1]
,"=allobjects":[489,1]
,"(grapher->":[489,1]
,"isnode":[489,1]
,"levelindex":[489,1]
,"positionindex":[489,1]
,"(maxlevelindex":[489,1]
,"<levelindex)":[489,1]
,"=levelindex":[489,1]
,"levelindex)":[489,1]
,"positionindex)":[489,1]
,"\u002F\u002Flevel":[489,1]
,"(leafnode)":[489,1]
,"!=maxlevelindex)":[489,1]
,"{layout->":[489,1]
,"(leafnode":[489,2]
,"maxlevelindex)":[489,1]
,"layoutreport":[489,1]
,"(circuit":[490,1,496,1]
,"(schematic":[490,1]
,"(entity":[490,1]
,"(sociology":[490,1]
,"genealogy)":[490,1]
,"(design":[490,1]
,"reduce":[490,1]
,"link-to-link":[490,2,491,1,492,3]
,"link-to-node":[490,2,491,1,492,3]
,"near":[490,1,492,2,619,1,641,1]
,"bundle":[490,1]
,"(fixed)":[490,1]
,"highly":[490,1]
,"distant":[490,1]
,"limitation":[490,1]
,"closely":[490,1]
,"issues":[490,1,559,1]
,"intrinsically":[490,1]
,"combinatorial":[491,1]
,"link-style":[491,1]
,"equally":[491,1]
,"setlinkoffset":[491,1]
,"(5)":[491,1]
,"penalty":[492,4]
,":setlinkoffset":[492,1]
,":getlinkoffset":[492,1]
,":setminfinalsegmentlength":[492,1]
,"length)":[492,1]
,":getminfinalsegmentlength":[492,1]
,"ilvlayoutdirectlinkstyle":[492,1]
,"ends":[492,1]
,"stopped":[492,1]
,"exceeds":[492,2,566,1,571,1]
,":setallowednumberofiterations":[492,1]
,"iterations)":[492,1]
,":getallowednumberofiterations":[492,1]
,":setsameshapeformultiplelinks":[492,1]
,":issameshapeformultiplelinks":[492,1]
,"driven":[492,1]
,"decrease":[492,2]
,":setlinktonodecrossingpenalty":[492,1]
,"penalty)":[492,2]
,"crossings)":[492,2]
,":getlinktonodecrossingpenalty":[492,1]
,":setlinktolinkcrossingpenalty":[492,1]
,":getlinktolinkcrossingpenalty":[492,1]
,"upper-left":[493,1,498,2,584,1,585,1,590,1]
,"nevertheless":[494,1,543,1]
,"attractive":[494,1]
,"setting)":[495,1,498,1]
,"reasonable":[495,1,498,1,517,1,537,1]
,"ilvsplinelinkimage":[495,1]
,":ensurestraightlinelinks":[495,1,498,1]
,"topology":[496,1,497,1]
,"(lan":[496,1]
,"(equipment\u002Fresource":[496,1]
,"well-known":[497,1]
,"telecommunications":[497,1]
,"nicely":[497,1]
,"serpent":[497,2,498,1]
,"(via":[497,1,554,1]
,"parameter)":[497,1]
,"(10,10)":[497,1]
,"ilvpolyline*bus":[497,1]
,"ilvpolyline":[497,1,498,2]
,"&point)":[497,1]
,"addnode":[497,1]
,"(bus)":[497,2]
,"ilvbuslayout*layout":[497,1]
,"setbus":[497,1]
,"arrange":[498,1]
,":setordering":[498,1]
,"(ilvbusorder":[498,1]
,"ordering)":[498,1]
,"ilvbusnoordering":[498,2]
,"ilvbusorderbyheight":[498,2]
,"tallest":[498,1]
,"ilvbusorderbyindex":[498,3]
,"physical":[498,1]
,"sorts":[498,1]
,"ilvbusorder":[498,1]
,":getordering":[498,1]
,":setindex":[498,1]
,":getindex":[498,1]
,"noindex":[498,1]
,"important.)":[498,1]
,":setbus":[498,1]
,"(ilvpolyline*bus)":[498,1]
,"ilvpolyline*ilvbuslayout":[498,1]
,":getbus":[498,1]
,":sethorizontaloffset":[498,1]
,":gethorizontaloffset":[498,1]
,":setverticaloffsettolevel":[498,1]
,":getverticaloffsettolevel":[498,1]
,":setverticaloffsettopreviouslevel":[498,1]
,":getverticaloffsettopreviouslevel":[498,1]
,":setmargin":[498,1]
,"margin)":[498,2]
,":getmargin":[498,1]
,"odd":[498,1]
,"(first":[498,1]
,"fifth":[498,1]
,"(second":[498,1]
,"sixth":[498,1]
,"margin-on-bus":[498,1]
,"parameter.)":[498,1,517,1]
,":setmarginonbus":[498,1]
,":getmarginonbus":[498,1]
,"questions":[499,1,517,3]
,"answers":[499,1,517,3]
,"5.1":[500,1,503,1]
,":createlayoutreport":[500,2]
,"spring":[500,1]
,"embedder":[500,1]
,"==ilvlayoutreportlayoutdone)":[500,1]
,"ilvlayoutreportlayoutdone":[500,1]
,"ilvlayoutreportnotneeded":[500,1]
,"ilvlayoutreportemptygrapher":[500,1]
,"ilvlayoutreportnomoveablenode":[500,1]
,":getcode":[500,1,517,1]
,"milliseconds)":[500,1]
,":getlayouttime":[500,1]
,"happening":[501,1]
,"dealing":[501,1,512,1]
,"converge":[501,1]
,"informed":[501,1,504,1]
,"ilvgraphlayoutlistener":[501,5]
,"addgraphlayouteventlistener":[501,2]
,":layoutstepperformed":[501,1]
,"algorithm)":[501,1]
,"orthogonaliterationlistener":[501,3]
,"layoutstepperformed":[501,1,516,2]
,"ilvgraphlayoutevent&event)":[501,1]
,"=(ilvorthogonallinklayout*)":[501,1]
,"event.getlayout":[501,1]
,"getallowednumberofiterations":[501,1]
,"ilvgraphlayout*layout":[501,1]
,"orthogonaliterationlistener*listener":[501,1]
,"already-built":[503,1]
,"adapter":[503,1,504,4,505,3,506,5,507,2,526,2,528,1,537,1,547,2,592,1,596,1,597,1]
,"concrete":[503,1,504,1,505,1]
,"achieving":[503,1]
,"truly":[503,1]
,"adapters":[504,1,547,1]
,"(ilvgrapher)":[504,1]
,"method.)":[504,1,505,1,513,1]
,"(ilvgrapheradapter":[504,1,507,1]
,":getgraphmodel":[504,1,505,1]
,":getnodesandlinks":[504,1]
,":getnodes":[504,1,507,1]
,":getnodescount":[504,1,506,1]
,":getlinks":[504,2,507,1]
,":getlinkscount":[504,2,506,2]
,":isnode":[504,1]
,"obj)":[504,2]
,":islink":[504,1]
,":getlinksfrom":[504,1]
,":getlinksfromcount":[504,1,506,1]
,":getlinksto":[504,1]
,":getlinkstocount":[504,1,506,1]
,":getneighbors":[504,1,507,1]
,":getnodedegree":[504,1]
,":getfrom":[504,1]
,":getto":[504,1]
,":getopposite":[504,1]
,":islinkbetween":[504,1]
,"node1":[504,1]
,"node2)":[504,1]
,":boundingbox":[504,2,510,1,512,1,513,2]
,"nodeorlink":[504,3]
,"ilvpoint*ilvgraphmodel":[504,1]
,":getlinkpoints":[504,1]
,"iluint&count)":[504,1]
,":getlinkpointat":[504,1,506,1]
,":getlinkpointscount":[504,1]
,":getlinkwidth":[504,1]
,"dimension":[504,1]
,":movenode":[504,2]
,"redraw)":[504,2]
,":reshapelink":[504,2]
,"frompoint":[504,1]
,"ilvpoint*points":[504,1]
,"startindex":[504,1]
,"topoint":[504,1]
,"addgraphmodellistener":[504,2]
,"(ilvgraphmodellistener*listener)":[504,2]
,"removegraphmodellistener":[504,1]
,"firegraphmodelevent":[504,1]
,"(ilvgraphmodelevent&event)":[504,1]
,"removed)":[504,1]
,"reshaped)":[504,1]
,"restarted":[504,1]
,"detect":[504,1]
,"unnecessary":[504,1,516,1]
,"ilvgraphmodellistener":[504,2]
,"ilvgraphmodelevent":[504,1]
,":setproperty":[504,1]
,"char*key":[504,1]
,":getproperty":[504,1]
,"char*key)":[504,1]
,"key-value":[504,1]
,"char*object":[504,1]
,"associating":[504,1,554,1,587,1,621,1,623,1]
,"cleanobjectproperties":[504,1]
,"nonabstract":[505,1,506,2]
,"(ilvgrapher*)":[505,1]
,"ilvtransformer":[505,1,513,1,515,1]
,"functional":[506,1]
,"ilvlayoutgraphicfilter":[507,5,508,2,509,3]
,":accept":[507,2,508,1,509,1]
,"(ilvgraphic":[507,1]
,"nodeorlink)":[507,1,512,1,513,3]
,":setfilter":[507,1,508,1]
,"(ilvlayoutgraphicfilter*filter)":[507,1]
,"setfilter":[507,1]
,"ilvlayoutgraphicfilter*ilvgrapheradapter":[507,1]
,":getfilter":[507,1]
,"(origin":[507,1]
,"ilvmanagerlayer":[508,1,560,1]
,":addlayer":[508,1]
,"(ilvmanagerlayer*layer)":[508,2]
,":removelayer":[508,1]
,":removealllayers":[508,1]
,"ilarray&ilvgrapheradapter":[508,1]
,":getlayers":[508,1]
,"getlayers":[508,1]
,"received":[508,1]
,"embedded":[509,1]
,"filter_prop":[509,1]
,"layoutfilter":[509,2]
,"(ilvgraphic*obj)":[509,1]
,"{ilany":[509,1,516,2]
,"prop":[509,1,553,1]
,"=obj->":[509,1]
,"getproperty":[509,3]
,"(ilgetsymbol":[509,3]
,"(filter_prop))":[509,2]
,"prop)":[509,1]
,"\u002F\u002Faccept":[509,1]
,"end-nodes":[509,1]
,"(ilvlinkimage":[509,1]
,"getclassname":[509,1]
,"{ilvlinkimage*link":[509,1]
,"(link->":[509,1]
,"getfrom":[509,1]
,"&&link->":[509,1]
,"getto":[509,1]
,"(filter_prop)))":[509,1]
,"(ilvtransformer":[510,1,512,1,513,1,515,1]
,"translation":[510,1]
,"rotation":[510,1]
,"factors":[510,1,558,1,566,2]
,"(transformed":[510,1]
,"coordinates)":[510,1,512,1,596,1]
,"pertinent":[510,1]
,"zoomable":[511,4,512,2,513,2]
,"documentation.)":[511,1]
,"levels)":[511,1]
,"(manager":[512,1]
,"laid-out":[512,1]
,"zoomable\u002Fnonzoomable":[512,1]
,"(ilvgraphmodel":[512,1]
,"notion":[512,1]
,"pushed":[512,1]
,"writing":[512,1,551,1,553,1,557,2,559,1,569,1,571,1,596,2,597,3,641,2,642,2,643,2]
,"boundingbox":[513,3,560,1,572,2]
,"(null)":[513,1]
,"inverse":[513,1,607,1,608,1,610,1,614,5,615,1,616,1,617,1,618,4,628,2,637,1,638,1,639,3,640,2,642,10,643,1]
,":inverse":[513,1,642,3]
,"(ilvrect":[513,1]
,"ilvmgrview":[513,1,514,2]
,"(at":[514,1]
,"moment":[514,1]
,"started)":[514,1]
,"mandatory)":[514,1]
,":setreferenceview":[514,1,515,1]
,"(ilvmgrview":[514,1]
,":getreferenceview":[514,1]
,":setreferencetransformer":[515,2]
,"transformer)":[515,1]
,":getreferencetransformer":[515,1]
,"ilvmanager":[515,1,540,2,541,1,547,1,554,3,556,2,560,1,577,1,585,1,588,1,591,1,593,1,635,1,636,1]
,":getviews":[515,1]
,"(therefore":[515,1]
,"applied.)":[515,1]
,"setreferencetransformer":[515,4]
,"super":[515,1,557,1]
,"setreferenceview":[515,2]
,"overrides":[515,2,517,1,643,1]
,"develop":[516,1]
,"infrastructure":[516,1,531,1,558,1]
,"ideas":[516,1]
,"myrandomlayout":[516,4]
,"skeleton":[516,1]
,"superclass":[516,2,550,1,553,1,557,2,640,2,643,2]
,"{\u002F\u002Fobtain":[516,1]
,"ilvgraphmodel*graphmodel":[516,2]
,"=getgraphmodel":[516,2]
,"\u002F\u002Fobtain":[516,2]
,"=getlayoutreport":[516,2]
,"atleastonenodemoved":[516,3]
,"=ilfalse":[516,1]
,"getlayoutregion":[516,2]
,"(rect)":[516,2,560,1,572,1]
,"xmin":[516,1]
,"=rect.x":[516,1]
,"ymin":[516,1]
,"=rect.y":[516,1]
,"xmax":[516,1]
,"=rect.right":[516,1]
,"ymax":[516,1]
,"=rect.bottom":[516,1]
,"=(isuseseedvalueforrandomgenerator":[516,2]
,"(getseedvalueforrandomgenerator":[516,2]
,"illist*nodes":[516,2]
,"=graphmodel->":[516,2]
,"getnodes":[516,2]
,"\u002F\u002Fbrowse":[516,2]
,"illink*l":[516,2]
,"=nodes->":[516,2]
,"(l)":[516,2,571,1]
,"=l->":[516,3,571,1]
,"\u002F\u002Fskip":[516,1]
,"(ispreservefixednodes":[516,2]
,"&&isfixed":[516,1]
,"=xmin":[516,1]
,"(ilvpos)":[516,2]
,"((xmax":[516,1]
,"-xmin)":[516,1]
,"*random->":[516,2]
,"nextfloat":[516,2]
,"=ymin":[516,1]
,"((ymax":[516,1]
,"-ymin)":[516,1]
,"\u002F\u002Fmove":[516,1]
,"graphmodel->":[516,2]
,"movenode":[516,2]
,"=iltrue":[516,2]
,"\u002F\u002Fnotify":[516,1]
,"(atleastonenodemoved)":[516,2]
,"setcode":[516,4]
,"(ilvlayoutreportlayoutdone)":[516,2]
,"(ilvlayoutreportnomoveablenode)":[516,2]
,"module":[516,1,575,1,577,1,598,2]
,"(getgraphmodel":[516,1]
,"instance)":[516,7]
,"(getlayoutreport":[516,1]
,"(getlayoutregion":[516,1]
,"(getnodes":[516,1]
,"skipping":[516,1]
,"(isfixed":[516,1]
,"asked":[516,1]
,"(graphmodel.movenode":[516,1]
,"(layoutstepperformed":[516,1]
,"5.2":[517,1]
,"helpful":[517,1]
,"suggestions":[517,1]
,"answer":[517,1]
,"(no":[517,1]
,"moved)":[517,1]
,"supportslayoutregion":[517,1]
,"nodes.)":[517,1]
,"hundreds":[517,1,631,2]
,"600x600":[517,1]
,"5000x5000":[517,1]
,"subnetworks":[517,1]
,"subgraph":[517,1]
,"cutting":[517,1]
,"subgraphs":[517,1]
,"(clusters)":[517,1]
,"be)":[517,1]
,"userogue":[517,1]
,"computers":[517,2]
,"faster":[517,1,572,1]
,"used)":[517,1,569,1]
,"conceptual":[518,1]
,"hands-on":[518,1]
,"overall":[518,1,534,1,601,1]
,"functionalities":[518,1]
,"load-on-demand":[518,2,520,3,522,1,523,1,533,8,534,13,535,1,537,3,538,4,549,3,559,11,560,7,561,1,564,2,565,3,566,2,567,1,568,4,572,4,574,1,575,3,577,6,580,4,582,1,583,3,588,1,593,1,596,2,597,1]
,"supplied":[518,1,541,1,545,1,550,1,551,1,572,1,573,1,606,1,608,1,621,1,622,1,630,1]
,"suggested":[518,1,523,1,524,1,645,2]
,"downloading":[518,1,523,1,524,1,645,1]
,"full-featured":[519,1]
,"high-performance":[519,1]
,"builder":[520,5,522,2,524,4,525,4,526,2,527,2,532,1,534,2,535,2,537,1,556,1,558,1]
,"volumes":[520,2]
,"carthographic":[520,1]
,"loading":[520,1,524,2,526,3,528,2,529,1,530,1,534,1,537,1,540,2,541,2,549,1,552,1,554,1,555,3,556,1,557,5,565,1,567,1,569,2,572,3,576,1,577,1,584,1,596,1,597,1]
,"commonly-used":[520,1]
,"cadrg":[520,1,523,2,533,3,534,8,557,3,560,1,572,2,573,1,582,5,583,17]
,"dted":[520,1,557,3,560,1,573,1,578,4,579,6,580,6]
,"spatial":[520,1,521,1,522,2,523,1,535,3,536,2,537,2,538,1,539,1,543,1,560,1,573,1,575,1,576,1,577,12,595,10,596,21,597,23]
,"georeferencing":[520,1,553,1,584,1]
,"reprojection":[520,1]
,"geographic":[520,1,526,3,528,1,529,1,537,1,543,1,547,1,553,1,554,1,557,2,575,1,580,2,582,1,583,1,585,1,590,1,591,1,601,1,607,2,615,2,619,1,631,1,633,1,635,2,636,2,642,1]
,"ease":[522,1]
,"demonstration":[523,1,580,1]
,"esri":[523,3,524,1,535,1,645,2]
,"shapefile":[523,2,524,1,526,3,535,1,536,2,557,4,560,1,573,1,574,5,575,4,576,3,577,13]
,"philippines":[523,2,524,1,526,1]
,"waco.ilv":[523,1,533,1,534,1]
,"downloaded":[523,1,524,1,533,1,535,1]
,"<shapedir>":[523,1,526,1,528,1,529,1,530,1,535,1]
,"shapefiles":[523,1,526,1,575,2,576,2,577,3]
,"<wacodir>":[523,1,533,1,534,1]
,"waco.ivl":[523,1,534,2]
,"<cadrgdir>":[523,1,533,1]
,"workstation":[524,1]
,"philippine":[524,1,526,1]
,"islands":[524,2,526,1]
,"pacific":[524,1]
,"coastal":[524,1,526,8]
,"towns":[524,1,526,1,529,8,530,2,531,5,533,1,534,1]
,"roads":[524,1,526,1,528,5,531,8,533,1,534,5,558,1,597,10]
,"renderers":[524,1,540,3,541,1,546,4,547,4,550,1,552,1,553,1]
,"(shapefiles":[524,1]
,"renderer":[524,1,528,1,530,1,541,1,544,1,546,6,547,3,548,4,549,12,550,3,552,1,553,2,557,4,560,1,581,2,583,2,598,2,600,2]
,"mapbuilder":[525,1,537,1]
,"<installdir>\u002Fbin":[525,1]
,"mapbuilder.exe":[525,1]
,"poline.shp":[526,2]
,"theme":[526,2,575,2,577,1]
,"(line":[526,1,553,3]
,"solid":[526,1,600,1]
,"non":[526,1,552,1]
,"georeferenced":[526,1,548,1,552,2,557,8,576,1,579,1,595,1]
,"loaded)":[526,1]
,"scenario":[526,1]
,"latitude":[526,1,553,2,611,1,614,1,618,2,619,3,622,1,631,1,632,2,636,2,641,2,642,1,643,8]
,"longitude":[526,1,553,2,611,1,614,2,618,2,619,3,622,1,631,1,632,2,636,2,641,4,642,3]
,"geometries":[526,1,543,4,547,1,553,3,575,1,576,6,577,3,596,1,597,6,598,1]
,"convey":[526,1]
,"fit-to-content":[527,2,528,1,534,2]
,"filters":[528,1,531,2,537,2,538,2,540,2,556,1,558,2,565,1,566,6,570,1]
,"rdline.shp":[528,2]
,"1\u002F5,000,000":[528,3]
,"1\u002F2,500,000)":[528,1]
,"pppoint.shp":[529,2]
,"1\u002F2,500,000":[529,1,566,1]
,"town":[529,3,531,5,541,1,544,1]
,"ppptname":[529,2]
,"2.6":[529,1]
,"alcantara":[529,1]
,"pppoly.shp":[530,2]
,"dark":[530,1,531,1]
,"grey":[530,2,531,1]
,"boundary":[530,1]
,"right-clicking":[531,1]
,"1\u002F500,000":[531,2,534,1,558,1]
,"perimeters":[531,1]
,"panning":[531,1,567,1]
,"covers":[531,1,540,2,546,1,551,1,555,1,557,1,559,1,561,1,565,1,574,1,578,1,579,1,596,1,597,2,598,1,601,1,617,1,621,1,626,1,631,1]
,"hiding":[531,1]
,"right-click":[531,1,534,1]
,"roadway":[531,1,558,1]
,"characterized":[531,1]
,"500,000":[531,1]
,"1\u002F100,000":[531,1,534,1,558,1]
,"saves":[532,1,549,1]
,"philippines.ilv":[532,1]
,"waco":[533,2,534,3]
,"texas":[533,2,534,2]
,"united":[533,1,636,1]
,"vectorial":[533,1,534,2]
,"(compressed":[533,1]
,"digitized":[533,1,582,1]
,"raster":[533,1,572,1,579,3,580,1,581,1,582,1]
,"graphics)":[533,1]
,"scanned":[533,1,534,2,540,1,559,1,566,1,582,1]
,"extremely":[533,1,559,1]
,"demonstrate":[533,1]
,"excellent":[533,1]
,"manipulating":[533,1]
,"<cadrgdir>\u002Fcadrg\u002Frpf\u002Fcjog\u002Fcjogz01":[534,1]
,"01004013.jgl":[534,1]
,"wants":[534,1]
,"reorder":[534,1]
,"repositioning":[534,2]
,"reposition":[534,1]
,"superimposing":[534,2]
,"superimposed":[534,1]
,"map)":[534,1,645,2]
,"observing":[534,1]
,"observe":[534,2,631,1]
,"mega":[534,1]
,"bytes":[534,1]
,"compressed":[534,1,582,1]
,"prohibitive":[534,1]
,"<cadrgdir>\u002Fcadrg\u002Frpf\u002Fcltm50\u002Fct50z01":[534,1]
,"oqen2013.tl1":[534,1]
,"zone":[534,1,564,1,567,1,579,1,598,1,603,1]
,"responding":[534,1]
,"rapidly":[534,1]
,"eating":[535,1]
,"8.1.5":[535,2,597,1]
,"8.1.6)":[535,1,597,1]
,"8.1.6":[535,1]
,"<installdir>\u002Fsamples\u002Fmaps\u002Foracle":[535,1]
,"compiled":[536,1]
,"<installdir>\u002Fsamples\u002Fmaps\u002Foracle\u002Findex.html":[536,1]
,"<shapedir>\u002Fworld.shp":[536,1]
,"sdo":[536,2,537,1,538,1,595,5,596,2,597,5]
,"oracle81":[536,1,596,1,597,3]
,"oracle8":[536,1,596,2,597,1]
,"(oracle73)":[536,1]
,"sid":[536,1]
,"administrator":[536,1]
,"world.geometry":[536,1,537,1,538,1]
,"tiling":[536,2,559,2,561,4,562,2,563,6,570,1,572,1,575,2,577,3,596,4,597,1]
,"exercises":[536,1]
,"reminder":[536,1,614,1]
,"meter)":[537,1]
,"interest":[537,1,559,1]
,"(aoi)":[537,1]
,"aoi":[537,3]
,"preview":[537,2]
,"(zero)":[537,1]
,"tile":[538,2,559,2,560,26,562,9,563,1,564,4,567,5,568,14,569,3,570,1,571,9,572,11,577,13,580,2,583,1,586,7,587,3,590,1,592,4,596,2,597,7]
,"coverage":[538,1,582,5,583,2,645,5]
,"500":[538,1]
,"restore":[539,1]
,"in)":[539,1,544,1]
,"supply":[539,1]
,"aerial":[540,1,541,1,542,1]
,"photographs":[540,1]
,"wealth":[540,1]
,"enriched":[540,1]
,"prototypes":[540,1]
,"iterators":[540,3,541,2,551,2,557,1,560,1,576,1]
,"(files":[541,1]
,"ilvmapfeature":[541,1,542,1,544,1,547,1,552,1,553,3,576,1,580,1,585,1,591,1,596,5,597,7,599,1]
,"road":[541,1,542,1]
,"summit":[541,2,542,1]
,"hill":[541,2,542,1]
,"digital":[541,1,542,1,578,1,579,4,580,1,581,1,582,1,598,1]
,"terrain":[541,1,542,1,578,1,579,5,580,1,581,2]
,"inhabitants":[541,1,544,1]
,"marking":[541,1]
,"diverse":[541,1]
,"ilvfeaturerenderer":[541,1,546,1,547,1,549,1]
,"reproject":[541,1,554,1,557,1,583,1]
,"ilvmapfeatureiterator":[541,1,545,1,551,2,552,3,553,8,557,2,560,1,576,2,580,1,583,1,585,1,596,1,597,1,599,1]
,"ilvprojection":[541,1,552,1,554,2,610,2,618,3,619,1,623,1,632,2,636,1,639,3,640,2,641,7,642,4,643,4]
,"ilvmaploader":[541,1,553,1,557,15,583,1]
,"carries":[541,1,542,1]
,"ilvmapgeometry":[543,1,597,1]
,"modeled":[543,1,639,4]
,"opengis":[543,1]
,"consortium":[543,1]
,"insure":[543,1]
,"interoperability":[543,1]
,"(gis)":[543,1]
,"strictly":[543,1]
,"simplified":[543,1,569,1,571,1,638,1]
,"facilitates":[543,1]
,"rasters":[543,1,579,1]
,"contour":[544,1,548,1]
,"elevation":[544,1,548,1,576,1,579,2,581,1,645,1]
,"ilvfeatureattribute":[544,2,597,2]
,"ilvfeatureattributeinfo":[544,1,553,1,597,4]
,"ilvfeatureattributeproperty":[544,1,545,2,553,1,597,2]
,"bject":[544,1]
,"dumpattributes":[544,1]
,"ilvmapfeature*feature)":[544,1]
,"ilvfeatureattributeproperty*attributes":[544,1,553,1,576,1]
,"=feature->":[544,1,545,1]
,"getattributes":[544,1,545,1,599,1]
,"attributes)":[544,1]
,"ilvfeatureattributeinfo*info":[544,1,553,1,597,1]
,"=attributes->":[544,2]
,"getinfo":[544,1]
,"(info)":[544,1,597,1]
,"{ilvuint":[544,1]
,"=info->":[544,3,560,2]
,"getattributescount":[544,1]
,"getattributename":[544,1]
,"ilvmapclassinfo*clsinfo":[544,1,548,1]
,"getattributeclass":[544,1]
,"ilvfeatureattribute*fa":[544,1,548,1]
,"getattribute":[544,1,548,1,550,1]
,"(clsinfo->":[544,4,548,2]
,"(ilvstringattribute":[544,1]
,"*str":[544,1]
,"=((ilvstringattribute*)":[544,1]
,"fa)->":[544,4,548,2]
,"(ilvintegerattribute":[544,1,548,1]
,"{int":[544,1,571,1]
,"=((ilvintegerattribute*)":[544,1,548,1]
,"(ilvdoubleattribute":[544,1,548,1]
,"{double":[544,1,616,1,636,1]
,"dbl":[544,1]
,"=((ilvdoubleattribute*)":[544,1]
,"dbl)":[544,1]
,"(ilvbooleanattribute":[544,1]
,"{ilvboolean":[544,1]
,"=((ilvbooleanattribute*)":[544,1]
,"ilvnamedproperty":[545,2]
,"lass":[545,2,597,2]
,"attaches":[545,1]
,"ilvfeatureattributeproperty*attributeproperty":[545,1]
,"attributeproperty":[545,1]
,"graphic->":[545,1,599,1]
,"setnamedproperty":[545,1,599,1]
,"(attributeproperty->":[545,1]
,"volatile":[545,1,552,1,553,1]
,"volatility":[545,1]
,"ilvnamedproperty*namedproperty":[545,1]
,"ilvsymbol*symbol":[545,1]
,"=ilvfeatureattributeproperty":[545,1]
,":getname":[545,1]
,"namedproperty":[545,1]
,"=graphic->":[545,1]
,"getnamedproperty":[545,1]
,"(symbol)":[545,1]
,"enderer":[547,1]
,"makegraphic":[547,2,548,1,552,1,585,1,591,1,599,1]
,"ilvgraphic*makegraphic":[547,1]
,"ilvmapfeature&feature":[547,1,548,1,550,1]
,"ilvmapinfo&targetmapinfo":[547,1,548,1,550,1]
,"ilvmapserror&status)":[547,1,548,1,550,1,553,2,557,2]
,"targetmapinfo":[547,1,550,1]
,"converter":[547,1,619,1,627,1,629,2,630,2]
,"upwards)":[547,1]
,"downwards":[547,1]
,"ilvmapinfo":[547,1,554,3,557,1,558,1,560,1,585,1,591,1,632,1,635,1,636,3,637,1]
,"ilvunknownprojection":[547,1,557,1]
,"ilvdefaultpointrenderer":[547,1,550,2]
,"ilvmarker":[547,1,636,1]
,"ilvdefaultfeaturerenderer":[547,1,560,1]
,"translate":[547,2]
,"ilvmaplinerenderingstyle":[547,3,557,1]
,"ilvmapcurve":[547,1]
,"country\u2019s":[547,1]
,"ilvfeaturerenderer*renderer":[547,1,552,1,557,1,560,1,585,1,591,1,599,1]
,"ilvdefaultcurverenderer":[547,1,553,2,557,1]
,"(_display)":[547,2]
,"*lrs":[547,1]
,"lrs->":[547,2]
,"setlinewidth":[547,1]
,"renderer->":[547,1,557,1]
,"setlinerenderingstyle":[547,1,557,1]
,"(lrs)":[547,1]
,"ilvgraphic*graphic":[547,1,552,1,591,1,599,1]
,"=renderer->":[547,1,552,1,585,1,591,1,599,1]
,"(feature":[547,1,548,1,550,1,552,1,597,1]
,"mapinfo":[547,1,552,1]
,"status)":[547,1,550,1,552,1,553,2,557,2,568,1,577,2,585,1,591,1,599,1]
,"(graphic)":[547,2,552,1,599,2]
,"{_manager->":[547,1]
,"{ilvwarning":[547,1]
,"can\u2019t":[547,1]
,"(status":[547,2,552,4,553,2,557,4,577,10,585,3,587,1,588,1,591,2,592,1,594,1,612,1,614,1,616,2,636,1]
,"!=ilvmaps":[547,1,552,2,553,1,557,2,577,10,585,3,587,1,588,1,591,2,592,1,594,1,612,1,614,1,616,2,644,1]
,":noerror":[547,1,552,2,553,3,557,4,572,1,577,10,585,4,587,1,588,1,591,3,592,1,594,1,597,1,599,2,612,1,614,1,616,2,618,1,636,2,637,1,641,2,642,2,643,1,644,1]
,"(ilvmaps":[547,1,552,2,553,2,557,2,641,1,642,1,643,1]
,":geterrormessage":[547,1,552,2,553,1,557,2]
,"_display))":[547,1,553,1]
,"<installdir>\u002Fsamples\u002Fmaps\u002Fuserman\u002Fsrc\u002Fcolorlinerenderer.cpp":[548,1]
,"elevations":[548,1,576,2,579,1,581,5]
,"indexing":[548,1]
,"colormodel":[548,2,549,1]
,"colorlinerenderer":[548,1,549,4]
,"builds":[548,1]
,"ilvmapgeneralpath":[548,2]
,"ilvgraphic*colorlinerenderer":[548,1]
,":makegraphic":[548,1,550,2]
,"ilvmapgeometry*geometry":[548,1]
,"=feature.getgeometry":[548,1]
,"geometry)":[548,1,560,1]
,"{status":[548,2,553,2]
,"=ilvmaps":[548,2,553,1,557,2,599,1,611,2,616,2,628,2,636,1,642,2,643,1,644,3]
,":illegalargument":[548,1]
,"(geometry->":[548,1]
,"getclassinfo":[548,2,553,1,554,1]
,"!=ilvmaplinestring":[548,1]
,":classerror":[548,1]
,"ilvmaplinestring*linestr":[548,1]
,"=(const":[548,1]
,"ilvmaplinestring*)":[548,1]
,"segcount":[548,1]
,"=linestr->":[548,2]
,"getsegmentcount":[548,1]
,"(segcount":[548,1]
,"ilvmapgeneralpath*genpath":[548,1]
,"ilvmapsegment":[548,1]
,"*segment":[548,1]
,"ilvcoordinate":[548,1,553,1,560,2,585,2,611,2,612,1,615,1,616,2,628,2,636,1,637,1]
,"getsegment":[548,1]
,"=segment":[548,2]
,"getstartpoint":[548,1]
,"=targetmapinfo.toviews":[548,2]
,"feature.getprojection":[548,2]
,"genpath->":[548,3]
,"moveto":[548,1]
,"(p)":[548,2]
,"<segcount":[548,1]
,"getendpoint":[548,1]
,"lineto":[548,1,553,1]
,"implies":[548,1]
,"y-axis":[548,3]
,"positive":[548,1,581,1]
,"upward":[548,1]
,"downward":[548,1]
,"imply":[548,1]
,"toviews":[548,1]
,"corrects":[548,1]
,":getprojection":[548,1,553,1]
,"known)":[548,1]
,"reprojected":[548,1,632,1]
,"coloring":[548,1]
,"colorindex":[548,3]
,"ilvfeatureattributeproperty*attributelist":[548,1,550,1]
,"=feature.getattributes":[548,1,550,1]
,"=attributelist->":[548,1,550,1]
,"(_attributename)":[548,1,550,1]
,"=fa->":[548,1]
,"=(ilvint)":[548,1]
,"((ilvdoubleattribute*)":[548,1]
,"ilvcolor*color":[548,1]
,"=getdisplay":[548,1]
,"((ilvushort)_colormodel->":[548,1]
,"getred":[548,1]
,"(colorindex)":[548,2]
,"(ilvushort)_colormodel->":[548,2]
,"getgreen":[548,1]
,"getblue":[548,1]
,"(colorindex))":[548,1]
,"(color)":[548,1]
,"genpath":[548,1]
,"ilvsdolayer":[549,2,560,1,596,9]
,":setfeaturerenderer":[549,1]
,"ispersistent":[549,3,560,1,572,1]
,"writes":[549,1,571,1]
,"ilvoutputfile":[549,1]
,"overwrite":[549,1]
,":ispersistent":[549,1]
,"(ilvoutputfile&output)":[549,1,571,2]
,"{ilvwritestring":[549,1]
,"(output":[549,1]
,"_attributename)":[549,1]
,"(_colormodel->":[549,1]
,"{output.getstream":[549,2,571,1]
,"<<1":[549,2]
,"<<ilvspc":[549,2,643,1]
,"_colormodel->":[549,1]
,"(output)":[549,1]
,":colorlinerenderer":[549,1]
,"(ilvinputfile&stream)":[549,1]
,":ilvfeaturerenderer":[549,1]
,"(stream.getdisplay":[549,1]
,"{char*s":[549,1]
,"=ilvreadstring":[549,1]
,"(stream)":[549,1]
,"_attributename":[549,1]
,"=strcpy":[549,1]
,"hascolormodel":[549,2]
,"stream.getstream":[549,1]
,"(hascolormodel)":[549,1]
,"{_colormodel":[549,2]
,"=(ilvmapcolormodel*)":[549,1]
,"ilvmapclassinfo":[549,1]
,":readobject":[549,1]
,"(ilvmapcolormodel":[549,1]
,"=ilvintervalcolormodel":[549,1]
,":makeelevationcolormodel":[549,1,581,1]
,"tailor":[550,1]
,"<installdir>\u002Fsamples\u002Fmaps\u002Fuserman\u002Fsrc\u002Fmarkertextrenderer.cpp":[550,1]
,"markertextrenderer":[550,1]
,"ilvgraphic*markertextrenderer":[550,1]
,"{ilvmarker":[550,1]
,"*marker":[550,1]
,"=(ilvmarker":[550,1]
,"marker)":[550,1]
,"ilvlabel*label":[550,1]
,"ilvfeatureattribute*attribute":[550,1]
,"(attribute)":[550,1]
,"marker->":[550,1,636,3]
,"tostring":[550,1,568,2]
,"(attribute))":[550,1]
,"label)":[550,1]
,"label->":[550,1,572,2]
,"(marker->":[550,1]
,"ilvgraphicset*set":[550,1]
,"ilvgraphicset":[550,1]
,"set->":[550,2]
,"(marker)":[550,1]
,"(label)":[550,1,572,1,637,1]
,"(file":[551,1]
,"iterator":[551,1,552,2,553,1,560,3,596,2,597,4]
,":getnextfeature":[552,1,553,2]
,"queried":[552,1,597,1]
,"getnextfeature":[552,4,553,2,560,2,576,1,577,2,585,1,591,2,596,1,597,1]
,"overwrites":[552,1]
,"invoking":[552,1]
,"allocated":[552,1,553,1,562,1,577,1,643,1]
,"allocate":[552,1,643,1]
,"getdefaultfeaturerenderer":[552,2,553,1,585,1,591,1]
,"getprojection":[552,1,553,2,554,1,557,2]
,"nongeoreferenced":[552,1,554,1,557,2,576,1]
,"loads":[552,1,557,1,633,1,635,1]
,"=featureiterator->":[552,3]
,"ilvmapfeature*feature":[552,1,577,3,585,1,591,1,597,1]
,"(status)":[552,1,553,1,562,1,568,1,577,2,585,1,591,1,599,1]
,"(status))":[552,1,599,1,612,1,614,1,616,2]
,"display))":[552,2,557,2]
,"manager->":[552,1,554,1,556,1,577,2,585,1,588,2,591,1,593,2,596,1,597,1,635,4,636,1]
,"(graphic":[552,1,591,1]
,"layerindex)":[552,1]
,"(latitude":[553,1]
,"longitude)":[553,1,636,1]
,"per":[553,1,590,1,598,1]
,"separated":[553,1]
,".pol":[553,1,557,3]
,"-1.0":[553,3]
,"40.0":[553,3]
,"1x1":[553,1]
,"(0,39)":[553,1]
,"38.0":[553,2]
,"90.0":[553,1]
,"meridian":[553,1,603,1,619,1,641,1,642,1]
,"-90.0":[553,1]
,"<installdir>\u002Fsamples\u002Fmaps\u002Fuserman\u002Fsrc\u002Fsimplepolylinereader.cpp":[553,1]
,"portions":[553,1]
,"simplepolylinereader":[553,7,557,1]
,"ifdef":[553,1]
,"il_std":[553,1]
,"<fstream>":[553,1]
,"namespace":[553,1]
,"std":[553,1]
,"<fstream.h>":[553,1]
,"endif":[553,1]
,"<ilviews\u002Fmaps\u002Fmapfeature.h>":[553,1]
,"<ilviews\u002Fmaps\u002Fformat\u002Fmapinput.h>":[553,1]
,"<ilviews\u002Fmaps\u002Frendering\u002Fcurverdr.h>":[553,1]
,"ilvmapsexported":[553,1]
,":public":[553,1,557,1,571,1,572,1]
,"(ilvdisplay*display":[553,2,557,2,560,1,586,1,635,1]
,"char*filename)":[553,2,557,2,560,2,635,2]
,"ilvmapserror":[553,4,557,2,560,1,572,2,577,1,585,1,588,1,591,1,592,1,594,1,597,1,599,1,612,1,616,1,636,1,639,4,641,2,642,2,643,7,644,1]
,"getinitstatus":[553,1,577,5,585,1,587,1,588,1,591,1,592,1,594,1]
,"ilvmapfeature*getnextfeature":[553,1]
,"(ilvmapserror&status)":[553,4]
,"getlowerrightcorner":[553,2]
,"(ilvcoordinate&coordinate)":[553,1]
,"getupperleftcorner":[553,2]
,"(ilvcoordinate&)":[553,1]
,"ilvfeaturerenderer*getdefaultfeaturerenderer":[553,1,560,1]
,"(ilvdisplay":[553,2]
,"ilvprojection*getprojection":[553,1]
,"emptyline":[553,2]
,"char*line)":[553,2]
,"readheader":[553,1]
,"parseline":[553,2]
,"char*line":[553,1]
,"ilvdouble*lng":[553,1]
,"ilvdouble*lat":[553,1]
,"char*comment)":[553,1]
,"(ilstring&buffer":[553,2]
,"ilvmapfeatureiteratordeclareclassinfo":[553,1]
,"_formaterror":[553,1]
,"ifstream":[553,1]
,"_stream":[553,2]
,"ilvmaplinestring*_geometry":[553,1]
,"ilvmapfeature*_feature":[553,1]
,"ilvprojection*_projection":[553,1,560,1]
,"ilvdisplay*_display":[553,1,557,1,572,1]
,"_status":[553,3]
,"formaterror":[553,1]
,"init":[553,1]
,"ilvmapfeature*readpolyline":[553,1]
,"ilvclassinfo":[553,2]
,"registration":[553,2]
,":makefeatureiterator":[553,1,557,3]
,"method)":[553,1,554,1]
,"ilvmapfeatureiteratordefineclassinfo":[553,1]
,"(classname":[553,1]
,"superclassname)":[553,1]
,"classname":[553,1]
,"(simplepolygonreader":[553,2]
,"superclassname":[553,1]
,"(ilvmapfeatureiterator":[553,1,560,1]
,"ilvmapfeatureiterator*reader":[553,1]
,"ilvclassinfo*readerclass":[553,1]
,"=reader->":[553,1,576,2,577,3,585,2,591,3]
,"(readerclass->":[553,1]
,"ilvgeographicprojection":[553,2,557,1,560,1,585,1,591,1]
,"unknown":[553,1,557,1]
,":simplepolylinereader":[553,1]
,":_display":[553,1]
,"_geometry":[553,2]
,"_feature":[553,2]
,"_projection":[553,2,560,1]
,"[1024]":[553,3]
,"_stream.getline":[553,1]
,"1024)":[553,2]
,"(readheader":[553,1]
,"(line)":[553,1]
,"==ilvfalse)":[553,1]
,"=_formaterror":[553,2]
,"ilvprojection*simplepolylinereader":[553,1]
,":getlowerrightcorner":[553,1]
,"(ilvcoordinate&c)":[553,2]
,":getupperleftcorner":[553,1]
,"ilvmaplinestring":[553,4,596,1]
,"ilvfeaturerenderer*simplepolylinereader":[553,1]
,":getdefaultfeaturerenderer":[553,1]
,"*display)":[553,1]
,"ilvmapfeature*simplepolylinereader":[553,2]
,"readpolyline":[553,2]
,"emptied":[553,1]
,"getnextfeaure":[553,1]
,":readpolyline":[553,1]
,"(_stream.eof":[553,2]
,"(!_geometry)":[553,1]
,"_geometry->":[553,2]
,"removeall":[553,1]
,"(!_feature)":[553,1]
,"{_feature":[553,1]
,"_feature->":[553,3]
,"setgeometry":[553,1]
,"(_geometry)":[553,1]
,"ilvprojection*proj":[553,1]
,"=getprojection":[553,1]
,"(proj)":[553,1]
,"setprojection":[553,1,585,1]
,"(proj->":[553,1]
,"reached":[553,2,569,1]
,"ilstring":[553,1,572,1,596,1,597,1]
,"{_stream.getline":[553,1]
,"(line))":[553,1]
,"ilvfeatureattributeproperty*prop":[553,2,597,1]
,"=attributes":[553,1]
,"setattributes":[553,1,597,1]
,"(prop)":[553,1,597,1]
,"comment":[553,4,625,1,630,1]
,"=parseline":[553,1]
,"comment)":[553,1]
,"<2)":[553,1]
,"c.x":[553,1]
,"c.y":[553,1]
,"(y)":[553,1]
,"==3)":[553,1]
,"+=comment":[553,1]
,"(first)":[553,1]
,"{first":[553,1]
,"setstartpoint":[553,1]
,"{_geometry->":[553,1]
,"ilvfeatureattributeproperty*simplepolylinereader":[553,1]
,":attributes":[553,1]
,"(buffer.getlength":[553,1]
,"ilvmapclassinfo*attclass":[553,1]
,"=ilvstringattribute":[553,1,597,1]
,"=ilvtrue":[553,1]
,"&name":[553,1]
,"&attclass":[553,1]
,"&nullable)":[553,1]
,"char*val":[553,1]
,"=buffer.getvalue":[553,1]
,"ilvstringattribute*att":[553,1]
,"ilvstringattribute":[553,1,597,1]
,"att->":[553,1]
,"(info":[553,1,597,1]
,"(ilvfeatureattribute**)&att":[553,1]
,"viewer":[554,1,635,1]
,"operate":[554,1]
,"cartography":[554,1,558,1,582,1]
,"ilvmapadapter":[554,1,577,2,592,1,596,1,597,1,636,1]
,"associates":[554,1,559,1,564,1,576,1]
,"mercator":[554,1,557,2,606,1,609,1,610,1,612,1,613,1,623,1,630,1,638,1,639,3,640,5,641,6,642,4,643,18,644,1]
,"ilvmercatorprojection*proj":[554,1]
,"ilvmercatorprojection":[554,1,557,1,610,2,623,1,625,1,628,1,630,1]
,"ilvmapinfo*mapinfo":[554,2,557,1,585,1,599,1]
,"(proj":[554,1]
,"ilvfalse)":[554,1,557,1,564,1]
,"mapinfo->":[554,1,557,1]
,"(_manager)":[554,1]
,"info":[554,1,591,2,635,1]
,":save":[554,1]
,"ilvmanager*manager":[554,1,577,1,585,1,588,1,591,1,593,1,635,1,636,1,637,1]
,"=ilvmapinfo":[554,1,635,1,636,1]
,"(manager)":[554,1,557,3,635,1,636,1]
,"mapinfo)":[554,1]
,"ilvprojection*projection":[554,1,557,1,623,1,625,1]
,"=mapinfo->":[554,1]
,"projection->":[554,1,623,1,625,1]
,"getprojectionname":[554,1]
,"viewss":[556,1]
,"(graph":[556,1]
,"prototypes)":[556,1]
,"measurement":[556,1,558,2,613,1,619,1,627,2,628,1,629,2,641,1]
,"tiled":[556,1,559,2,560,1,561,2,563,1,564,2,566,3,570,4,571,1,572,1,577,1,580,1,583,1,592,2,594,1]
,":read":[556,1]
,"(shapefile":[557,1]
,"char*filename":[557,1,599,1]
,"ilvmaploader*loader":[557,2]
,"(&manager)":[557,2]
,"loader->":[557,2]
,"absence":[557,1,568,1]
,"indications":[557,1]
,"unable":[557,1,637,1]
,"manager)":[557,1]
,"inaccurate":[557,1]
,":setdefaultsourceprojection":[557,1]
,"(projection":[557,1]
,"maploader":[557,1,583,1]
,"\u002F\u002Fload":[557,2]
,"ilvprojection*geographic":[557,1]
,"maploader->":[557,2,583,1]
,"setdefaultsourceprojection":[557,1]
,"(geographic)":[557,1]
,"myshapefile.shp":[557,1]
,"(ilvmapfeatureiterator*featureiterator":[557,1]
,"ilvmapfeatureiterator*iterator":[557,1,560,1]
,"=loader->":[557,1,587,1,588,1,592,1]
,"makefeatureiterator":[557,3]
,"ilvdefaultcurverenderer*renderer":[557,1]
,"ilvmaplinerenderingstyle*style":[557,1]
,"style->":[557,1]
,"(style)":[557,1]
,"(iterator":[557,1]
,"subtype":[557,1,560,1,596,1,638,1,639,1]
,"recognize":[557,2]
,"<strings.h>":[557,1]
,"<ilviews\u002Fmaps\u002Fformat\u002Fmaploader.h>":[557,1]
,"polread.h":[557,1]
,"mymaploader":[557,3]
,"ilvmanager*manager)":[557,2]
,"\u002F***overrides":[557,1]
,"*\u002Fvirtual":[557,1]
,"ilvmapfeatureiterator*makefeatureiterator":[557,1]
,":mymaploader":[557,1]
,":ilvmaploader":[557,1]
,"_display":[557,1,560,1]
,"ilvmapfeatureiterator*mymaploader":[557,1]
,"{\u002F\u002Fdoes":[557,1]
,"ilvmapfeatureiterator*result":[557,1]
,"=ilvmaploader":[557,1]
,"{\u002F\u002Ftest":[557,1]
,"=strlen":[557,1]
,"\u002F\u002F.pol":[557,1]
,"(length":[557,1]
,"{char*ptr":[557,1]
,"=strrchr":[557,1]
,"(ptr)":[557,1]
,"(strcasecmp":[557,1]
,"(ptr":[557,1]
,"(_display":[557,1,560,1,564,1,572,2]
,"filename)":[557,1]
,"recognized":[557,1]
,"ilvscalevisibilityfilter":[558,5]
,"ilvlayervisibilityfilter":[558,1]
,"4.0":[558,1]
,"factor":[558,1,566,2,568,1,643,2]
,"ilvscalevisibilityfilter*filter":[558,1]
,"(1.\u002F500000":[558,1]
,"1.\u002F100000.)":[558,1]
,"layer->":[558,2]
,"addvisibilityfilter":[558,2]
,"(filter)":[558,1]
,"pass":[558,1]
,":nolimit":[558,2]
,"discard":[558,1]
,"(meters":[558,1]
,"centimeters":[558,1]
,"yards":[558,1]
,"other)":[558,1]
,"inferior":[558,1]
,"1f\u002F500,000":[558,1]
,"ilvscalevisibilityfilter*scalefilter":[558,1]
,"(ilvscalevisibilityfilter":[558,1]
,"1.\u002F500000.)":[558,1]
,"(scalefilter)":[558,1]
,"unload":[559,1,569,3]
,"valuable":[559,1]
,"1\u002F25,000":[559,1]
,"resolution":[559,1,590,2,645,2]
,"dpi":[559,1]
,"654":[559,1]
,"kilobytes":[559,1]
,"kilometer":[559,1,629,1,630,1]
,"megabytes":[559,1]
,"kilometers":[559,1,622,1]
,"310":[559,1]
,"terabytes":[559,1]
,"volume":[559,1,582,3,583,3]
,"crucial":[559,1]
,"tiles":[559,3,560,9,561,1,562,3,563,2,564,6,565,1,566,4,567,1,568,3,569,8,571,5,572,2,577,3,592,1,596,2,597,8]
,"debug":[559,2,563,1,564,8]
,"ilvmanagermagviewinteractor":[559,1,564,3]
,"caching":[559,2,569,1]
,"rectangles":[560,1]
,"gets":[560,2]
,"unloaded":[560,2,567,3,569,1,571,1]
,"zooming":[560,1,567,1]
,"activating":[560,1]
,"deactivating":[560,1]
,"ilvtiledlayer":[560,3,564,1,571,1,572,1,577,3,587,2,588,1,592,2,593,1]
,"controller":[560,4,564,1,568,1,571,1]
,"(ilvtilecontroller":[560,1,571,1]
,"(ilvtileloader":[560,1]
,"(ilvtilecache":[560,1]
,"incremented":[560,1]
,"invoked":[560,1,572,1]
,"decremented":[560,1]
,"ilvcadrglayer":[560,1,583,2]
,"ilvdtedlayer":[560,1,580,1]
,"ilvmaptileloader":[560,8]
,":load":[560,2,572,1]
,"(ilvtile*tile)":[560,2,568,3,571,1,572,4]
,"=getfeatureiterator":[560,1]
,"(tile)":[560,1,571,3]
,"ilvlookaheadfeatureiterator":[560,3]
,"\u002F\u002Fparameters":[560,1]
,"=getfeaturerenderer":[560,1]
,"(tile->":[560,1,571,1]
,"{\u002F\u002Fcase":[560,1]
,"ahead":[560,1]
,"\u002F\u002Falready":[560,1]
,"(skip":[560,1]
,"\u002F\u002Fcase":[560,1]
,"continue)":[560,1]
,"\u002F\u002Fprocess":[560,1]
,"=iterator->":[560,1]
,"\u002F\u002Fask":[560,1]
,"(feature)":[560,1,577,3,596,1]
,"optimizations":[560,1,596,1,597,2]
,"skip":[560,1]
,"(case":[560,1]
,"ilvtile":[560,3,562,1,571,1,572,2]
,"thanks":[560,2]
,":addobject":[560,1,572,1]
,"ilvmapfeatureid*)":[560,1]
,":getnextfeatureid":[560,1]
,":getfeatureiterator":[560,1]
,"mytileloader":[560,3]
,"mosaic":[560,1]
,"mytileloader:public":[560,1]
,"{ilvdisplay*_display":[560,1]
,"char*_filename":[560,1]
,"\u002F\u002Fits":[560,1]
,"ilvmapinfo*_info":[560,1]
,"ilvdim":[560,2]
,"_imagewidth":[560,3]
,"_imageheight":[560,3]
,"_filename":[560,2]
,"(ilvmapdatapathmanager":[560,2]
,":resolvepath":[560,4]
,"(filename))":[560,2]
,"_info":[560,4]
,"{\u002F\u002Fcreation":[560,1]
,"ilvbitmap":[560,1]
,"ilvbitmap*bitmap":[560,1]
,"readbitmap":[560,1]
,"(bitmap)":[560,1]
,"{_imagewidth":[560,1]
,"=bitmap->":[560,2]
,"(_info)":[560,1]
,"ilvmapfeatureiterator*getfeatureiterator":[560,1]
,"{ilvrect":[560,1,572,1]
,"tile->":[560,1,568,2,572,4]
,"ilvmapinfo*info":[560,1]
,"=getmapinfo":[560,1]
,"(rect.x":[560,2]
,"-rect.h":[560,1]
,"getadapter":[560,2]
,"fromviews":[560,2]
,"(p1)":[560,1]
,"(p2)":[560,1]
,"ilvimagereader":[560,1,584,2,585,2]
,"lr)":[560,1,585,1]
,"(ilvdisplay*display)":[560,1,635,1]
,"ilvmapinfo*getmapinfo":[560,1]
,"(!_info)":[560,1]
,"(_projection)":[560,1]
,"gettileorigin":[560,1,588,1]
,"_imageheight)":[560,1]
,"ilvmapdatapathmanager":[560,3]
,"resolve":[560,2]
,"loaders":[560,2]
,"geotiff":[560,1,573,1,589,2,590,6,594,1,645,2]
,"resolved":[560,1]
,"resolver":[560,1]
,"c:\u005Cdata":[560,1]
,"ilvdefaultdatapathresolver*resolver":[560,1]
,"ilvdefaultdatapathresolver":[560,1]
,"c:\u005C\u005Cdata":[560,1]
,":adddatapathresolver":[560,1]
,"(resolver)":[560,1]
,"simplelod":[562,1,564,2,568,1]
,":displaytilestatus":[562,1]
,"col)":[562,1]
,"{ilvtile*tile":[562,1]
,"=_tiledlayer->":[562,1]
,"gettilecontroller":[562,1,568,1]
,"gettile":[562,1]
,"(col":[562,1]
,"tile)":[562,1]
,"{ilvtilestatus":[562,1]
,"=tile->":[562,1]
,"getstatus":[562,1]
,"ilvtileempty":[562,1,568,3]
,"ilvtilelocked":[562,1,568,3]
,"ilvtilecached":[562,1,568,3]
,"cached":[562,1,564,2,568,1,571,1]
,"ilvtiledeleted":[562,1,568,3]
,"ilvtilecontroller":[562,1,563,1,567,2,568,1]
,":gettile":[562,1]
,"potential":[562,1]
,"virtually":[562,1]
,"infinite)":[562,1]
,"setsize":[563,1,636,1]
,"(ilvrect)":[563,1]
,"(size":[563,1]
,"grid)":[563,1]
,"large-tile":[563,1]
,"small-tile":[563,1]
,":setdebugview":[564,1]
,"ilvcolor*bordercolor":[564,1]
,"ilvcolor*lockedtilescolor":[564,1]
,"ilvcolor*cachedtilescolor":[564,1]
,"suggests":[564,1]
,"debugging":[564,1]
,"increment":[564,1]
,"decrement":[564,1]
,"counters":[564,3]
,"whith":[564,1]
,":debugview":[564,1]
,"{_debug":[564,1]
,"debugview":[564,2]
,"(450":[564,1]
,"100)":[564,1]
,"_manager->":[564,2]
,"(_debug)":[564,2]
,"_tiledlayer->":[564,1,568,1]
,"setdebugview":[564,1]
,":magview":[564,1]
,"{_magvint":[564,1]
,"(_manager":[564,1,568,1]
,"_debug":[564,1]
,"_view)":[564,1,568,1]
,"_magvint->":[564,3]
,"setautozooming":[564,1]
,"setautotranslating":[564,1]
,"setresizingallowed":[564,1]
,"setinteractor":[564,1]
,"(_magvint":[564,1]
,"_debug)":[564,1]
,"controlling":[565,1]
,"1\u002F1,000,000":[566,1]
,"1\u002F500,00":[566,1]
,"event-driven":[567,1]
,"locktile":[567,2]
,"preload":[567,1]
,"visited":[567,1,569,1]
,"increments":[567,1]
,":locktile":[567,1]
,"source)":[567,2]
,":unlocktile":[567,1]
,"ilvtilelistener":[568,3]
,"tilechanged":[568,1]
,"subtyping":[568,1,576,1]
,"ilvtilecache":[568,4,571,6]
,":tileabouttoload":[568,1,571,1]
,":tilecached":[568,1,571,1]
,":tileretrieved":[568,1,571,1]
,"char*tostring":[568,1]
,"(ilvtilestatus":[568,1]
,"{switch":[568,1]
,":tilechanged":[568,1]
,"(ilvtile*tile":[568,1]
,"ilvtilestatus":[568,2]
,"oldstatus":[568,1]
,"newstatus)":[568,1]
,"getrow":[568,1,572,1]
,"getcolumn":[568,1,572,1]
,"(oldstatus)":[568,1]
,"(newstatus))":[568,1]
,":listener":[568,1]
,"{_listener":[568,1]
,"addtilelistener":[568,1]
,"(_listener)":[568,1]
,"transitional":[568,2]
,"grouping":[568,1]
,":begingroupednotification":[568,1]
,":endgroupednotification":[568,1]
,"eligible":[569,1]
,"unloading":[569,1]
,"ilvdefaulttilecache":[569,1,571,1]
,"lru":[569,1]
,"(least":[569,1]
,"recently":[569,2,571,1]
,"unloads":[569,1]
,"longest":[569,1]
,"101":[569,1]
,".ivl":[570,1]
,"simpletilecache":[571,1]
,"extends":[571,1]
,"tilecache":[571,11]
,"size)":[571,2,577,1]
,":tilecache":[571,3]
,"(ilvinputfile&file)":[571,2,643,1]
,"tileabouttoload":[571,1]
,"(ilvtile":[571,4]
,"tilecached":[571,1]
,"tileretrieved":[571,1]
,"controllerdeleted":[571,1]
,"_size":[571,4]
,"_tiles":[571,1]
,":ilvtilecache":[571,2]
,"(size)":[571,1]
,"caches":[571,1]
,"{file.getstream":[571,1,643,1]
,"<<_size":[571,1]
,"*tile)":[571,2]
,"{_tiles.append":[571,1]
,"{_tiles.remove":[571,1]
,"toremove":[571,1]
,"=_tiles.length":[571,1]
,"-_size":[571,1]
,"(toremove":[571,1]
,"<=0)":[571,1,642,1]
,"=toremove":[571,1]
,"i--)":[571,1]
,"{ilvtile*current":[571,1]
,"=(ilvtile*)_tiles":[571,1]
,"_tiles.remove":[571,2]
,"(current)":[571,2]
,"releasetile":[571,1]
,":controllerdeleted":[571,1]
,"(ilvtilecontroller*controller)":[571,1]
,"{ilvlink*l":[571,1]
,"=_tiles.getfirst":[571,1]
,"ilvtile*tile":[571,1]
,"{tile":[571,1]
,"=(ilvtile*)":[571,1]
,"l->":[571,1]
,"getcontroller":[571,1]
,"==controller)":[571,1]
,"ilvtileloader":[572,2]
,"proportion":[572,1]
,"100x100":[572,1]
,"6000x6000":[572,1]
,"simulates":[572,1]
,":loadcomplete":[572,1]
,"tileloader":[572,4]
,"(ilvdisplay*)":[572,1]
,"rbbox":[572,1]
,"(rbbox)":[572,1]
,"ilvrectangle":[572,2]
,"*rect":[572,1]
,"rbbox)":[572,1]
,"+=\u0022":[572,2]
,"+=tile->":[572,2]
,"+=\u0022)":[572,1]
,"ilvmaplabel*label":[572,1]
,"ilvmaplabel":[572,1]
,"str.getvalue":[572,1]
,"lbbox":[572,1]
,"(lbbox)":[572,1]
,"=rbbox.x":[572,1]
,"rbbox.w":[572,1]
,"=rbbox.y":[572,1]
,"rbbox.h":[572,1]
,"(cx":[572,1]
,"-lbbox.w":[572,1]
,"-lbbox.h":[572,1]
,"\u002F2)":[572,1]
,"loadcomplete":[572,1]
,"ilvmaps":[572,1,574,1,578,1,582,1,585,1,591,1,611,1,612,3,614,1,615,3,616,4,618,3,620,1,628,2,636,2,637,2,641,2,642,2,643,1]
,"releases":[572,1]
,"tile.deleteall":[572,1]
,":release":[572,1]
,"{tile->":[572,1]
,"deleteall":[572,1]
,"predefin":[573,1]
,"s57":[573,1,598,20,599,4,600,7,645,2]
,"vector":[575,1,611,1]
,"environmental":[575,1]
,"institute":[575,1]
,"(esri)":[575,1]
,"ifferent":[575,1]
,"ile":[575,1]
,"(.shp":[575,1]
,"ontains":[575,3]
,"dbase":[575,1,577,1]
,"(.dbf":[575,1]
,"(.shx)":[575,1]
,".shp":[575,1,576,6]
,"(.idx":[575,1,576,1]
,"-contains":[575,1]
,"(ilvgeographicprojection":[575,1]
,"ilvshapefilereader":[576,3,577,2,596,1,597,1]
,".dbf":[576,6]
,"shx":[576,5]
,"ilvshapeshpreader":[576,5,577,1]
,"ilvshapedbfreader":[576,5]
,"ilvshapefileindex":[576,4,577,4]
,".shx":[576,1]
,"ilvshapespatialindex":[576,2,577,5]
,"files)":[576,1]
,"merges":[576,2]
,":getfeatureat":[576,1]
,"<installdir>\u002Fsamples\u002Fmaps\u002Fshapefile":[576,1]
,"lvshapeshpreader":[576,1]
,"shp":[576,1,645,1]
,"acces":[576,1]
,"measurements":[576,5]
,"ilvattributearray":[576,2]
,"pointz":[576,2]
,"polylinez":[576,2]
,"polygonz":[576,2]
,"multipointz":[576,2]
,"pointm":[576,1]
,"polylinem":[576,1]
,"polygonm":[576,1]
,"multipointm":[576,1]
,"multipatch":[576,1]
,"effort":[576,1]
,"ilvshapedbfreader*reader":[576,1]
,"myfile.dbf":[576,1]
,"getnextrecord":[576,2]
,"(attributes)":[576,1]
,"{\u002F\u002Fprocess":[576,1]
,"reader->":[576,1,577,2,585,1]
,"readrecord":[576,1]
,"(index":[576,1]
,"error)":[576,1,597,1]
,"relations":[577,1]
,"identifiers":[577,5,597,1]
,"dbf":[577,1]
,"ilvshapefiletiler":[577,5]
,"ordinal":[577,1]
,"(tile":[577,1]
,"ilvshapefiletileloader":[577,4]
,"ilvshapelayer":[577,2]
,"\u002F\u002Fopen":[577,3]
,"ilvshapefileindex*index":[577,1]
,"(shxfilename)":[577,1]
,"=index->":[577,2]
,"ilvshapeshpreader*shape":[577,1]
,"(shpfilename)":[577,1]
,"=shape->":[577,1]
,"\u002F\u002Fconstruct":[577,1]
,"ilvshapefilereader*reader":[577,2,596,1,597,1]
,"(shape":[577,1]
,"\u002F\u002Fretrieve":[577,2]
,"getrecordcount":[577,1]
,"getfeatureat":[577,2]
,"getidarray":[577,2]
,"(shpfilename":[577,3]
,"shxfilename)":[577,1]
,"ilvshapespatialindex*spindex":[577,1]
,"(idxfilename)":[577,1]
,"=spindex->":[577,2]
,"\u002F\u002Floop":[577,2]
,"<spindex->":[577,2]
,"getcolumncount":[577,1]
,"getrowcount":[577,2]
,"*ret":[577,1]
,"ids":[577,2]
,"\u002F\u002Fat":[577,1]
,"ret":[577,2]
,"<size":[577,1]
,"(ret":[577,1]
,"\u002F\u002Ffree":[577,1]
,"(ret)":[577,1]
,"ilvshapespatialindex*tilerindex":[577,1]
,"(getcolumncount":[577,1]
,"getorigin":[577,1]
,"gettilewidth":[577,1,594,1]
,"gettileheight":[577,1,594,1]
,"=tilerindex->":[577,1]
,"=(ilvmapfeature*)":[577,2,585,1]
,"{\u002F\u002Fdetermine":[577,1]
,"=getrow":[577,1]
,"=getcolumn":[577,1]
,"tilerindex->":[577,2]
,"(row":[577,1,596,1]
,"id)":[577,1,596,1]
,"\u002F\u002Fwrite":[577,1]
,"spatialindex.idx":[577,1]
,"reateshapespatialindex":[577,2]
,"example.shp":[577,3]
,"example.idx":[577,3]
,"(ildouble)":[577,2]
,"=-5":[577,1]
,"=20)":[577,1]
,"=35":[577,1]
,"=-30)":[577,1]
,"(ilint)":[577,2]
,"30)":[577,1]
,"600":[577,1]
,"(0.001)":[577,2,592,1]
,"ilvshapefiletileloader*tileloader":[577,2]
,"dbffilename":[577,2]
,"\u002F\u002For":[577,2]
,"\u002F\u002Floading":[577,2]
,"shxfilename":[577,2]
,"idxfilename":[577,2]
,"&a)":[577,2]
,"ilvtiledlayer*tiledlayer":[577,1,587,1,592,1]
,"(gettileorigin":[577,1,587,1,592,1]
,"tiledlayer->":[577,1,587,1,592,1]
,"settileloader":[577,1,587,1,592,1]
,"(tileloader)":[577,2]
,"ilvshapefilelayer":[577,2]
,"restart":[577,1,588,1,593,1]
,"ilvshapefilelayer*shapelayer":[577,1]
,"addlayer":[577,1,588,1,593,1,596,1,597,1]
,"(shapelayer)":[577,1]
,"(ofstream":[577,1,588,1,593,1]
,"out.ilv":[577,1,588,1,593,1]
,"(dted)":[579,1]
,"published":[579,1,582,1,598,1]
,"u.s":[579,1,582,1,630,5]
,"national":[579,1,582,1,632,1]
,"imagery":[579,1,582,1,632,1]
,"agency":[579,1,582,1,632,1]
,"(nima)":[579,1,582,1,632,1]
,"general)":[579,1]
,"average":[579,1,596,1,597,1]
,"surface":[579,3,602,2,604,1,605,1,607,1,612,1,631,1,632,5]
,"nitrogen":[579,1]
,"rating":[579,1]
,"soil":[579,1]
,"dted0":[579,1,645,2]
,"raw":[579,1]
,"(approximately":[579,1]
,"file)":[579,1,583,1]
,"dted1":[579,2]
,"dted2":[579,1]
,"nine":[579,1]
,"enormous":[579,1]
,"(several":[579,1]
,"megabytes)":[579,1]
,"ilvdtedreader":[580,1,581,1]
,"(dtm)":[580,1]
,"ilvmapraster":[580,1,597,1]
,"dted-level":[580,1]
,"<installdir>\u002Fsamples\u002Fmaps\u002Fdted":[580,1]
,"ilvdefaultrasterrenderer":[581,1]
,"(ilvintervalcolormodel":[581,1]
,"deep":[581,1]
,"brown":[581,1]
,"altitudes":[581,1]
,"(cadrg)":[582,1]
,"rpf":[582,2]
,"a.toc":[582,1,583,1]
,"overviews":[582,1]
,"coverages":[582,1,583,1]
,"poles":[582,1,612,1,622,1,641,1]
,"azimuthal":[582,1,602,1,605,3,613,1,633,1]
,"equidistant":[582,1,606,1,613,1]
,"ilvcadrgtocreader":[583,2]
,"ilvcadrgframereader":[583,4]
,"ilvcadrtocreader":[583,1]
,"ilvcadrgcoverage":[583,2]
,"ilvcadrgframe":[583,1]
,"ilvcadrgtocreader*tocreader":[583,1]
,"ilvcadrgframe*const*frames":[583,1]
,"=tocreader->":[583,1]
,"getoverviewframes":[583,1]
,"{ilvmapfeatureiterator*iterator":[583,1]
,"=frames":[583,1]
,"[i]->":[583,1]
,"makereader":[583,2]
,"(iterator)":[583,1]
,"subframe":[583,1]
,"subframes":[583,2]
,"ilvmapimage":[583,1,585,1,591,1,597,1]
,"ilvdefaultimagerenderer":[583,1,591,1]
,"non-polar":[583,1]
,"zones":[583,1,645,1]
,"ilvimagetileloader":[584,1,586,3,587,3,588,1]
,"\u002F\u002Flower-right":[585,1]
,"(77.5":[585,1]
,"(82.5":[585,1]
,"ilvimagereader*reader":[585,1]
,"\u002F\u002Fimage":[585,1,591,1]
,"ilvgeographicprojection*projection":[585,1,591,1]
,"(projection)":[585,2,591,1,610,1,616,1]
,"feature->":[585,1,597,2]
,"(*feature":[585,1,591,1]
,"*mapinfo":[585,1,599,1]
,"knowing":[586,1]
,"reconstruct":[586,1]
,"scheme":[586,1,587,1]
,"ilvmapimagetileloader":[586,1]
,"char*p":[586,1]
,"attern":[586,1]
,"char*r":[586,1]
,"owformatstring":[586,1]
,"olformatstring":[586,1]
,"ilvmapadapter*adapter)":[586,1]
,"specifier":[586,4]
,"rowformatstring":[586,1]
,"colformatstring":[586,1]
,"interpreted":[586,1,597,1,612,1,618,1]
,"printf":[586,1]
,"schemes":[586,1]
,"getfilename":[586,1]
,"tiles\u002Ftile_010_20.jpg":[587,1]
,"attempting":[587,1]
,"ilv":[587,1,610,1]
,"imaget":[587,1]
,"ileloader":[587,1]
,"tiles\u002Ftile_%":[587,2,588,1]
,"c_%":[587,2,588,1]
,"r.jpg":[587,2,588,1]
,"03d":[587,2,588,1]
,"02d":[587,2,588,1]
,"adapter)":[587,2,588,1]
,"ilvimagetileloader*loader":[587,1,588,1]
,"(loader)":[587,1,592,1,593,1]
,"ilvimagelayer":[588,3]
,"ilvimagelayer*layer":[588,1]
,"(loader":[588,1]
,"(layer)":[588,1,593,1,596,1,597,1]
,"ilvtiffstreamer":[589,1,594,1]
,"tiff":[590,3,591,3,592,3,594,1]
,"(tagged":[590,1]
,"pixel":[590,2]
,"official":[590,1]
,"http:\u002F\u002Fpartners.adobe.com\u002Fasn\u002Fdeveloper\u002Fpdfs\u002Ftn\u002Ftiff6.pdf":[590,1]
,"http:\u002F\u002Fwww.remotesensing.org\u002Fgeotiff\u002Fgeotiff.html":[590,1]
,"ilvgeotiffreader":[591,3]
,"ilvfeatureiterator":[591,1]
,"ilvicon":[591,1]
,"ilvgeotiffreader*reader":[591,1]
,"ilvgeotifftileloader":[592,3]
,"origin)":[592,1]
,"ilvbitmapdata":[592,1]
,"ilvgeotifftileloader*loader":[592,1]
,"&adapter)":[592,1]
,"ilvgeotifflayer":[593,3]
,"ilvgeotifflayer*layer":[593,1]
,"ilvgeotifftiler":[594,3]
,"re-encode":[594,1]
,"tiler":[594,1]
,"ilvgeotifftiler*tiler":[594,1]
,"out.tif":[594,1]
,"=tiler->":[594,2]
,"streamer":[594,1]
,"performtiling":[594,1]
,"(streamer)":[594,1]
,"ilvdbmaps":[595,3]
,"ersion":[595,2]
,"7.3":[595,2]
,"cartridge":[595,1]
,"8.0":[595,1]
,"8.i":[595,1]
,"lso":[595,1]
,"reading\u002Fwriting":[595,1]
,"utilities":[595,1,617,1,620,2]
,"privileges":[595,1]
,"writer":[595,1,596,1,597,2]
,"familiar":[595,2,641,1,642,1]
,"ilddbms":[595,1]
,"ildrequest":[595,1]
,"ilderrorreporter":[595,1]
,"classes)":[595,1]
,"dbora8":[595,1]
,"manua":[595,1]
,"cense":[595,2]
,"ilvsdofeatureiterator":[596,5]
,"ilvsdotileloader":[596,2,597,2]
,"ilvdefaultsdotileloader":[596,4]
,"hich":[596,1]
,"optimized":[596,1]
,"nto":[596,1,597,1]
,"roads_sdogeom":[596,4]
,"=ilstring":[596,1,597,1]
,"*from":[596,1,597,2]
,"\u002F\u002Fkeep":[596,1]
,"ilddbms*mydbms":[596,3,597,4]
,"=ildnewdbms":[596,3,597,4]
,"scott\u002Ftiger@mydomain":[596,3,597,4]
,"ildrequest*resultset":[596,1]
,"=mydbms->":[596,1]
,"getfreerequest":[596,1]
,"resultset->":[596,1]
,"(query.getvalue":[596,1]
,"orders":[596,1]
,"gid":[596,3]
,"(geometric":[596,1]
,"eseq":[596,2]
,"(element":[596,1]
,"sequence)":[596,2]
,"seq":[596,2]
,"resultset":[596,2]
,"(columns":[596,1]
,"etype":[596,1]
,":getid":[596,1,597,1]
,"indexation":[596,1,597,1]
,"ilvmapadapter*adapter":[596,1,597,1]
,"(0.5)":[596,1,597,1]
,"ilvsdolayer*layer":[596,1]
,"(adapter":[596,1,597,2]
,"mydbms":[596,1,597,2]
,"lvsdotileloader":[596,1]
,"settilegroupingcount":[596,2,597,2]
,"ery":[596,1,597,1]
,"emand":[596,1,597,1]
,"(n)":[596,1,597,1]
,"-on-de":[596,1,597,1]
,"man":[596,1]
,"getfeatureiterator":[596,1,597,1]
,"(inside":[596,1,597,1]
,"layer)":[596,1,597,1]
,"databas":[596,1]
,"ilvsdowriter":[596,6]
,"clas":[596,1]
,"(vectorial":[596,1,597,1]
,"geometries)":[596,1,597,1]
,"ilvsdowriter*writer":[596,1]
,"(mydbms":[596,1,597,3]
,"mylayer":[596,1,597,1]
,"135)":[596,1]
,"foo.shp":[596,1,597,1]
,"geomcount":[596,1]
,"\u002F\u002Fdump":[596,1]
,"writer->":[596,1,597,1]
,"writefeatureiterator":[596,1,597,1]
,"(reader":[596,1,597,1]
,"geomcount)":[596,1]
,"writefeature":[596,2,597,1]
,"mother":[596,1]
,"ilvmappoint":[596,1]
,"ilvmappolygon":[596,1]
,"ilvmapmultipoint":[596,1]
,"ilvmapmulticurve":[596,1]
,"multiline":[596,1]
,"ilvmapmultiarea":[596,1]
,"multipolygons":[596,1]
,"ilvobjectsdofeatureiterator":[597,5]
,"onvert":[597,1]
,"racle":[597,2]
,"ilvobjectsdolayer":[597,9]
,"mplement":[597,1]
,"oad-on-demand":[597,1]
,"stract":[597,1]
,"efin":[597,1]
,"ilvdefaultobjectsdotileloader":[597,4]
,"ilvobjectsdofeatureiterator*iterator":[597,1]
,":getattributes":[597,1]
,"big":[597,2]
,"\u002F\u002Fyou":[597,1]
,"ilvobjectsdolayer*layer":[597,2]
,"\u002F\u002Fassume":[597,1]
,"\u002F\u002Fgeometry":[597,1]
,"\u002F\u002Fwidth":[597,1]
,"\u002F\u002Fcoordinate":[597,2]
,"1500":[597,3]
,"\u002F\u002Fheight":[597,1]
,"x-ordinates":[597,1]
,"y-ordinates":[597,1]
,"1500)":[597,1]
,"metadata":[597,2]
,"(sdo_geom_metadata":[597,1]
,"user_sdo_geom_metadata":[597,1]
,"sdo_dim_array":[597,1]
,"(sdo_dim_element":[597,1]
,"(\u2019x":[597,1]
,"-180":[597,1]
,"sdo_dim_element":[597,2]
,"(\u2019y":[597,1]
,"-90":[597,1]
,"0))":[597,1]
,"lement":[597,1]
,"mand":[597,1]
,"setrequestparameters":[597,1]
,"sdo_filter":[597,3]
,"(default":[597,1]
,"case)":[597,1]
,"(2,2)":[597,1]
,"(2,3)":[597,1]
,"(3,3)":[597,1]
,"triangle":[597,2]
,"here)":[597,1]
,"sdo_relate":[597,2]
,"querytype=window":[597,1]
,"mask=anyinteract":[597,1]
,"ilvobjectsdowriter":[597,8]
,"ilvobjectsdowriter*writer":[597,1]
,"\u002F\u002Fcr":[597,1]
,"eat":[597,1]
,"\u002F\u002Fdu":[597,1]
,"count)":[597,1]
,"\u002F\u002Fcalls":[597,1]
,"del":[597,1]
,"auxiliary":[597,1]
,":close":[597,1]
,"ata":[597,1]
,"een":[597,1]
,"ate":[597,1]
,":writefeature":[597,1]
,"(ilvmapfeature":[597,1]
,"*feature":[597,1]
,"saveattributes":[597,1]
,"mdsys.sdo_geometry":[597,1]
,"type_desc":[597,2]
,"(512)":[597,1]
,"ilvobjectsdowriter*mywriter":[597,1]
,"\u002F\u002Fconstruction":[597,1]
,"ilvmapclassinfo**attributeclasses":[597,1]
,"ilvmapclassinfo*[1]":[597,1]
,"ilvboolean*nullable":[597,1]
,"=iltrueiltrue":[597,1]
,"attributeclasses":[597,2]
,"char**names":[597,1]
,"char*[1]":[597,1]
,"[10]":[597,1]
,"\u002F\u002Fexactly":[597,1]
,"olumn":[597,1]
,"(names":[597,1]
,"\u002F\u002Fth":[597,1]
,"ilvfeatureattribute**attributes":[597,1]
,"ilvfeatureattribute*[1]":[597,1]
,"foo":[597,1]
,"setattributeinfo":[597,1]
,"(error":[597,1,644,1]
,"==ilvmaps":[597,1,599,1,636,1,637,1]
,"=mywriter->":[597,1]
,"rue)":[597,1]
,"updatefeatureattributes":[597,1]
,"(ilvfeatureattributeproperty":[597,1]
,"*attributes":[597,1]
,"keypos":[597,1]
,"-based":[597,1]
,"updatefeatureattribute":[597,1]
,"char*keycolumnname":[597,1]
,"*keyattribute":[597,1]
,"char*attributecolumnname":[597,1]
,"*attributetoupdate":[597,1]
,"-where":[597,1]
,"attributetoupdate":[597,1]
,"argument)":[597,1]
,"ilvmaptext":[597,1]
,"nautical":[598,2,630,2]
,"international":[598,1,625,2,630,9]
,"hydrographic":[598,2]
,"(iho)":[598,1]
,"http:\u002F\u002Fwww.iho.shom.fr\u002Fthe":[598,1]
,"iho":[598,2]
,"transfer":[598,1]
,"catalog":[598,5,599,1]
,"(.030":[598,1]
,".031)":[598,1]
,"(.000)":[598,1]
,"subzone":[598,1]
,"collected":[598,1]
,"s52":[598,1]
,"formalism":[598,1]
,"ilvs57loader":[599,3]
,"(s57":[599,1]
,"frid":[599,1]
,"record)":[599,1]
,"ilvs57renderer":[599,1]
,"ilvmanager*m":[599,1]
,"ilvfeatureattributeproperty*ap":[599,1]
,"catalog.030":[599,1]
,"reader.setfilename":[599,1]
,"=reader.getdefaultfeaturerenderer":[599,1]
,"ilvmapfeature*f":[599,1]
,"=reader.getnextfeature":[599,2]
,"&&f":[599,1]
,"{graphic":[599,1]
,"(*f":[599,1]
,"{ap":[599,1]
,"=f->":[599,1]
,"m->":[599,1]
,"(ap)":[599,1]
,"(ap->":[599,1]
,"configuring":[600,1]
,"s57styles.txt":[600,3]
,"administration":[600,1]
,"(named)":[600,1]
,"bbd2c1":[600,1]
,"airport\u002Fairfield":[600,1]
,"aea052,997035":[600,1]
,"airare02.png":[600,1]
,"anchor":[600,1]
,"berth":[600,1]
,"achbrt07.png":[600,1]
,"anchorage":[600,1]
,"achare02.png":[600,1]
,"beacon":[600,1]
,"(cardinal)":[600,1]
,"bcncar02.png":[600,1]
,"comma-separated":[600,1]
,"invisible)":[600,1]
,"(hexadecimal":[600,2]
,"rgb)":[600,2]
,"false)":[600,2]
,"stroke":[600,3]
,"dash":[600,1]
,"dashdot":[600,1]
,"dashdoubledot":[600,1]
,"doubledot":[600,1]
,"longdash":[600,1]
,"ilvlinestyle":[600,1]
,"(s57styles.txt":[600,1]
,"<$ilvhome>\u002Fdata\u002Fmaps\u002Fs57":[600,1]
,"ilvmapss57styles":[600,1]
,"(ilvs57renderer":[600,1]
,"turning":[600,1]
,"pro":[601,1]
,"jections":[601,1]
,"ellipsoids":[601,2,618,1,619,2,621,6,622,2,623,4,624,2,625,3,640,2]
,"ellipsoid":[601,2,618,1,619,3,621,1,622,1,623,8,624,10,625,2,632,4,639,2,641,7,642,7]
,"converters":[601,2,619,2,626,5,627,5,628,2,629,1,630,4]
,"geodetic":[601,1,619,2,625,1,631,6,632,1]
,"datums":[601,1,631,1]
,"imported":[601,1,632,1,633,1,636,1]
,"earth":[602,3,604,1,612,1,619,4,622,4,624,2,632,1,639,4,641,1]
,"flat":[602,2,603,1,605,1,607,1,622,1]
,"piece":[602,1]
,"paper":[602,1]
,"ellipsoidal":[602,1,622,1]
,"portray":[602,1]
,"distortion":[602,2,603,1,606,4,619,1]
,"regions":[602,1,606,1,641,1]
,"faithfully":[602,1]
,"years":[602,1,631,1]
,"maintain":[602,1,606,1,613,1,643,1]
,"interests":[602,1]
,"classified":[602,1]
,"cylindrical":[602,1,603,5,619,1]
,"conic":[602,1,604,4,619,1]
,"conformal":[602,1,606,4,640,1]
,"wrapping":[603,1]
,"plane":[603,1,619,2]
,"cylinder":[603,4,641,1]
,"tangent":[603,2,604,1,632,1,641,1]
,"equator":[603,1,641,1,643,1]
,"tangency":[603,1]
,"transverse":[603,1,623,1]
,"transfers":[604,1]
,"cone":[604,1]
,"secant":[604,1,619,1]
,"spherical":[605,1,622,1,624,1,641,1]
,"worth":[606,1]
,"noting":[606,1]
,"maintaining":[606,1]
,"measured":[606,1]
,"(azimuthal":[606,1]
,"angular":[606,1]
,"(navigational":[606,1]
,"air-route":[606,1]
,"small-scale":[606,1,622,1]
,"large-scale":[606,1,622,1]
,"navigational":[606,1,610,1]
,"proj":[606,1]
,"gerald":[606,1]
,"evenden":[606,1]
,"books":[606,1]
,"(snyder":[606,2]
,"1987)":[606,1]
,"album":[606,1]
,"voxland":[606,1]
,"1989)":[606,1]
,"illustrating":[607,1]
,"calculating":[607,1,614,1,632,1]
,"<installdir>\u002Fsamples\u002Fmaps\u002Fuserman\u002Fsrc\u002Fuseproj.cpp":[607,1,608,1]
,"commented":[608,1]
,"<installdir>\u002Fsamples\u002Fmaps\u002Fuserman\u002F<platform>":[608,1,634,1]
,"(on":[608,2,634,2]
,"systems)":[608,2,634,2]
,"useproj":[608,1,628,1]
,"45w":[608,1,613,2,616,1,628,1]
,"30n":[608,1,613,2,616,1,628,1]
,"=-5003769":[608,1]
,"=3499627":[608,1]
,"45dw":[608,1]
,"30dn":[608,1]
,"useproj.cpp":[608,1]
,"<ilviews\u002Fmaps\u002Fprojection\u002Fmercator.h>":[609,1,616,1,628,1]
,"<ilviews\u002Fmaps\u002Fprojection\u002Fallprojs.h>":[609,1]
,"showprojection":[610,5,616,2]
,"(written":[610,1]
,"signature":[610,1]
,"projection&projection)":[610,1]
,"double-precision":[611,1]
,"lambda":[611,2,616,1,628,1]
,"phi":[611,2,616,1,619,1,628,1,642,2]
,":degreetoradian":[611,3,616,2,628,2]
,"(-45.)":[611,1,616,1]
,"(30.)":[611,1,616,1]
,"(lambda":[611,1,616,1,628,1]
,"phi)":[611,1,616,1,628,1]
,"(ll)":[611,2]
,"numerals":[611,1,614,1]
,"(11)":[611,1,614,1]
,"(longitude":[612,1,636,1]
,"latitude)":[612,1,614,1,636,2]
,"pre-existing":[612,1]
,"(conservation":[612,1]
,"surfaces":[612,1]
,"(xy":[612,1,614,1,616,1,628,1]
,"=projection.forward":[612,1,616,1]
,"(ll":[612,1,614,2,616,1,628,1]
,"xy)":[612,1,616,1,628,1]
,":geterrormessageid":[612,2,614,1,616,2,618,1]
,"(microsoft":[612,1]
,"applications)":[612,2]
,"console-enabled":[612,1]
,"(unix":[612,1]
,"meters":[613,1,624,5,627,6,628,1,629,1,631,1,632,1,642,1]
,"(0e":[613,1]
,"0n)":[613,1]
,"m\u005Cn":[613,1,616,1]
,"xy.x":[613,1,616,1,628,1]
,"xy.y":[613,1,616,1,628,1]
,"(of":[614,1]
,"expect":[614,1]
,"lette":[614,1]
,"ll.move":[614,1,616,1]
,"0.)":[614,1,616,1]
,"=projection.inverse":[614,1,616,1]
,"ll)":[614,1,616,1,628,1,637,1]
,"humanly":[615,1]
,"radiantodms":[615,1]
,"buffer1":[615,1,616,1,628,1]
,"[12]":[615,2,616,2,628,2,637,2,644,1]
,"buffer2":[615,1,616,1,628,1]
,":radiantodms":[615,2,616,2,628,2,637,2,644,1]
,"(buffer1":[615,1,616,1,628,1]
,"ll.x":[615,1,616,1,628,1,637,1]
,"(buffer2":[615,1,616,1,628,1]
,"ll.y":[615,1,616,1,628,1,637,1]
,"iltrue))":[615,1,616,1,628,1]
,"ilvprojection&projection)":[616,1]
,"\u002F\u002Fforward":[616,1]
,"long\u002Flat":[616,1]
,"x\u002Fy)":[616,1]
,"\u002F\u002Fprinting":[616,2]
,"\u002F\u002Fresetting":[616,1]
,"\u002F\u002Finverse":[616,1]
,"x\u002Fy":[616,1]
,"long\u002Flat)":[616,1]
,"char**)":[616,1,635,1]
,"{ilvmercatorprojection":[616,1]
,"functio":[618,1]
,"failure":[618,1]
,":unsupportedfeatureerror":[618,1,641,1,642,1]
,"non-implemented":[618,1]
,"nonspherical":[618,2,623,1,639,2,640,2,641,2,642,1]
,"ilvequidistantcylindricalprojection":[618,1]
,":isellipsoidenabled":[618,1]
,":isinverseenabled":[618,1]
,"codes":[618,2,638,1,643,1,645,1]
,"setllcenter":[619,1]
,"easting":[619,1]
,"northing":[619,1]
,"setxyoffset":[619,1]
,"geocentric":[619,3,641,1,642,1]
,"setgeocentric":[619,1]
,"equatorial":[619,2,624,3]
,"geographic)":[619,1]
,"sphere":[619,1,622,2,623,2,624,5,625,2,639,2,641,7,642,4]
,"latitudes":[619,3,632,1]
,"tan":[619,2]
,"phig":[619,1]
,"=(1":[619,1]
,"eccentricity":[619,1,624,5,625,1]
,"[-pi":[619,1,641,1,642,1]
,"pi]":[619,1,641,1,642,1]
,"setusinglongitudereduction":[619,1]
,"6371":[622,1]
,"rotates":[622,1]
,"flattened":[622,1]
,"approximated":[622,1]
,"rotating":[622,1]
,"continent":[622,1]
,"planet":[622,1]
,"indeed":[622,1]
,"elliptical":[622,1]
,"ilvellipsoid":[623,3,624,10,625,1,641,1]
,"universal":[623,2]
,"stereographic":[623,1]
,":setellipsoid":[623,1]
,"setellipsoid":[623,1,625,1]
,"(*ilvellipsoid":[623,1]
,":wgs84":[623,1]
,":getregisteredellipsoid":[623,1,625,1]
,"semi-major":[624,1,625,1,642,2]
,"squared":[624,5]
,"(10.0)":[624,1]
,":sphere":[624,1]
,"0.0067":[624,1]
,"ilvellipsoid*ellipsoid":[624,2,625,1]
,"0.0067)":[624,1]
,":esfrompolarradius":[624,2]
,"(10.0,9.0))":[624,1]
,"esfrompolarradius":[624,1]
,"flattening":[624,1]
,":esfromflattening":[624,1]
,"getregisteredellipsoid":[625,1]
,"=ilvellipsoid":[625,1]
,"clrk66":[625,2]
,"(*ellipsoid)":[625,1]
,"6370997":[625,1]
,"6370997.0":[625,1]
,"merit":[625,2]
,"1983":[625,1]
,"6378137.0":[625,4]
,"0.0818192":[625,6]
,"sgs85":[625,1]
,"soviet":[625,1]
,"6378136.0":[625,1]
,"grs80":[625,1]
,"grs":[625,2]
,"1980":[625,1]
,"(iugg":[625,2]
,"1980)":[625,1]
,"iau76":[625,1]
,"iau":[625,1]
,"1976":[625,1]
,"6378140.0":[625,1]
,"airy":[625,3]
,"1830":[625,2]
,"6377563.396":[625,1]
,"0.0816734":[625,2]
,"apl4.9":[625,1]
,"appl":[625,1]
,"physics":[625,1]
,"1965":[625,2]
,"0.0818202":[625,5]
,"nwl9d":[625,1]
,"naval":[625,1]
,"weapons":[625,1]
,"lab":[625,1]
,"6378145.0":[625,2]
,"mod_airy":[625,1]
,"6377340.189":[625,1]
,"andrae":[625,2]
,"1876":[625,1]
,"(den":[625,1]
,"iclnd.)":[625,1]
,"6377104.43":[625,1]
,"0.0815816":[625,1]
,"aust_sa":[625,1]
,"australian":[625,1]
,"natl":[625,1]
,"amer":[625,1]
,"1969":[625,2]
,"6378160.0":[625,2]
,"grs67":[625,1]
,"1967)":[625,1]
,"0.0818206":[625,1]
,"bessel":[625,3]
,"1841":[625,2]
,"6377397.155":[625,1]
,"0.0816968":[625,2]
,"bess_nam":[625,1]
,"(namibia)":[625,1]
,"6377483.865":[625,1]
,"clarke":[625,2]
,"1866":[625,1]
,"6378206.4":[625,1]
,"0.0822719":[625,1]
,"clrk80":[625,1]
,"1880":[625,1]
,"mod":[625,1]
,"6378249.145":[625,1]
,"0.0824832":[625,1]
,"cpm":[625,1]
,"commission":[625,1]
,"des":[625,1]
,"poids":[625,1]
,"mesures":[625,1]
,"(1799)":[625,1]
,"6375738.7":[625,1]
,"0.0772909":[625,1]
,"delmbr":[625,1]
,"delambre":[625,1]
,"1810":[625,1]
,"(belgium)":[625,1]
,"6376428.0":[625,1]
,"0.080064":[625,1]
,"engelis":[625,2]
,"1985":[625,1]
,"6378136.05":[625,1]
,"0.0818193":[625,1]
,"evrst30":[625,1]
,"everest":[625,5]
,"6377276.345":[625,1]
,"0.081473":[625,5]
,"evrst48":[625,1]
,"1948":[625,1]
,"6377304.063":[625,1]
,"evrst56":[625,1]
,"1956":[625,1]
,"6377301.243":[625,1]
,"evrst69":[625,1]
,"6377295.664":[625,1]
,"evrstss":[625,1]
,"(sabah":[625,1]
,"&sarawak)":[625,1]
,"6377298.556":[625,1]
,"fschr60":[625,1]
,"fischer":[625,3]
,"(mercury":[625,1]
,"datum)":[625,1]
,"1960":[625,2]
,"6378166.0":[625,1]
,"0.0818133":[625,7]
,"fschr60m":[625,1]
,"6378155.0":[625,2]
,"fschr68":[625,1]
,"1968":[625,1]
,"6378150.0":[625,1]
,"helmert":[625,2]
,"1906":[625,1]
,"6378200.0":[625,1]
,"hough":[625,2]
,"6378270.0":[625,1]
,"0.0819919":[625,2]
,"intl":[625,1]
,"1909":[625,1]
,"(hayford)":[625,1]
,"6378388.0":[625,1]
,"krass":[625,1]
,"krassovsky":[625,1]
,"1942":[625,1]
,"6378245.0":[625,1]
,"kaula":[625,2]
,"1961":[625,1]
,"6378163.0":[625,1]
,"0.0818215":[625,1]
,"lerch":[625,2]
,"1979":[625,1]
,"6378139.0":[625,1]
,"mprts":[625,1]
,"maupertius":[625,1]
,"1738":[625,1]
,"6397300.0":[625,1]
,"0.1021949":[625,1]
,"new_intl":[625,1]
,"1967":[625,1]
,"6378157.5":[625,1]
,"plessis":[625,2]
,"1817":[625,1]
,"(france)":[625,1]
,"6376523.0":[625,1]
,"0.0804333":[625,1]
,"seasia":[625,1]
,"southeast":[625,1]
,"asia":[625,1]
,"walbeck":[625,2]
,"6376896.0":[625,1]
,"0.0812068":[625,1]
,"wgs60":[625,1]
,"wgs":[625,4]
,"6378165.0":[625,1]
,"wgs66":[625,1]
,"wgs72":[625,1]
,"6378135.0":[625,1]
,"0.0818188":[625,1]
,"wgs84":[625,1,632,3]
,"feet":[627,3,628,4]
,"ilvunitconverter":[627,3,629,1,630,1]
,"ilvunitconverter*converter":[627,1,630,1]
,"=ilvunitconverter":[627,1,628,1,630,1]
,":ft":[627,1,628,1]
,"=100":[627,2]
,"feet=converter->":[627,1]
,"frommeters":[627,2]
,"(meters)":[627,1]
,"feet)":[627,1]
,"=converter->":[627,1]
,"tometers":[627,2,630,1]
,"(feet)":[627,1]
,"meters)":[627,1]
,".you":[627,1]
,"{ilvunitconverter*converter":[628,1]
,"projection.setunitconverter":[628,1,630,1]
,"(*converter)":[628,1,630,1]
,"(-45.0)":[628,1]
,"(30.0)":[628,1]
,"projection.forward":[628,1]
,"ft\u005Cn":[628,1]
,"ll.moveto":[628,1]
,"projection.inverse":[628,1]
,"ilfalseilfalse)":[628,1]
,"setunitconverter":[628,1]
,"(1000":[629,1]
,"getregisteredconverter":[630,1]
,"miles":[630,1]
,":getregisteredconverter":[630,1]
,"kmi":[630,2]
,"1000.0":[630,1]
,"decimeter":[630,1]
,"centimeter":[630,1,631,1]
,"0.01":[630,1]
,"millimeter":[630,1]
,"0.001":[630,1]
,"mile":[630,3]
,"1852.0":[630,1]
,"inch":[630,2]
,"0.0254":[630,1]
,"foot":[630,3]
,"0.3048":[630,1]
,"yard":[630,3]
,"0.9144":[630,1]
,"statute":[630,2]
,"1609.344":[630,1]
,"fath":[630,1]
,"fathom":[630,1]
,"1.8288":[630,1]
,"20.1168":[630,1]
,"0.201168":[630,1]
,"us-in":[630,1]
,"surveyor\u2019s":[630,5]
,"0.025400050800101603":[630,1]
,"us-ft":[630,1]
,"0.304800609601219":[630,1]
,"us-yd":[630,1]
,"0.914401828803658":[630,1]
,"us-ch":[630,1]
,"20.11684023368047":[630,1]
,"us-mi":[630,1]
,"1609.347218694437":[630,1]
,"ind-yd":[630,1]
,"indian":[630,3]
,"0.91439523":[630,1]
,"ind-ft":[630,1]
,"0.30479841":[630,1]
,"ind-ch":[630,1]
,"20.11669506":[630,1]
,"geode":[631,1]
,"tic":[631,1]
,"merging":[631,1]
,"agencies":[631,2]
,"datum":[631,6,632,15]
,"cartographers":[631,1]
,"geoid":[631,1,632,1]
,"irregular":[631,1]
,"showed":[631,1]
,"nowadays":[631,1]
,"satellites":[631,1]
,"surveys":[631,1]
,"accuracy":[631,1]
,"discrepancies":[631,1]
,"assumption":[632,1]
,"longitudes":[632,1]
,"ilvhorizontalshiftdatum":[632,1]
,"ilvhorizontaldatum":[632,1]
,"publishes":[632,1]
,"molodensky\u2019s":[632,1]
,"principle":[632,1]
,"ilvmolodenskyconverter":[632,1]
,":setdatum":[632,1]
,":getdatum":[632,1]
,":toviews":[632,1]
,"usa":[633,1,634,1,645,1]
,"lambert":[633,1]
,"cities":[633,3,634,1,635,3,636,3]
,"pointed":[633,1]
,"<installdir>\u002Fsamples\u002Fmaps\u002Fuserman\u002Fsrc\u002Fuseviews.cpp":[633,1]
,"useviews":[634,1]
,"simplemapviewer":[635,10,636,2,637,1]
,"ilvgadgetcontainer*_container":[635,1]
,"ilvscmanagerrectangle*_managerrectangle":[635,1]
,"ilvmapinfo*_mapinfo":[635,1]
,"ilvtextfield*_statusbar":[635,1]
,"_container":[635,2]
,"_managerrectangle":[635,1]
,"_mapinfo":[635,4,636,2]
,"informations":[635,1]
,"{ilvdisplay*display":[635,1]
,"isbad":[635,1]
,"simplemapviewer*viewer":[635,1]
,".\u002Fdata\u002Fusa.ilv":[635,1]
,"ilvmainloop":[635,1]
,":simplemapviewer":[635,1]
,":_managerrectangle":[635,1]
,"_statusbar":[635,1]
,"{creategui":[635,1]
,"loadmap":[635,1]
,"creategui":[635,1]
,":creategui":[635,1]
,"{_container":[635,1]
,"(50":[635,1]
,"450)":[635,1]
,"_container->":[635,1]
,"setdestroycallback":[635,1]
,"(_exit":[635,1]
,"this)":[635,2,637,1]
,"createmanagerrectangle":[635,2]
,"(_container)":[635,2]
,"createstatusbar":[635,2]
,":createmanagerrectangle":[635,1]
,"(ilvgadgetcontainer*container)":[635,2]
,"{_managerrectangle":[635,1]
,"ilvscmanagerrectangle":[635,1]
,"(container->":[635,2]
,"435))":[635,1]
,"(_managerrectangle)":[635,1]
,"\u002F\u002Fattachments":[635,2]
,"(_managerrectangle":[635,2]
,"ilvhorizontal)":[635,2]
,"ilvvertical)":[635,1]
,"=_managerrectangle->":[635,4,636,1]
,"getmanager":[635,2,636,1,637,1]
,"getview":[635,2]
,"setkeepingaspectratio":[635,1]
,"(view":[635,3,637,1]
,"setdoublebuffering":[635,1]
,":createstatusbar":[635,1]
,"{_statusbar":[635,1]
,"435":[635,1]
,"(_statusbar":[635,3]
,"_statusbar->":[635,1,637,2]
,"seteditable":[635,1]
,"ilvvertical":[635,1]
,":loadmap":[635,1]
,"{ilvmanager*manager":[635,1]
,"(_mapinfo)":[635,1,637,1]
,"{view->":[635,1,637,1]
,"setinputcallback":[635,1,637,1]
,"(_showmouseposition":[635,1,637,1]
,"addcities":[635,1,636,1]
,"fittransformertocontents":[635,1]
,":addcities":[636,1]
,"{addcity":[636,1]
,"washington":[636,1]
,"39d11":[636,1]
,"76d51w":[636,1]
,"addcity":[636,6]
,"york":[636,1]
,"40d59":[636,1]
,"73d39":[636,1]
,"miami":[636,1]
,"25d58":[636,1]
,"80d02":[636,1]
,"san":[636,1]
,"francisco":[636,1]
,"37d44":[636,1]
,"122d20":[636,1]
,"seattle":[636,1]
,"47d51":[636,1]
,"122d01":[636,1]
,"denvers":[636,1]
,"39d50":[636,1]
,"104d53":[636,1]
,":addcity":[636,1]
,"char*cityname":[636,1]
,"char*latstring":[636,1]
,"char*longstring)":[636,1]
,":dmstoradian":[636,2,644,1]
,"(latstring":[636,1]
,"(longstring":[636,1]
,"city":[636,2,637,1]
,"=_mapinfo->":[636,1,637,1]
,"{ilvmarker*marker":[636,1]
,"(_container->":[636,2]
,"ilvmarkerfilleddiamond)":[636,1]
,"(marker":[636,1]
,"(cityname)":[636,1]
,"showmouseposition":[637,2]
,"_showmouseposition":[637,1]
,"ilvevent&event":[637,1]
,"{simplemapviewer*mapviewer":[637,1]
,"=(simplemapviewer*)":[637,1]
,"mapviewer->":[637,1]
,"event)":[637,1]
,":showmouseposition":[637,1]
,"ilvevent&event)":[637,1]
,"buf1":[637,1]
,"buf2":[637,1]
,"[50]":[637,1]
,"(event.x":[637,1]
,"event.y":[637,1]
,"=manager->":[637,1]
,"lastcontains":[637,1]
,"&&g->":[637,1]
,"=g->":[637,1]
,"(_mapinfo->":[637,1]
,"(event":[637,1]
,"(label":[637,2]
,"(buf1":[637,1]
,"(buf2":[637,1]
,"invert":[637,1]
,"subdivided":[638,1]
,"focusses":[638,1]
,"<installdir>\u002Fsamples\u002Fmaps\u002Fuserman\u002Fsrc":[638,1]
,"proj_step1.cpp":[638,1,639,1,640,1]
,"proj_step2.cpp":[638,1,643,2]
,"proj_step3.cpp":[638,1,644,1]
,"<installdir>\u002Fsamples\u002Fmaps\u002Fuserman\u002Finclude":[638,1]
,"focuses":[639,1]
,"proj_step1.h":[639,2,640,1]
,"<ilviews\u002Fmaps\u002Fprojection\u002Fproject.h>":[639,2]
,"sforward":[639,2,641,5,642,1,643,1]
,"say":[639,1]
,":sforward":[639,1,641,1,643,1]
,"declaring":[639,1,643,1]
,"sinverse":[639,2,642,3,643,1]
,"eforward":[639,2,641,5,643,1]
,"einverse":[639,2,642,2,643,1]
,"ilvmapsdeclareprojectionio":[639,2,640,1,643,2]
,"ilvprojectionclassinfo":[639,2,640,1,644,1]
,"members":[639,1,640,1]
,"ilvmapsinitprojectionio":[639,2]
,"(ilvcoordinate":[639,4,643,4]
,"(mercator)":[639,2,643,1]
,"\u002F\u002Fenable":[639,1]
,"ilvmapsdefinebasicprojectionio":[640,2,643,1]
,"(mercator":[640,1,643,1]
,"ilvmapsemptystatement":[640,2]
,"ilvprojectiondictionary":[640,1]
,"equations":[640,1]
,"geometric":[640,1]
,"ilvconformalprojectiongeometricproperty":[640,1]
,":mercator":[640,2,643,2]
,":ilvprojection":[640,2,643,2]
,"(iltrue":[640,1]
,"ilvconformalprojectiongeometricproperty)":[640,1]
,"mercator&source)":[640,1,643,1]
,"(source)":[640,1,643,1]
,":forward":[641,6]
,"prepares":[641,1,642,1]
,"appropriately":[641,1]
,"redirects":[641,1]
,"scaling":[641,1]
,"(expressed":[641,1]
,"radians)":[641,1]
,"pi\u002F2":[641,1]
,"equation":[641,1,642,2]
,"(ilvcoordinate&ll)":[641,2,643,1]
,"{\u002F\u002Freturn":[641,2]
,"(fabs":[641,4,642,1,643,2]
,"(ll.y":[641,4,643,1]
,"-ilvmaps":[641,2,643,1]
,":pi":[641,4,642,3,643,2]
,"\u002F2.)":[641,2,643,1]
,"<=1e-10)":[641,2,643,1]
,"toleranceconditionerror":[641,2,642,1]
,"ll.sety":[641,3,643,1]
,"(log":[641,1]
,"(tan":[641,2,643,1]
,"*ll.y":[641,1,643,1]
,"())))":[641,1,642,1,643,1]
,"getellipsoid":[641,1]
,"gete":[641,1]
,":eforward":[641,1]
,"ilvdoublee":[641,1]
,"=sqrt":[641,1,642,1]
,"(getellipsoid":[641,1,642,1]
,"getes":[641,1,642,1]
,"sinphi":[641,1]
,"*sin":[641,1,642,1]
,"(.5":[641,1]
,"*(ilvmaps":[641,1]
,"-ll.y":[641,1]
,"\u002Fpow":[641,1]
,"((1":[641,1,642,1]
,"-sinphi)":[641,1]
,"\u002F(1":[641,1]
,"sinphi)":[641,1]
,"*e))":[641,1]
,"(-log":[641,1]
,"inversion":[642,1]
,"suppresses":[642,1]
,"mercatorprojection":[642,1]
,":sinverse":[642,1]
,"(ilvcoordinate&xy)":[642,2]
,"{xy.sety":[642,1]
,"()\u002F2":[642,2]
,"-2.*atan":[642,1]
,"(exp":[642,1]
,"(-xy.y":[642,2]
,"analytical":[642,1]
,":einverse":[642,1]
,"{ilvdouble":[642,2]
,"=exp":[642,1]
,"eccnth":[642,1]
,"=0.5":[642,1]
,"*atan":[642,2]
,"(ts)":[642,1]
,"ilvdoubledphi":[642,1]
,"con":[642,1]
,"(phi)":[642,2]
,"dphi":[642,1]
,"(ts":[642,1]
,"*pow":[642,1]
,"-con)\u002F(1":[642,1]
,"con)":[642,1]
,"eccnth))":[642,1]
,"-phi":[642,1]
,"+=dphi":[642,1]
,"(dphi)":[642,1]
,"1.e-10":[642,1]
,"&&--i":[642,1]
,"xy.sety":[642,1]
,"proj_step2.h":[643,2]
,"maintained":[643,1]
,"introduce":[643,1]
,":toleranceconditionerror":[643,1]
,"polarzoneerror":[643,3]
,"initclass":[643,3]
,"setlatitudeoftruescale":[643,1,644,1]
,"latitudeoftruescale)":[643,1]
,"{_latitudeoftruescale":[643,1]
,"=latitudeoftruescale":[643,1]
,"getlatitudeoftruescale":[643,1,644,1]
,"_latitudeoftruescale":[643,4]
,"_polarzoneerror":[643,2]
,"(ilvoutputfile&)":[643,1]
,"ilvmapsdefineprojectionio":[643,3]
,":initclass":[643,3,644,1]
,"friend":[643,1]
,"{_polarzoneerror":[643,1,644,1]
,":createerror":[643,1,644,1]
,"(\u0022&mercatorpolarzoneerror":[643,1,644,1]
,"\u002F\u002Freturning":[643,1]
,"=cos":[643,1]
,"(_latitudeoftruescale)":[643,1]
,"*log":[643,1]
,"ll.setx":[643,1]
,"*ll.x":[643,1]
,"(ilvoutputfile":[643,1]
,"&file)":[643,1]
,"{ilvprojection":[643,1]
,"(file)":[643,2]
,"file.getstream":[643,1]
,"<<_latitudeoftruescale":[643,1]
,"(source._latitudeoftruescale)":[643,1]
,"proj_step3.h":[644,1]
,"getter":[644,2]
,"setter":[644,2]
,"latitudeoftruescale":[644,3]
,"_getter":[644,2]
,"ilvprojection*p":[644,1]
,"ilvvalue&v)":[644,2]
,"{mercator*mercator":[644,2]
,"=(mercator*)":[644,2]
,"mercator->":[644,2]
,"_setter":[644,1]
,"(ilvprojection*p":[644,1]
,"classinfo":[644,1]
,"addaccessor":[644,1]
,"(ilvgetsymbol":[644,1]
,"ilvvaluestringtype":[644,1]
,"_setter)":[644,1]
,"worldwide":[645,5]
,"http:\u002F\u002Fgeoengine.nima.mil\u002Fmuse-cgi-bin\u002Frast_roam.cgi":[645,1]
,"countries":[645,1]
,"http:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002Fglobal_administrative_unit_layers_(gaul)":[645,1]
,"http:\u002F\u002Fwww.bluemarblegeo.com\u002Fproducts\u002Fworldmapdata.php":[645,1]
,"op=down":[645,1]
,"http:\u002F\u002Fwww.nationalatlas.gov\u002Fmld\u002Ftimeznp.html":[645,1]
,"http:\u002F\u002Fwww.nationalatlas.gov\u002Fmld\u002Fstatesp.html":[645,1]
,"counties":[645,1]
,"http:\u002F\u002Fwww.nationalatlas.gov\u002Fmld\u002Fcountyp.html":[645,1]
,"http:\u002F\u002Fwww.census.gov\u002Fgeo\u002Fwww\u002Fcob\u002Fst2000.html":[645,1]
,"zip":[645,1]
,"http:\u002F\u002Fwww.census.gov\u002Fgeo\u002Fwww\u002Fcob\u002Fz32000.html":[645,1]
,"http:\u002F\u002Fwww.census.gov\u002Fgeo\u002Fwww\u002Fcob\u002Fz52000.html":[645,1]
,"jpg":[645,2]
,"png":[645,2]
,"http:\u002F\u002Fwww.unearthedoutdoors.net\u002Fglobal_data\u002Ftrue_marble\u002Fdownload":[645,1]
,"satellite":[645,1]
,"nasa":[645,1]
,"http:\u002F\u002Fearthobservatory.nasa.gov\u002Ffeatures\u002Fbluemarble\u002Fwith":[645,1]
,"download":[645,1]
,"mirror":[645,1]
,"http:\u002F\u002Fmirrors.arsc.edu\u002Fnasa\u002Fworld_500m\u002Fhttp:\u002F\u002Fneo.sci.gsfc.nasa.gov\u002Fsearch.html":[645,1]
,"http:\u002F\u002Fwww.nauticalcharts.noaa.gov":[645,1]
,"\u002Fmcd\u002Fenc\u002Fdownload_agreement.htm":[645,1]
,"vmap0":[645,1]
,"vmap":[645,1]
,"http:\u002F\u002Fgeoengine.nga.mil\u002Fgeospatial\u002Fsw_tools\u002Fnimamuse\u002Fwebinter\u002Fvmap0_legend.html":[645,1]
,"http:\u002F\u002Fwww.nationalatlas.gov\u002Fatlasftp.html":[645,1]
,"http:\u002F\u002Fwww.census.gov\u002Fgeo\u002Fwww\u002Fcob\u002Fbdy_files.html":[645,1]
,"http:\u002F\u002Fdata.geocomm.com\u002Fcatalog\u002Fus\u002Fgroup21.html":[645,1]
}
}
;Search.control.advance(info);
