var pairs =
{
"strings":{"string":1,"identical":1,"rogue":1,"commandments":1,"following":1,"containing":1}
,"string":{"literal":1,"string":1,"properties":1,"methods":1,"functions":1,"operators":1,"literals":1,"converted":1,"represent":1,"function":1,"arguments":1,"example":1,"method":1,"representation":1,"operands":1,"uses":1,".length":1,"read-only":1,"indexed":1,"index":1,".length-1":1,".substring":1,"starting":1,"returned":1,".charat":1,"containing":1,".charcodeat":1,".indexof":1,"first":1,"searched":1,"lastindexof":1,"last":1,".tolowercase":1,".touppercase":1,".split":1,"separated":1,"contain":1,".tostring":1,"itself":1,"integer":1,"starts":1,"floating-point":1,"parsed":1,"non-string":1,"examples":1,"==\u0022":1,"true":1,"false":1,"!=\u0022":1,"number":1}
,"literal":{"syntax":1,"zero":1,"escape":1,"stands":1,"string":1,"conversion":1}
,"syntax":{"automatic":1,"string":1,"examples":1,"value":1,"effect":1}
,"automatic":{"conversion":1}
,"conversion":{"string":1,"yields":1}
,"properties":{"string":1,"strings":1,"rogue":1,"syntax":1}
,"methods":{"string":1,"characters":1,"rogue":1,"syntax":1}
,"functions":{"string":1,"following":1,"operate":1,"syntax":1}
,"operators":{"string":1,"following":1,"used":1,"syntax":1,"==and":1}
,"zero":{"characters":1}
,"characters":{"enclosed":1,"string":1,"ignored":1,"returns":1,"operator":1}
,"enclosed":{"double":1}
,"double":{"single":1,"quote":1}
,"single":{"quotes":1,"quote":1,"character":1}
,"quotes":{"note":1,"string":1}
,"note":{"c\u002Fc":1}
,"c\u002Fc":{"programmers":1}
,"programmers":{"except":1}
,"except":{"single":1}
,"literals":{"syntax":1,"name":1,"using":1}
,"examples":{"string":1,"first":1,"abc":1,"0123456":1,"abcdef":1,"abcdabcd":1,"hello":1,"string.fromcharcode":1,"parseint":1,"parsefloat":1,"age":1,"==\u0022":1,">=123":1,"false":1}
,"name":{"hal":1,"last":1,"age":1,"[1]":1,"[2]":1}
,"hal":{"\u0027my":1,"3.14":1}
,"\u0027my":{"name":1}
,"3.14":{"hello":1}
,"hello":{"world\u005Cn":1,"world":1,".split":1,"string":1}
,"world\u005Cn":{"examples":1}
,"first":{"second":1,"line\u005Cnsecond":1,"line":1,"argument":1,"character":1,"occurrence":1,"name":1,"unrecognized":1,"converted":1}
,"second":{"strings":1,"line":1}
,"identical":{"backslash":1,"false":1,"length":1}
,"backslash":{"character":1}
,"character":{"(\u005C)":1,"cannot":1,"whose":1,"string":1,"specified":1,"given":1,"digit":1,"number":1}
,"(\u005C)":{"used":1,"double":1}
,"used":{"introduce":1,"manipulate":1,"add":1,"compare":1}
,"introduce":{"escape":1}
,"escape":{"sequence":1,"sequences":1}
,"sequence":{"stands":1,"two":1,"examples":1,"characters":1}
,"stands":{"character":1,"newline":1,"read":1}
,"cannot":{"directly":1}
,"directly":{"expressed":1}
,"expressed":{"string":1}
,"sequences":{"allowed":1,"escape":1,"rogue":1}
,"allowed":{"strings":1}
,"rogue":{"wave":1}
,"wave":{"script":1}
,"script":{"escape":1,"string":1}
,"newline":{"tab":1}
,"tab":{"\u005C\u005Cbackslash":1}
,"\u005C\u005Cbackslash":{"character":1}
,"quote":{"(\u0022)":1,"(\u0027)":1}
,"(\u0022)":{"single":1}
,"(\u0027)":{"backspace":1}
,"backspace":{"form":1}
,"form":{"feed":1}
,"feed":{"carriage":1}
,"carriage":{"return":1}
,"return":{"character":1,"nan":1,"value":1}
,"whose":{"ascii":1}
,"ascii":{"code":1}
,"code":{"sequence":1,"ooo":1,"character":1,"examples":1}
,"two":{"hexadecimal":1,"three":1,"strings":1,"numbers":1}
,"hexadecimal":{"digits":1}
,"digits":{"\u005Cooo":1,"examples":1}
,"\u005Cooo":{"character":1}
,"ooo":{"ooo":1,"sequence":1}
,"three":{"octal":1}
,"octal":{"digits":1}
,"using":{"escape":1}
,"read":{"black":1}
,"black":{"bean\u005C\u0022":1,"bean":1}
,"bean\u005C\u0022":{"read":1}
,"bean":{"\u0027\u005C\u0027hello\u005C":1}
,"\u0027\u005C\u0027hello\u005C":{"\u0027hello":1}
,"\u0027hello":{"c:\u005C\u005Ctemp":1}
,"c:\u005C\u005Ctemp":{"c:\u005Ctemp":1}
,"c:\u005Ctemp":{"first":1}
,"line\u005Cnsecond":{"line\u005Cnthird":1}
,"line\u005Cnthird":{"line":1}
,"line":{"first":1,"second":1,"third":1,"\u0022\u005Cxa9":1}
,"third":{"line":1}
,"\u0022\u005Cxa9":{"1995-1997":1}
,"1995-1997":{"1995-1997":1,"string":1}
,"converted":{"number":1,"string":1,"lowercase":1,"uppercase":1}
,"number":{"attempt":1,"literal":1,"first":1,"treated":1,"characters":1,"return":1,"nan":1,"recognized":1,"string":1,"two":1}
,"attempt":{"made":1}
,"made":{"parse":1}
,"parse":{"number":1}
,"represent":{"valid":1}
,"valid":{"number":1,"integer":1}
,"yields":{"nan":1}
,"nan":{"automatic":1,"examples":1,"string":1,"returned":1,"parsefloat":1}
,"function":{"method":1,"returns":1}
,"method":{"expects":1,"indexof":1,"given":1,"string":1,"returns":1,"join":1}
,"expects":{"string":1}
,"arguments":{"passed":1}
,"passed":{"non-string":1,"number":1}
,"non-string":{"value":1,"operands":1}
,"value":{"value":1,"automatically":1,"built-in":1,"string":1,"parsed":1,"non-string":1,"first":1}
,"automatically":{"converted":1,"convert":1}
,"example":{"string":1}
,"indexof":{"passed":1}
,"argument":{"number":1}
,"treated":{"string":1}
,"representation":{"commandments":1}
,"commandments":{".indexof":1,"commandments":1,"conversion":1}
,".indexof":{"(10)":1,"(substring":1,"abcdabcd":1,"10)":1,"foo":1,"string":1}
,"(10)":{"similarly":1}
,"similarly":{"operators":1}
,"operands":{"automatically":1,"strings":1}
,"convert":{"non-string":1}
,"uses":{"tostring":1}
,"tostring":{"method":1}
,"given":{"value":1,"ascii":1,"base":1}
,"built-in":{"values":1}
,"values":{"tostring":1}
,"following":{"properties":1,"methods":1,"functions":1,"operators":1}
,".length":{"number":1,".length":1,"string":1}
,"read-only":{"property":1}
,"property":{"examples":1}
,"abc":{".length":1,"xyz":1,"true":1,"false":1,"abc":1}
,"indexed":{"left":1}
,"left":{"right":1}
,"right":{"index":1}
,"index":{"first":1,"last":1,"start":1,"end":1,"string":1,"range":1,"returns":1,"index":1,"omitted":1}
,"last":{"character":1,"occurrence":1,"name":1}
,".length-1":{"strings":1}
,"effect":{"string":1,"string.fromcharcode":1,"string1":1}
,".substring":{"(start":1,"012":1,"0123456":1,"(2)":1}
,"(start":{"end":1}
,"end":{"returns":1,"end":1,"omitted":1,"method":1}
,"returns":{"substring":1,"one-character":1,"ascii":1,"index":1,"string":1,"array":1,"single":1,"value":1,"integer":1,"nan":1}
,"substring":{"string":1,"found":1}
,"starting":{"index":1}
,"start":{"ending":1}
,"ending":{"index":1}
,"omitted":{"tail":1,"string":1,"taken":1}
,"tail":{"string":1}
,"returned":{"examples":1,"leading":1}
,"0123456":{".substring":1}
,"012":{"0123456":1}
,"(2)":{"23456":1}
,"23456":{"string":1}
,".charat":{"(index":1,"(0)":1,"(3)":1,"(100)":1}
,"(index":{"returns":1}
,"one-character":{"string":1}
,"containing":{"character":1,"substrings":1,"whole":1,"concatenation":1}
,"specified":{"index":1,"base":1}
,"range":{"empty":1,"return":1}
,"empty":{"string":1}
,"abcdef":{".charat":1,".charcodeat":1}
,"(0)":{"abcdef":1}
,"(3)":{"abcdef":1,"100":1}
,"(100)":{"string":1,"nan":1}
,".charcodeat":{"(index":1,"(0)":1,"(3)":1,"(100)":1}
,"100":{"abcdef":1}
,"(substring":{"index":1}
,"occurrence":{"substring":1}
,"searched":{"starting":1,"beginning":1,"backwards":1,"end":1}
,"beginning":{"method":1}
,"found":{"examples":1}
,"abcdabcd":{".indexof":1,".lastindexof":1}
,"10)":{"abcdabcd":1}
,"foo":{"abcdabcd":1}
,"lastindexof":{"(substring":1}
,"backwards":{"starting":1}
,".lastindexof":{"abcdabcd":1,"foo":1,"string":1}
,".tolowercase":{"returns":1,"hello":1}
,"lowercase":{"examples":1}
,"world":{".tolowercase":1,"string":1,".touppercase":1,"hello":1,"operator":1}
,".touppercase":{"returns":1,"hello":1}
,"uppercase":{"examples":1}
,".split":{"(separator":1,"array":1}
,"(separator":{"returns":1}
,"array":{"strings":1,"method":1,"a.length":1,"element":1}
,"substrings":{"string":1}
,"separated":{"separator":1}
,"separator":{"array":1}
,"join":{"examples":1}
,"age":{".split":1,"string":1,"age":1,"string1":1}
,"a.length":{"[0]":1}
,"[0]":{"first":1,"hello":1}
,"[1]":{"last":1}
,"[2]":{"age":1}
,"contain":{"separator":1,"sequence":1}
,"element":{"containing":1}
,"whole":{"string":1}
,".tostring":{"returns":1}
,"itself":{"string":1}
,"operate":{"strings":1}
,"string.fromcharcode":{"(code":1,"(65)":1,"(0xa9)":1}
,"(code":{"returns":1}
,"(65)":{"string.fromcharcode":1}
,"(0xa9)":{"parseint":1}
,"parseint":{"(string":1,"encounters":1,"123":1,"(\u0022-123":1,"123.45":1,"1001010010110":1,"16)":1,"0xa9":1,"010":1,"lot":1}
,"(string":{"base":1,"parses":1}
,"base":{"parses":1,"returns":1,"ignores":1,"omitted":1,"case":1,"examples":1}
,"parses":{"string":1}
,"integer":{"written":1,"nan":1,"value":1}
,"written":{"given":1}
,"leading":{"white":1}
,"white":{"space":1}
,"space":{"characters":1}
,"ignored":{"parseint":1,"string":1}
,"encounters":{"character":1}
,"digit":{"specified":1}
,"ignores":{"succeeding":1}
,"succeeding":{"characters":1}
,"parsed":{"point":1,"base":1,"first":1}
,"point":{"base":1}
,"taken":{"unless":1}
,"unless":{"string":1}
,"starts":{"case":1}
,"case":{"parsed":1}
,"123":{"123":1,"parseint":1,"poodles":1,"false":1}
,"(\u0022-123":{"-123":1}
,"-123":{"parseint":1}
,"123.45":{"123":1}
,"1001010010110":{"4758":1}
,"4758":{"parseint":1}
,"16)":{"169":1}
,"169":{"parseint":1}
,"0xa9":{"169":1}
,"010":{"parseint":1}
,"poodles":{"123":1,"nan":1,"-3.14e-15":1}
,"lot":{"poodles":1}
,"parsefloat":{"(string":1,"(\u0022-3.14e-15":1,"fraction":1}
,"floating-point":{"number":1}
,"unrecognized":{"character":1}
,"recognized":{"function":1}
,"(\u0022-3.14e-15":{"-3.14e-15":1,"poodles":1}
,"-3.14e-15":{"parsefloat":1}
,"fraction":{"poodle":1}
,"poodle":{"nan":1}
,"manipulate":{"strings":1}
,"string1":{"string2":1,"==string2":1,"!=string2":1,"<string2":1,"<=string2":1,">=string2":1,"strictly":1}
,"string2":{"returns":1,"examples":1,"identical":1,"string1":1,"lexicographically":1}
,"concatenation":{"string1":1}
,"operator":{"used":1,"==returns":1,"!=is":1,"<returns":1,"<=returns":1}
,"add":{"string":1}
,"==string2":{"string1":1}
,"!=string2":{"operator":1}
,"==returns":{"boolean":1}
,"boolean":{"true":1}
,"true":{"string1":1,"string":1,"operators":1,"abc":1,"xyz":1,"123":1}
,"false":{"otherwise":1,"string":1,"==\u0022":1,"abc":1,"xyz":1,"operators":1,"true":1}
,"otherwise":{"two":1,"operator":1,"examples":1}
,"length":{"contain":1}
,"!=is":{"converse":1}
,"converse":{"examples":1}
,"==\u0022":{"string":1,"false":1,"true":1}
,"!=\u0022":{"string":1}
,"==and":{"!=are":1}
,"!=are":{"used":1}
,"compare":{"string":1}
,"numbers":{"compared":1}
,"compared":{"numerically":1}
,"numerically":{"examples":1}
,"<string2":{"string1":1}
,"<=string2":{"string1":1}
,">=string2":{"operator":1}
,"<returns":{"true":1}
,"strictly":{"precedes":1}
,"precedes":{"string2":1}
,"lexicographically":{"false":1,"equal":1}
,"<=returns":{"true":1}
,"equal":{"false":1}
,"xyz":{"true":1,"abc":1,"false":1}
,">=123":{"true":1}
}
;Search.control.loadWordPairs(pairs);
