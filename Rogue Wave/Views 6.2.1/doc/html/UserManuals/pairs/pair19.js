var pairs =
{
"implementing":{"object":1}
,"object":{"functions":1,"originally":1,"draw":1,"merely":1}
,"functions":{"example":1,"section":1,"implemented":1,"method":1,"bring":1,"ilvdisplay":1}
,"example":{"created":1}
,"created":{"header":1,"creating":1}
,"header":{"file":1}
,"file":{"declares":1,"shadellp.cpp":1}
,"declares":{"new":1}
,"new":{"class":1,"function":1}
,"class":{"necessary":1,"void":1}
,"necessary":{"overloaded":1}
,"overloaded":{"member":1}
,"member":{"functions":1,"function":1,"functions)":1}
,"section":{"explains":1}
,"explains":{"code":1}
,"code":{"functions":1}
,"implemented":{"file":1}
,"shadellp.cpp":{"computeinvertedpalette":1}
,"computeinvertedpalette":{"member":1,"computes":1}
,"function":{"void":1,"computeinvertedpalette":1,"getpalette":1,"called":1,"draw":1,"ilvpalette":1,"member":1,"boundingbox":1,"contains":1,"ispointinellipse":1,"applytransform":1,"applies":1}
,"void":{"shadowellipse":1}
,"shadowellipse":{":computeinvertedpalette":1,"shadowellipse":1,"{_invertedpalette->":1,":draw":1,":boundingbox":1,":contains":1,":applytransform":1}
,":computeinvertedpalette":{"{ilvpalette*newpalette":1}
,"{ilvpalette*newpalette":{"=getdisplay":1}
,"=getdisplay":{"()->":1}
,"()->":{"getinvertedpalette":1}
,"getinvertedpalette":{"(getpalette":1}
,"(getpalette":{"())":1}
,"())":{"newpalette->":1,"\u002F\u002Fcompute":1,"*(p.x":1,"=(p.y":1,"*(p.y":1,"rrx":1}
,"newpalette->":{"lock":1}
,"lock":{"(_invertedpalette)":1,"new":1}
,"(_invertedpalette)":{"_invertedpalette->":1}
,"_invertedpalette->":{"unlock":1,"setclip":1}
,"unlock":{"_invertedpalette":1,"previous":1,"destructor":1}
,"_invertedpalette":{"=newpalette":1}
,"=newpalette":{"member":1}
,"computes":{"inverted":1}
,"inverted":{"palette":1,"ellipse":1}
,"palette":{"means":1,"unlock":1,"modified":1,"may":1,"used":1,"original":1,"management":1,"display":1,"____________________________ilvpalette*palette":1,"fill":1}
,"means":{"call":1}
,"call":{"member":1,"ilvpalette":1,"primitive":1}
,"getpalette":{"create":1}
,"create":{"inverted":1}
,"previous":{"(if":1}
,"(if":{"one)":1}
,"one)":{"lock":1}
,"called":{"whenever":1}
,"whenever":{"original":1}
,"original":{"palette":1,"state":1}
,"modified":{"(by":1}
,"(by":{"overloading":1}
,"overloading":{"appropriate":1}
,"appropriate":{"member":1}
,"functions)":{"object":1}
,"originally":{"created":1}
,"creating":{"second":1}
,"second":{"palette":1}
,"may":{"seem":1}
,"seem":{"strange":1}
,"strange":{"member":1}
,"draw":{"second":1,"member":1,"fills":1,"demonstrates":1}
,"used":{"calling":1,"object":1,"complex":1}
,"calling":{"two":1}
,"two":{"ilvdisplay":1,"ellipses":1}
,"ilvdisplay":{"drawing":1,"class":1}
,"drawing":{"member":1,"object":1,"work":1,"place":1,"avoid":1}
,"method":{"call":1}
,"ilvpalette":{":invert":1}
,":invert":{"call":1,"developing":1}
,"bring":{"palette":1}
,"state":{"call":1}
,"developing":{"rogue":1}
,"rogue":{"wave":1}
,"wave":{"views":1}
,"views":{"shows":1,"hesitate":1}
,"shows":{"efficient":1}
,"efficient":{"manipulating":1,"tasks":1}
,"manipulating":{"objects":1}
,"objects":{"palette":1}
,"management":{"efficient":1,"needed":1}
,"tasks":{"performed":1}
,"performed":{"rogue":1}
,"hesitate":{"palette":1}
,"needed":{"destructor":1}
,"destructor":{"shadowellipse":1,"need":1}
,"{_invertedpalette->":{"unlock":1}
,"need":{"release":1,"transformer":1}
,"release":{"inverted":1}
,"display":{"deleted":1,"palette":1}
,"deleted":{"used":1}
,"fills":{"two":1}
,"ellipses":{"draws":1,"show":1,"coordinates":1}
,"draws":{"topmost":1}
,"topmost":{"ellipse":1}
,"ellipse":{"border":1,"___________________________________________dst->":1,"_________________________________________dst->":1,"__________________________________________________dst->":1,"____________palette->":1,"defined":1}
,"border":{"global":1,"__________________________________________dst->":1}
,"global":{"bounding":1}
,"bounding":{"rectangle":1,"box":1}
,"rectangle":{"(_rect":1,"______________________________ilvrect":1,"_______________________________rect.grow":1,"void":1,"parameter":1,"graphic":1}
,"(_rect":{"actually":1}
,"actually":{"covers":1}
,"covers":{"ellipses":1}
,"show":{"member":1}
,"demonstrates":{"drawing":1}
,"merely":{"call":1}
,"primitive":{"member":1}
,":draw":{"(ilvport*dst":1}
,"(ilvport*dst":{"const":1}
,"const":{"ilvtransformer*t":1,"ilvregion*clip)":1,"{\u002F\u002Ftransform":1,"ilvtransformer*t)":1,"{rect":1,"ilvrect&bbox)":1,"ilvpoint&tp":1,"{ilvrect":1}
,"ilvtransformer*t":{"const":1}
,"ilvregion*clip)":{"const":1}
,"{\u002F\u002Ftransform":{"bounding":1}
,"______________________________ilvrect":{"rect":1}
,"rect":{"=_rect":1,"360.)":1}
,"=_rect":{"(t)":1}
,"(t)":{"t->":1}
,"t->":{"apply":1}
,"apply":{"(rect)":1,"(_rect)":1}
,"(rect)":{"\u002F\u002Fset":1,"note":1,"((rect.w":1}
,"\u002F\u002Fset":{"gradient":1,"clipping":1}
,"gradient":{"bounding":1}
,"box":{"_________________________________ilvgradientgraphicbboxmanager":1,"contain":1}
,"_________________________________ilvgradientgraphicbboxmanager":{"(palette":1,"(_invertedpalette":1}
,"(palette":{"il_constcast":1,"shadowrect":1,"rect":1}
,"il_constcast":{"(shadowellipse*":1}
,"(shadowellipse*":{"this)":1}
,"this)":{"\u002F\u002Fstore":1,"\u002F\u002Ffill":1}
,"\u002F\u002Fstore":{"display":1}
,"____________________________ilvpalette*palette":{"=getpalette":1}
,"=getpalette":{"\u002F\u002Ffind":1}
,"\u002F\u002Ffind":{"correct":1}
,"correct":{"value":1}
,"value":{"thickness":1}
,"thickness":{"____________________________ilushort":1,"=_thickness":1,"=ilmin":1,"whatever":1}
,"____________________________ilushort":{"thickness":1}
,"=_thickness":{"((rect.w":1}
,"((rect.w":{"<=thickness)":1,"<=_thickness)":1}
,"<=thickness)":{"(rect.h":1}
,"(rect.h":{"<=thickness))":1,"<=_thickness))":1}
,"<=thickness))":{"thickness":1}
,"=ilmin":{"(rect.w":1}
,"(rect.w":{"rect.h":1}
,"rect.h":{"())":1}
,"\u002F\u002Fcompute":{"actual":1,"inverted":1}
,"actual":{"shadow":1}
,"shadow":{"rectangle":1,"ellipse":1}
,"_______________________________rect.grow":{"(-thickness":1}
,"(-thickness":{"-thickness)":1}
,"-thickness)":{"ilvrect":1}
,"ilvrect":{"shadowrect":1}
,"shadowrect":{"=rect":1,"360.)":1}
,"=rect":{"shadowrect.translate":1}
,"shadowrect.translate":{"(thickness":1,"(_thickness":1}
,"(thickness":{"thickness)":1}
,"thickness)":{"defined":1}
,"defined":{"(use_2_palettes)":1,"rectangle":1}
,"(use_2_palettes)":{"\u002F\u002Fset":1}
,"clipping":{"region":1}
,"region":{"palettes":1,"affected":1,"return":1}
,"palettes":{"_____________________if":1,"empty":1}
,"_____________________if":{"(clip)":1}
,"(clip)":{"{palette->":1,"_invertedpalette->":1,"\u002F\u002Fset":1,"palette->":1,"\u002F\u002Ffill":1}
,"{palette->":{"setclip":1}
,"setclip":{"(clip)":1,"_invertedpalette->":1,"else":1,"endif":1}
,"(_invertedpalette":{"il_constcast":1,"rect":1}
,"\u002F\u002Ffill":{"shadow":1,"inverted":1}
,"___________________________________________dst->":{"fillarc":1}
,"fillarc":{"(palette":1,"(_invertedpalette":1}
,"360.)":{"\u002F\u002Ffill":1,"\u002F\u002Fdraw":1,"(clip)":1,"\u002F\u002Fcompute":1,"palette->":1,"\u002F\u002Fset":1}
,"_________________________________________dst->":{"fillarc":1}
,"\u002F\u002Fdraw":{"ellipse":1,"elliptic":1}
,"__________________________________________________dst->":{"drawarc":1}
,"drawarc":{"(palette":1}
,"else":{"\u002F*!":1,"{rect.grow":1}
,"\u002F*!":{"use_2_palettes":1}
,"use_2_palettes":{"*\u002F\u002F\u002Fset":1,"*\u002F}":1}
,"*\u002F\u002F\u002Fset":{"clipping":1}
,"palette->":{"setclip":1,"invert":1}
,"fill":{"inverted":1}
,"____________palette->":{"invert":1}
,"invert":{"dst->":1,"\u002F\u002Fdraw":1}
,"dst->":{"fillarc":1}
,"elliptic":{"border":1}
,"__________________________________________dst->":{"drawarc":1}
,"endif":{"\u002F*!":1}
,"*\u002F}":{"need":1}
,"transformer":{"perform":1,"rectangle":1}
,"perform":{"drawing":1}
,"work":{"want":1}
,"want":{"thickness":1}
,"whatever":{"transformation":1}
,"transformation":{"clip":1}
,"clip":{"parameter":1}
,"parameter":{"used":1,"inside":1,"applytransform":1}
,"complex":{"drawing":1}
,"place":{"(which":1}
,"(which":{"case":1}
,"case":{"here)":1}
,"here)":{"reset":1}
,"reset":{"clipping":1}
,"affected":{"palettes":1}
,"empty":{"region":1}
,"return":{"function":1,"ilfalse":1,"(rrx":1,"ispointinellipse":1,"(ilboolean)":1}
,"boundingbox":{"member":1,"simply":1}
,"simply":{"transforms":1}
,"transforms":{"global":1}
,":boundingbox":{"(ilvrect&rect":1}
,"(ilvrect&rect":{"const":1}
,"ilvtransformer*t)":{"const":1,"{if":1}
,"{rect":{"=_rect":1}
,"note":{"bounding":1}
,"contain":{"complete":1}
,"complete":{"drawing":1}
,"avoid":{"erasing":1}
,"erasing":{"errors":1}
,"errors":{"contains":1}
,"contains":{"member":1,"returns":1,"calls":1}
,"returns":{"iltrue":1}
,"iltrue":{"point":1,"ilfalse":1}
,"point":{"inside":1,"parameter":1}
,"inside":{"two":1,"ellipse":1}
,"coordinates":{"given":1}
,"given":{"terms":1}
,"terms":{"view\u2019s":1}
,"view\u2019s":{"coordinate":1}
,"coordinate":{"system":1}
,"system":{"static":1}
,"static":{"ilboolean":1,"function":1}
,"ilboolean":{"ispointinellipse":1,"shadowellipse":1}
,"ispointinellipse":{"(const":1,"(tp":1,"tests":1}
,"(const":{"ilvpoint&p":1,"ilvpoint&":1,"ilvtransformer*t)":1}
,"ilvpoint&p":{"const":1}
,"ilvrect&bbox)":{"{if":1}
,"{if":{"bbox.contains":1,"(t)":1}
,"bbox.contains":{"(p))":1}
,"(p))":{"return":1}
,"ilfalse":{"iluint":1,"ilboolean":1}
,"iluint":{"=bbox.w":1,"=(p.x":1}
,"=bbox.w":{"=bbox.h":1}
,"=bbox.h":{"iluint":1}
,"=(p.x":{"-bbox.centerx":1}
,"-bbox.centerx":{"())":1}
,"*(p.x":{"-bbox.centerx":1}
,"=(p.y":{"-bbox.centery":1}
,"-bbox.centery":{"())":1}
,"*(p.y":{"-bbox.centery":1}
,"rrx":{"=rx*rx":1}
,"=rx*rx":{"rry":1}
,"rry":{"=ry*ry":1,"*dx":1}
,"=ry*ry":{"return":1}
,"(rrx":{"*dy":1}
,"*dy":{"rry":1}
,"*dx":{"<=rrx":1}
,"<=rrx":{"*rry)":1}
,"*rry)":{"iltrue":1}
,":contains":{"(const":1}
,"ilvpoint&":{"const":1}
,"ilvpoint&tp":{"const":1}
,"{ilvrect":{"rect":1}
,"<=_thickness)":{"(rect.h":1}
,"<=_thickness))":{"return":1}
,"(tp":{"rect)":1,"shadowrect))":1}
,"rect)":{"else":1,"ispointinellipse":1}
,"{rect.grow":{"(-_thickness":1}
,"(-_thickness":{"-_thickness)":1}
,"-_thickness)":{"ilvrect":1}
,"(_thickness":{"_thickness)":1}
,"_thickness)":{"return":1}
,"(ilboolean)":{"(ispointinellipse":1}
,"(ispointinellipse":{"(tp":1}
,"shadowrect))":{"contains":1}
,"calls":{"static":1}
,"tests":{"whether":1}
,"whether":{"point":1}
,"applytransform":{"member":1}
,"applies":{"transformer":1}
,"graphic":{"void":1}
,":applytransform":{"(const":1}
}
;Search.control.loadWordPairs(pairs);
