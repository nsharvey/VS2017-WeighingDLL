var pairs =
{
"step":{"creating":1}
,"creating":{"group":1,"display":1}
,"group":{"mediator":1,"application":1,"mythermometer":1,"holder":1}
,"mediator":{"handle":1,"design":1}
,"handle":{"user":1}
,"user":{"feedback":1,"input":1,"slider":1,"interface":1,"changevalues":1,"\u002F\u002Fif":1}
,"feedback":{"want":1}
,"want":{"application":1,"open":1,"display":1,"temperature":1}
,"application":{"drive":1,"object":1,"notice":1,"objects":1,"ilboolean":1,"values":1,"create":1}
,"drive":{"display":1}
,"display":{"handle":1,"control":1,"argument":1,"create":1,"finally":1}
,"input":{"affects":1,"updating":1}
,"affects":{"internal":1}
,"internal":{"parameters":1}
,"parameters":{"prototype":1}
,"prototype":{"myproto":1,"instance":1,"instances":1,"attributes":1}
,"myproto":{"rogue":1}
,"rogue":{"wave":1}
,"wave":{"views":1}
,"views":{"studio":1,"timer":1}
,"studio":{"slightly":1,"check":1}
,"slightly":{"extended":1,"efficient":1}
,"extended":{"add":1}
,"add":{"slider-like":1,"following":1}
,"slider-like":{"object":1}
,"object":{"user":1,"prototype":1,"tutorial":1,"thermometer":1,"without":1,"\u002F\u002Fcreate":1,"representation":1,"display":1}
,"slider":{"change":1}
,"change":{"animation":1}
,"animation":{"rate":1}
,"rate":{"thermometer":1,"user":1}
,"thermometer":{"making":1,"want":1,"{ilfloat":1,"(ilvdisplay*)":1,"void":1,":thermometer":1,":adjust_temp":1,":timerproc":1,"mythermometer":1,"define":1,"class":1,"edited":1,"members":1,"reflected":1,"attributes":1,"application":1,"instance":1,"objects":1}
,"making":{"temperature":1}
,"temperature":{"rise":1,"iluint":1,"accsymbol)":1,"value":1,"=(ilfloat)":1,"else":1}
,"rise":{"fall":1}
,"fall":{"faster":1}
,"faster":{"slower":1}
,"slower":{"depending":1}
,"depending":{"value":1}
,"value":{"may":1,"editable":1}
,"may":{"want":1,"raise":1,"ignored":1}
,"open":{"library":1}
,"library":{"mylib.ipl":1}
,"mylib.ipl":{"rogue":1}
,"check":{"attributes":1,"state":1}
,"attributes":{"behaviors":1,"values":1}
,"behaviors":{"added":1}
,"added":{"order":1,"\u002F\u002Felse":1}
,"order":{"achieve":1}
,"achieve":{"effect":1}
,"effect":{"linking":1}
,"linking":{"application":1}
,"instance":{"done":1,"application":1,"thermometer":1,"representing":1,"mythermometer":1,"update":1}
,"done":{"using":1,"allow":1}
,"using":{"mediator":1}
,"design":{"pattern":1}
,"pattern":{"implemented":1,"able":1}
,"implemented":{"class":1,"bgos":1,"having":1}
,"class":{"ilvgroupmediator":1,"include":1,"offer":1,"create":1,"struct":1,"behave":1}
,"ilvgroupmediator":{"class":1,"{temperaturewatcher":1,"{if":1}
,"include":{"following":1,"<ilviews\u002Fprotos\u002Fgrouplin.h>":1,"<cmath>":1,"<math.h>":1}
,"following":{"file":1,"code":1}
,"file":{"include":1}
,"<ilviews\u002Fprotos\u002Fgrouplin.h>":{"defining":1}
,"defining":{"token":1,"groupmediator":1}
,"token":{"application":1}
,"tutorial":{"assume":1,"create":1}
,"assume":{"simple":1}
,"simple":{"object":1}
,"control":{"user":1}
,"interface":{"implemented":1,"object":1,"instance":1,"queryvalues":1,"thermometer":1,"refreshed":1}
,"bgos":{"defined":1}
,"defined":{"(ilvstd)":1}
,"(ilvstd)":{"include":1}
,"<cmath>":{"\u002F\u002Ffor":1}
,"\u002F\u002Ffor":{"sin":1}
,"sin":{"function":1}
,"function":{"ilvstduse":1,"stand-alone":1,"add":1,"static":1}
,"ilvstduse":{"else":1}
,"else":{"include":1,"[i]":1}
,"<math.h>":{"endif":1}
,"endif":{"struct":1}
,"struct":{"thermometer":1,"temperaturewatcher":1}
,"{ilfloat":{"temperature":1}
,"iluint":{"acceleration":1,"curval":1}
,"acceleration":{"iluint":1,"(4)":1,"ilboolean":1,"=(iluint)":1,"linking":1}
,"curval":{"ilvtimer":1,"(0)":1,"=(curval":1}
,"ilvtimer":{"timer":1}
,"timer":{"\u002F\u002Fthe":1,"thermometer":1,"(dpy":1,"(display":1,"periodically":1}
,"\u002F\u002Fthe":{"display":1}
,"argument":{"allow":1}
,"allow":{"views":1,"interactive":1}
,"(ilvdisplay*)":{"thermometer":1}
,"void":{"adjust_temp":1,"timerproc":1,"thermometer":1,"queryvalues":1,"temperaturewatcher":1}
,"adjust_temp":{"static":1,"note":1,"called":1}
,"static":{"void":1,"ilvsymbol*tempsymbol":1,"ilvsymbol*accsymbol":1}
,"timerproc":{"(ilvtimer*":1,"this)":1,"&watch)":1}
,"(ilvtimer*":{"ilany)":1,"ilany":1,"ilvany":1}
,"ilany)":{"thermometer":1}
,":thermometer":{"(ilvdisplay*dpy)":1}
,"(ilvdisplay*dpy)":{":temperature":1}
,":temperature":{"(20)":1}
,"(20)":{"acceleration":1}
,"(4)":{"curval":1}
,"(0)":{"timer":1}
,"(dpy":{"200":1}
,"200":{"timerproc":1}
,"this)":{"\u002F\u002Fsee":1}
,"\u002F\u002Fsee":{"note":1}
,"note":{"follows":1,"systems":1,"mechanisms":1}
,"follows":{"{timer.run":1}
,"{timer.run":{"void":1}
,":adjust_temp":{"{temperature":1}
,"{temperature":{"=50.0":1}
,"=50.0":{"(40.0":1}
,"(40.0":{"*sin":1}
,"*sin":{"(degreestoradians":1}
,"(degreestoradians":{"((ildouble)":1}
,"((ildouble)":{"curval)))":1}
,"curval)))":{"curval":1}
,"=(curval":{"acceleration)":1}
,"acceleration)":{"360":1}
,"360":{"void":1}
,":timerproc":{"(ilvtimer*":1}
,"ilany":{"arg)":1}
,"arg)":{"{((thermometer*)":1,"{temperaturewatcher*watcher=(temperaturewatcher*)":1}
,"{((thermometer*)":{"arg)->":1}
,"arg)->":{"adjust_temp":1}
,"systems":{"may":1}
,"raise":{"warning":1}
,"warning":{"construction":1,"may":1}
,"construction":{"above":1,"safe":1}
,"above":{"construction":1}
,"safe":{"however":1}
,"however":{"warning":1,"triggered":1}
,"ignored":{"method":1}
,"method":{"adjust_temp":1,"establishes":1,"slightly":1}
,"called":{"periodically":1}
,"periodically":{"implement":1,"check":1,"update":1}
,"implement":{"dynamics":1,"technique":1,"applications":1}
,"dynamics":{"application":1}
,"notice":{"class":1}
,"offer":{"user-interface":1}
,"user-interface":{"specific":1}
,"specific":{"functionality":1}
,"functionality":{"meant":1}
,"meant":{"function":1}
,"stand-alone":{"piece":1}
,"piece":{"software":1}
,"software":{"work":1}
,"work":{"application":1}
,"objects":{"(in":1,"note":1,"changes":1}
,"(in":{"plant":1}
,"plant":{"simulator":1}
,"simulator":{"instance)":1}
,"instance)":{"nothing":1}
,"nothing":{"done":1}
,"interactive":{"viewing":1}
,"viewing":{"editing":1}
,"editing":{"values":1}
,"values":{"tutorial":1,"thermometer":1,"prototype":1,"void":1}
,"create":{"user":1,"instance":1}
,"without":{"modifying":1}
,"modifying":{"definition":1}
,"definition":{"main":1}
,"main":{"program":1,"function":1,"window)":1}
,"program":{"creating":1}
,"\u002F\u002Fcreate":{"initialize":1}
,"initialize":{"application":1}
,"mythermometer":{"(display)":1,"watches":1,"group":1}
,"(display)":{"defining":1}
,"groupmediator":{"application\u2019s":1,"handles":1}
,"application\u2019s":{"class":1}
,"define":{"subclass":1,"update":1,"asynchronous":1}
,"subclass":{"groupmediator":1}
,"handles":{"thermometer":1}
,"temperaturewatcher":{"public":1,":changevalues":1,":queryvalues":1,"watch":1,"periodically":1}
,"public":{"ilvgroupmediator":1}
,"{temperaturewatcher":{"(ilvgroup*g":1}
,"(ilvgroup*g":{"thermometer*a)":1}
,"thermometer*a)":{"ilvgroupmediator":1}
,"{if":{"tempsymbol)":1,"(locked":1,"[i]":1}
,"tempsymbol)":{"tempsymbol=ilvgetsymbol":1}
,"tempsymbol=ilvgetsymbol":{"temperature":1}
,"accsymbol)":{"accsymbol=ilvgetsymbol":1}
,"accsymbol=ilvgetsymbol":{"acceleration":1}
,"ilboolean":{"changevalues":1,"temperaturewatcher":1}
,"changevalues":{"(const":1,"method":1}
,"(const":{"ilvvalue*":1,"ilvvalue*v":1}
,"ilvvalue*":{"ilvushort)":1}
,"ilvushort)":{"void":1,"const":1}
,"queryvalues":{"(ilvvalue*":1,"method":1}
,"(ilvvalue*":{"ilvushort)":1}
,"const":{"inline":1,"{return":1,"{for":1}
,"inline":{"thermometer*getthermometer":1}
,"thermometer*getthermometer":{"const":1}
,"{return":{"(thermometer*)":1}
,"(thermometer*)":{"getobject":1}
,"getobject":{"static":1}
,"ilvsymbol*tempsymbol":{"static":1}
,"ilvsymbol*accsymbol":{"ilvsymbol*temperaturewatcher":1}
,"ilvsymbol*temperaturewatcher":{":tempsymbol":1,":accsymbol":1}
,":tempsymbol":{"ilvsymbol*temperaturewatcher":1}
,":accsymbol":{"need":1}
,"need":{"define":1,"specify":1}
,"update":{"values":1,"presentation":1,"routine":1,"temperaturewatcher":1,"itself":1}
,"edited":{"user":1}
,"establishes":{"one-to-one":1}
,"one-to-one":{"correspondence":1}
,"correspondence":{"attribute":1,"thermometer":1}
,"attribute":{"values":1}
,"instances":{"thermometer":1}
,"members":{"\u002F\u002Fmethod":1}
,"\u002F\u002Fmethod":{"handling":1,"synchronizes":1}
,"handling":{"user":1}
,"updating":{"application":1}
,":changevalues":{"(const":1}
,"ilvvalue*v":{"ilvushort":1}
,"ilvushort":{"{if":1,"const":1}
,"(locked":{"())":1}
,"())":{"return":1}
,"return":{"ilfalse":1,"iltrue":1}
,"ilfalse":{"(iluint":1}
,"(iluint":{"i=0":1}
,"i=0":{"{if":1}
,"[i]":{".getname":1,"\u002F\u002Fyou":1,"return":1,"=getthermometer":1}
,".getname":{"==accsymbol)":1,"==tempsymbol)":1}
,"==accsymbol)":{"getthermometer":1,"[i]":1}
,"getthermometer":{"()->":1}
,"()->":{"acceleration":1,"temperature":1}
,"=(iluint)":{"[i]":1}
,"\u002F\u002Fyou":{"want":1}
,"editable":{"user":1}
,"\u002F\u002Fif":{"case":1}
,"case":{"following":1}
,"code":{"simply":1,"having":1}
,"simply":{"added":1}
,"\u002F\u002Felse":{"[i]":1}
,"==tempsymbol)":{"\u002F\u002Fgetthermometer":1,"[i]":1}
,"\u002F\u002Fgetthermometer":{"()->":1}
,"=(ilfloat)":{"[i]":1}
,"iltrue":{"need":1}
,"specify":{"prototype":1}
,"reflected":{"user":1}
,"representing":{"\u002F\u002Fmethod":1}
,"synchronizes":{"group":1}
,":queryvalues":{"(ilvvalue*v":1}
,"(ilvvalue*v":{"ilvushort":1}
,"{for":{"(iluint":1}
,"=getthermometer":{"()->":1}
,"representation":{"instantiate":1}
,"instantiate":{"user":1}
,"watches":{"main":1}
,"having":{"retrieved":1,"thermometer":1}
,"retrieved":{"group":1}
,"holder":{"(but":1}
,"(but":{"showing":1}
,"showing":{"main":1}
,"window)":{"temperaturewatcher":1}
,"watch":{"(temprep":1}
,"(temprep":{"&mythermometer)":1}
,"&mythermometer)":{"watch.update":1}
,"watch.update":{"ilvtimer":1}
,"(display":{"200":1}
,"&watch)":{"timer.run":1}
,"timer.run":{"timer":1}
,"state":{"thermometer":1}
,"presentation":{"needed":1}
,"needed":{"synchronizing":1,"meet":1}
,"synchronizing":{"application":1}
,"finally":{"need":1}
,"asynchronous":{"update":1,"observer":1}
,"routine":{"main":1}
,"ilvany":{"arg)":1}
,"{temperaturewatcher*watcher=(temperaturewatcher*)":{"arg":1}
,"arg":{"watcher->":1}
,"watcher->":{"update":1}
,"itself":{"according":1}
,"according":{"current":1,"observer\u002Fobservable":1}
,"current":{"values":1}
,"mechanisms":{"implemented":1}
,"behave":{"according":1}
,"observer\u002Fobservable":{"design":1}
,"able":{"notify":1}
,"notify":{"objects":1}
,"changes":{"method":1}
,"efficient":{"samples":1}
,"samples":{"$ilvhome\u002Fsamples\u002Fprotos":1}
,"$ilvhome\u002Fsamples\u002Fprotos":{"implement":1}
,"technique":{"however":1,"implement":1}
,"triggered":{"asynchronous":1}
,"observer":{"useful":1}
,"useful":{"technique":1}
,"applications":{"real-time":1}
,"real-time":{"constraints":1}
,"constraints":{"time":1}
,"time":{"adjust":1,"constraints":1}
,"adjust":{"rate":1}
,"refreshed":{"needed":1}
,"meet":{"severe":1}
,"severe":{"time":1}
}
;Search.control.loadWordPairs(pairs);
