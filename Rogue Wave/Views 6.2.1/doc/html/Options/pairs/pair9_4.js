var pairs =
{
"structured":{"types":1,"values":1,"type":1}
,"types":{"data":1,"described":1,"fall":1,"table":1,"differ":1,"expects":1,"manage":1,"important":1}
,"data":{"access":1,"types":1}
,"access":{"type":1}
,"type":{"system":1,"associated":1,"manages":1,"structured":1,"return":1}
,"system":{"extended":1,"oracle":1}
,"extended":{"beyond":1}
,"beyond":{"basic":1}
,"basic":{"data":1}
,"described":{"previous":1}
,"previous":{"sections":1}
,"sections":{"occurs":1}
,"occurs":{"automatically":1}
,"automatically":{"structured":1}
,"values":{"obtained":1}
,"obtained":{"database":1,"follows":1}
,"database":{"system":1}
,"oracle":{"(or":1}
,"(or":{"later)":1}
,"later)":{"informix":1}
,"informix":{"9.x":1}
,"9.x":{"structured":1}
,"associated":{"schema":1}
,"schema":{"obtained":1,"identical":1,"returned":1}
,"follows":{"void":1}
,"void":{"describestructuredtype":1}
,"describestructuredtype":{"(const":1}
,"(const":{"ilidatatype*type)":1}
,"ilidatatype*type)":{"{if":1}
,"{if":{"(type->":1}
,"(type->":{"isstructuredtype":1}
,"isstructuredtype":{"())":1}
,"())":{"{const":1,"else":1,"{ilivalue":1,"consequence":1}
,"{const":{"ilischema*schema":1}
,"ilischema*schema":{"=type->":1}
,"=type->":{"getnestedschema":1,"maketable":1}
,"getnestedschema":{"ilvprint":1}
,"ilvprint":{"type":1,"structured":1}
,"manages":{"tables":1,"ilivalue":1,"ilitable":1}
,"tables":{"columns":1,"rows":1}
,"columns":{"schema->":1}
,"schema->":{"getname":1,"getcolumnscount":1}
,"getname":{"(long)":1}
,"(long)":{"schema->":1}
,"getcolumnscount":{"())":1}
,"else":{"ilvprint":1,"{ilvprint":1}
,"ilivalue":{"objects":1,"object":1,"makestructuredvalue":1,"example":1,"class":1,"firstval":1,"secondval":1,"value":1}
,"objects":{"contain":1,"ilivalue":1,"shown":1,"following":1}
,"contain":{"pointer":1}
,"pointer":{"ilitable":1}
,"ilitable":{"object":1,"objects":1}
,"object":{"following":1,"initialized":1,"ilivalue":1,"whose":1,"consequently":1,"types":1,"table":1,"copied":1,"shared":1,"instead":1}
,"following":{"code":1}
,"code":{"sample":1,"excerpt":1}
,"sample":{"shows":1}
,"shows":{"ilivalue":1}
,"initialized":{"ilitable":1}
,"makestructuredvalue":{"(const":1}
,"{ilivalue":{"value":1}
,"value":{"(type)":1,"else":1,"const":1}
,"(type)":{"ilitable*table":1,"ilivalue":1}
,"ilitable*table":{"=type->":1,"=value.astable":1}
,"maketable":{"table->":1,"really":1}
,"table->":{"lock":1,"unlock":1}
,"lock":{"value.importtable":1,"\u002F\u002Falter":1}
,"value.importtable":{"(table)":1,"(temptable)":1}
,"(table)":{"table->":1}
,"unlock":{"return":1}
,"return":{"value":1,"ilivalue":1}
,"{ilvprint":{"structured":1}
,"example":{"uses":1}
,"uses":{"ilidatatype":1}
,"ilidatatype":{":maketable":1,":getnestedschema":1,"maketable":1}
,":maketable":{"member":1}
,"member":{"function":1,"functions":1}
,"function":{"create":1,"table":1}
,"create":{"ilitable":1}
,"whose":{"schema":1}
,"identical":{"schema":1}
,"returned":{"ilidatatype":1}
,":getnestedschema":{"member":1}
,"table":{"returned":1,"note":1,"types":1,"contains":1,"contained":1,"made":1}
,"really":{"ilimemorytable":1}
,"ilimemorytable":{"object":1}
,"consequently":{"row":1}
,"row":{"management":1,"whereas":1}
,"management":{"member":1}
,"functions":{"(insertrow":1,"used":1}
,"(insertrow":{"updaterow":1}
,"updaterow":{"on)":1}
,"on)":{"called":1}
,"called":{"fill":1}
,"fill":{"table":1}
,"note":{"however":1}
,"however":{"structured":1}
,"fall":{"two":1}
,"two":{"categories":1}
,"categories":{"object":1}
,"differ":{"object":1}
,"expects":{"manage":1}
,"manage":{"table":1,"tables":1}
,"contains":{"row":1}
,"whereas":{"table":1}
,"rows":{"isobjecttype":1}
,"isobjecttype":{"istabletype":1}
,"istabletype":{"member":1}
,"used":{"distinguish":1}
,"distinguish":{"object":1}
,"important":{"understand":1}
,"understand":{"ilivalue":1}
,"class":{"manages":1}
,"copied":{"nested":1}
,"nested":{"ilitable":1}
,"shared":{"ilivalue":1}
,"shown":{"following":1}
,"excerpt":{"const":1,"ilivalue":1}
,"const":{"ilidatatype*type":1,"ilitable*table":1}
,"ilidatatype*type":{"ilivalue":1}
,"firstval":{"=makestructuredvalue":1}
,"=makestructuredvalue":{"(type)":1}
,"secondval":{"=firstval":1}
,"=firstval":{"assert":1}
,"assert":{"(firstval.astable":1}
,"(firstval.astable":{"==secondval.astable":1}
,"==secondval.astable":{"())":1}
,"consequence":{"directly":1}
,"directly":{"alter":1}
,"alter":{"table":1}
,"contained":{"ilivalue":1}
,"instead":{"copy":1}
,"copy":{"table":1}
,"made":{"altered":1}
,"altered":{"assigned":1}
,"assigned":{"back":1}
,"back":{"ilivalue":1}
,"=value.astable":{"(table":1}
,"(table":{"!=null)":1}
,"!=null)":{"{ilitable*temptable":1}
,"{ilitable*temptable":{"=table->":1}
,"=table->":{"copytable":1}
,"copytable":{"temptable->":1}
,"temptable->":{"lock":1,"sortrows":1,"unlock":1}
,"\u002F\u002Falter":{"temptable":1}
,"temptable":{"temptable->":1}
,"sortrows":{"value.importtable":1}
,"(temptable)":{"temptable->":1}
}
;Search.control.loadWordPairs(pairs);
